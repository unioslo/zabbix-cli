CLI:
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: Print debug info.
  hidden: true
  name: debug
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Include auth token in the result.
    hidden: false
    human_readable_name: with_auth
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <WITH_AUTH>
    min: null
    multiple: false
    name: with_auth
    nargs: 1
    opts:
    - --auth
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Print debug info.
  usage: debug [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Command name
    hidden: false
    human_readable_name: COMMAND
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <COMMAND>
    min: null
    multiple: false
    name: command
    nargs: 1
    opts:
    - command
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: command
  category: CLI
  deprecated: false
  epilog: ''
  help: Show help for a commmand
  hidden: false
  name: help
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show help for a commmand
  usage: help <COMMAND>
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: Create and initialize config file.
  hidden: false
  name: init
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Location of the config file.
    hidden: false
    human_readable_name: config_file
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <CONFIG_FILE>
    min: null
    multiple: false
    name: config_file
    nargs: 1
    opts:
    - --config-file
    - -c
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: path
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Overwrite existing config
    hidden: false
    human_readable_name: overwrite
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <OVERWRITE>
    min: null
    multiple: false
    name: overwrite
    nargs: 1
    opts:
    - --overwrite
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Zabbix API URL to use.
    hidden: false
    human_readable_name: url
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <URL>
    min: null
    multiple: false
    name: url
    nargs: 1
    opts:
    - --url
    - -u
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Run the interactive wizard to set up the configuration file.
    hidden: false
    human_readable_name: wizard
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <WIZARD>
    min: null
    multiple: false
    name: wizard
    nargs: 1
    opts:
    - --wizard
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-wizard
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create and initialize config file.
  usage: init [OPTIONS]
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: 'Trigger a new login prompt in the REPL.


    Ends the current session before triggering a new login prompt.


    Triggers a login prompt if [option]--username[/] & [option]--password[/] or [option]--token[/]

    is not provided.



    Creates a new auth token file if enabled in the config.'
  hidden: false
  name: login
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Username to log in with.
    hidden: false
    human_readable_name: username
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAME>
    min: null
    multiple: false
    name: username
    nargs: 1
    opts:
    - --username
    - -u
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Password to log in with.
    hidden: false
    human_readable_name: password
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PASSWORD>
    min: null
    multiple: false
    name: password
    nargs: 1
    opts:
    - --password
    - -p
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: API token to log in with.
    hidden: false
    human_readable_name: token
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <TOKEN>
    min: null
    multiple: false
    name: token
    nargs: 1
    opts:
    - --token
    - -t
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Trigger a new login prompt in the REPL.
  usage: login [OPTIONS]
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: 'Migrate a legacy .conf config to a new .toml config.


    The new config file will be created in the default location if no destination
    is specified.

    The new config enables the new JSON format by default.'
  hidden: false
  name: migrate_config
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Location of the config file to migrate.
    hidden: false
    human_readable_name: source
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SOURCE>
    min: null
    multiple: false
    name: source
    nargs: 1
    opts:
    - --source
    - -s
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: path
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Path of the new config file to create. Uses the default config path if not
      specified.
    hidden: false
    human_readable_name: destination
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DESTINATION>
    min: null
    multiple: false
    name: destination
    nargs: 1
    opts:
    - --destination
    - -d
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: path
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Overwrite destination config file if it exists.
    hidden: false
    human_readable_name: overwrite
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <OVERWRITE>
    min: null
    multiple: false
    name: overwrite
    nargs: 1
    opts:
    - --overwrite
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Use legacy JSON format mode in the new config file.
    hidden: false
    human_readable_name: legacy_json
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <LEGACY_JSON>
    min: null
    multiple: false
    name: legacy_json
    nargs: 1
    opts:
    - --legacy-json-format
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Migrate a legacy .conf config to a new .toml config.
  usage: migrate_config [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices:
    - config
    - data
    - logs
    - siteconfig
    - exports
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The type of directory to open.
    hidden: false
    human_readable_name: DIRECTORY_TYPE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <DIRECTORY_TYPE>
    min: null
    multiple: false
    name: directory_type
    nargs: 1
    opts:
    - directory_type
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  category: CLI
  deprecated: false
  epilog: ''
  help: 'Open an app directory in the system''s file manager.


    Use --force to attempt to open when no DISPLAY env var is set.'
  hidden: false
  name: open
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: 'LINUX: Try to open with [option]--command[/] even if no window manager
      is detected.'
    hidden: false
    human_readable_name: force
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <FORCE>
    min: null
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show path instead of opening directory.
    hidden: false
    human_readable_name: path
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <PATH>
    min: null
    multiple: false
    name: path
    nargs: 1
    opts:
    - --path
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Specify command to use to use for opening.
    hidden: false
    human_readable_name: open_command
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <OPEN_COMMAND>
    min: null
    multiple: false
    name: open_command
    nargs: 1
    opts:
    - --command
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Open an app directory in the system's file manager.
  usage: open <DIRECTORY_TYPE> [OPTIONS]
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: Print a sample configuration file.
  hidden: false
  name: sample_config
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Print a sample configuration file.
  usage: sample_config
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: Show the current application configuration.
  hidden: false
  name: show_config
  options:
  - allow_from_autoenv: true
    choices:
    - hide
    - masked
    - plain
    confirmation_prompt: false
    count: false
    default: masked
    envvar: null
    expose_value: true
    flag_value: false
    help: Display mode for secrets.
    hidden: false
    human_readable_name: secrets
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SECRETS>
    min: null
    multiple: false
    name: secrets
    nargs: 1
    opts:
    - --secrets
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show the current application configuration.
  usage: show_config [OPTIONS]
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: Show the default directories used by the application.
  hidden: false
  name: show_dirs
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show the default directories used by the application.
  usage: show_dirs
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: Show the command history.
  hidden: false
  name: show_history
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show the command history.
  usage: show_history [OPTIONS]
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: 'Update the application to the latest version.


    Primarily intended for use with PyInstaller builds, but can also be

    used for updating other installations (except Homebrew).'
  hidden: true
  name: update
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Update the application to the latest version.
  usage: update
- arguments: []
  category: CLI
  deprecated: false
  epilog: ''
  help: 'Update the config file with the current application state.


    Adds missing fields and updates deprecated fields to their new values.'
  hidden: false
  name: update_config
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Location of the config file to update.
    hidden: false
    human_readable_name: config_file
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <CONFIG_FILE>
    min: null
    multiple: false
    name: config_file
    nargs: 1
    opts:
    - --config-file
    - -c
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: path
  - allow_from_autoenv: true
    choices:
    - hide
    - masked
    - plain
    confirmation_prompt: false
    count: false
    default: plain
    envvar: null
    expose_value: true
    flag_value: false
    help: Visibility mode for secrets.
    hidden: false
    human_readable_name: secrets
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SECRETS>
    min: null
    multiple: false
    name: secrets
    nargs: 1
    opts:
    - --secrets
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Skip confirmation prompt.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <FORCE>
    min: null
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Update the config file with the current application state.
  usage: update_config [OPTIONS]
Host:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname or IP
    hidden: false
    human_readable_name: HOSTNAME_OR_IP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_IP>
    min: null
    multiple: false
    name: hostname_or_ip
    nargs: 1
    opts:
    - hostname_or_ip
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host
  deprecated: false
  epilog: ''
  help: 'Create a host.


    Always adds the host to the default host groups specified in the config

    under [configopt]app.commands.create_host.hostgroups[/] unless [option]--no-default-hostgroup[/]
    is specified.


    Selects a random proxy by default unless [option]--proxy[/] [value]"-"[/] is specified.


    Creates an interface for the host by default unless [option]--no-interface[/]
    is specified.'
  hidden: false
  name: create_host
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Hostgroup name(s) or ID(s). Comma-separated.
    hidden: false
    human_readable_name: hostgroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: .+
    envvar: null
    expose_value: true
    flag_value: false
    help: Proxy server used to monitor the host. Supports regular expressions.
    hidden: false
    human_readable_name: proxy
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXY>
    min: null
    multiple: false
    name: proxy
    nargs: 1
    opts:
    - --proxy
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - 'on'
    - 'off'
    - '0'
    - '1'
    confirmation_prompt: false
    count: false
    default: 'on'
    envvar: null
    expose_value: true
    flag_value: false
    help: Host monitoring status.
    hidden: false
    human_readable_name: status
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <STATUS>
    min: null
    multiple: false
    name: status
    nargs: 1
    opts:
    - --status
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Add host to default host groups defined in config.
    hidden: false
    human_readable_name: use_default_hostgroups
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <USE_DEFAULT_HOSTGROUPS>
    min: null
    multiple: false
    name: use_default_hostgroups
    nargs: 1
    opts:
    - --default-hostgroup
    - --default-hostgroups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-default-hostgroup
    - --no-default-hostgroups
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Visible name of the host. Uses hostname or IP if omitted.
    hidden: false
    human_readable_name: name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME>
    min: null
    multiple: false
    name: name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Description of the host.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DESCRIPTION>
    min: null
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Do not create an interface for the host.
    hidden: false
    human_readable_name: create_interface
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <CREATE_INTERFACE>
    min: null
    multiple: false
    name: create_interface
    nargs: 1
    opts:
    - --create-interface
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-create-interface
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a host.
  usage: create_host <HOSTNAME_OR_IP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of host to remove.
    hidden: false
    human_readable_name: HOSTNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME>
    min: null
    multiple: false
    name: hostname
    nargs: 1
    opts:
    - hostname
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host
  deprecated: false
  epilog: ''
  help: Delete a host.
  hidden: false
  name: remove_host
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Delete a host.
  usage: remove_host <HOSTNAME>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname or ID.
    hidden: false
    human_readable_name: HOSTNAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_ID>
    min: null
    multiple: false
    name: hostname_or_id
    nargs: 1
    opts:
    - hostname_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host
  deprecated: false
  epilog: ''
  help: Show a specific host.
  hidden: false
  name: show_host
  options:
  - allow_from_autoenv: true
    choices:
    - unknown
    - available
    - unavailable
    - '0'
    - '1'
    - '2'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Active interface availability.
    hidden: false
    human_readable_name: active
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <ACTIVE>
    min: null
    multiple: false
    name: active
    nargs: 1
    opts:
    - --active
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maintenance status.
    hidden: false
    human_readable_name: maintenance
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <MAINTENANCE>
    min: null
    multiple: false
    name: maintenance
    nargs: 1
    opts:
    - --maintenance
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-maintenance
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Monitoring status.
    hidden: false
    human_readable_name: monitored
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <MONITORED>
    min: null
    multiple: false
    name: monitored
    nargs: 1
    opts:
    - --monitored
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-monitored
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show a specific host.
  usage: show_host <HOSTNAME_OR_ID> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname pattern or ID to filter by. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTNAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_ID>
    min: null
    multiple: false
    name: hostname_or_id
    nargs: 1
    opts:
    - hostname_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host
  deprecated: false
  epilog: ''
  help: "Show all hosts.\n\nHosts can be filtered by agent, monitoring and maintenance\
    \ status.\nHosts are sorted by name.\n\n[bold underline]Examples[/]\n\n  [i]Show\
    \ all monitored (enabled) hosts[/]\n\n    [example]show_hosts --monitored[/]\n\
    \n  [i]Show all hosts with names ending in '.example.com'[/]\n\n    [example]show_hosts\
    \ '*.example.com'[/]\n\n  [i]Show all hosts with names ending in '.example.com'\
    \ or '.example.net'[/]\n\n    [example]show_hosts '*.example.com,*.example.net'[/]\n\
    \n  [i]Show all hosts with names ending in '.example.com' or '.example.net'[/]\n\
    \n    [example]show_hosts '*.example.com,*.example.net'[/]\n\n  [i]Show all hosts\
    \ from a given hostgroup[/]\n\n    [example]show_hosts --hostgroup 'Linux servers'[/]"
  hidden: false
  name: show_hosts
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Hostgroup name(s) or ID(s). Comma-separated.
    hidden: false
    human_readable_name: hostgroup
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUP>
    min: null
    multiple: false
    name: hostgroup
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - unknown
    - available
    - unavailable
    - '0'
    - '1'
    - '2'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Active interface availability.
    hidden: false
    human_readable_name: active
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <ACTIVE>
    min: null
    multiple: false
    name: active
    nargs: 1
    opts:
    - --active
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maintenance status.
    hidden: false
    human_readable_name: maintenance
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <MAINTENANCE>
    min: null
    multiple: false
    name: maintenance
    nargs: 1
    opts:
    - --maintenance
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-maintenance
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Monitoring status.
    hidden: false
    human_readable_name: monitored
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <MONITORED>
    min: null
    multiple: false
    name: monitored
    nargs: 1
    opts:
    - --monitored
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --unmonitored
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all hosts.
  usage: show_hosts <HOSTNAME_OR_ID> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname or IP
    hidden: false
    human_readable_name: HOSTNAME_OR_IP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_IP>
    min: null
    multiple: false
    name: hostname_or_ip
    nargs: 1
    opts:
    - hostname_or_ip
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host
  deprecated: false
  epilog: ''
  help: 'Update basic information about a host.


    Other notable commands to update a host:


    - [command]add_host_to_hostgroup[/]

    - [command]create_host_interface[/]

    - [command]monitor_host[/]

    - [command]remove_host_from_hostgroup[/]

    - [command]update_host_interface[/]

    - [command]update_host_inventory[/]'
  hidden: false
  name: update_host
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Visible name of the host.
    hidden: false
    human_readable_name: name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME>
    min: null
    multiple: false
    name: name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Description of the host.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DESCRIPTION>
    min: null
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Update basic information about a host.
  usage: update_host <HOSTNAME_OR_IP> [OPTIONS]
Host Group:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTS>
    min: null
    multiple: false
    name: hostnames_or_ids
    nargs: 1
    opts:
    - hostnames_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host group names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTGROUPS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - hostgroups
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: "Add hosts to host groups.\n\nHost name and group arguments are interpreted\
    \ as IDs if they are numeric.\n\n[bold underline]Examples[/]\n\n  [i]Add a host\
    \ to a host group[/]\n\n    [example]add_host_to_hostgroup 'My host' 'My host\
    \ group'[/]\n\n  [i]Add multiple hosts to a host group[/]\n\n    [example]add_host_to_hostgroup\
    \ 'host1,host2' 'My host group'[/]\n\n  [i]Add multiple hosts to multiple host\
    \ groups[/]\n\n    [example]add_host_to_hostgroup 'host1,host2' 'My host group,Another\
    \ group'[/]"
  hidden: false
  name: add_host_to_hostgroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Add hosts to host groups.
  usage: add_host_to_hostgroup <HOSTS> <HOSTGROUPS> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of host group.
    hidden: false
    human_readable_name: HOSTGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUP>
    min: null
    multiple: false
    name: hostgroup
    nargs: 1
    opts:
    - hostgroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: "Create a new host group.\n\nAssigns default user group permissions by default.\n\
    \n* [option]--rw-groups[/] defaults to config option [configopt]app.commands.create_hostgroup.rw_groups[/].\n\
    * [option]--ro-groups[/] defaults to config option [configopt]app.commands.create_hostgroup.ro_groups[/].\n\
    * Use [option]--no-default-usergroups[/] to avoid adding user to default user\
    \ groups.\n\n[bold underline]Examples[/]\n\n  [i]Create a host group with default\
    \ user group permissions from config[/]\n\n    [example]create_hostgroup 'My Host\
    \ Group'[/]\n\n  [i]Create a host group with specific RO and RW user group access[/]\n\
    \n    [example]create_hostgroup 'My Host Group' --ro-groups users --rw-groups\
    \ admins[/]\n\n  [i]Create a host group without default user group permissions[/]\n\
    \n    [example]create_hostgroup 'My Host Group' --no-usergroup-permissions[/]"
  hidden: false
  name: create_hostgroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: User group(s) to give read/write permissions. Comma-separated.
    hidden: false
    human_readable_name: rw_groups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <RW_GROUPS>
    min: null
    multiple: false
    name: rw_groups
    nargs: 1
    opts:
    - --rw-groups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: User group(s) to give read-only permissions. Comma-separated.
    hidden: false
    human_readable_name: ro_groups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <RO_GROUPS>
    min: null
    multiple: false
    name: ro_groups
    nargs: 1
    opts:
    - --ro-groups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Assign default user group permissions from configs.
    hidden: false
    human_readable_name: use_default_usergroups
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <USE_DEFAULT_USERGROUPS>
    min: null
    multiple: false
    name: use_default_usergroups
    nargs: 1
    opts:
    - --default-usergroups
    - --usergroup-permissions
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-default-usergroups
    - --no-usergroup-permissions
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a new host group.
  usage: create_hostgroup <HOSTGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group to get hosts from.
    hidden: false
    human_readable_name: SRC_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <SRC_GROUP>
    min: null
    multiple: false
    name: src_group
    nargs: 1
    opts:
    - src_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group(s) to add hosts to. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: DEST_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <DEST_GROUP>
    min: null
    multiple: false
    name: dest_group
    nargs: 1
    opts:
    - dest_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: 'Add all hosts from a host group to other host groups.


    The source group is not modified. Existing hosts in the destination group(s)

    are not removed or modified.'
  hidden: false
  name: extend_hostgroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show hosts and groups without making changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Add all hosts from a host group to other host groups.
  usage: extend_hostgroup <SRC_GROUP> <DEST_GROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group to move hosts from.
    hidden: false
    human_readable_name: SRC_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <SRC_GROUP>
    min: null
    multiple: false
    name: src_group
    nargs: 1
    opts:
    - src_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group to move hosts to.
    hidden: false
    human_readable_name: DEST_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <DEST_GROUP>
    min: null
    multiple: false
    name: dest_group
    nargs: 1
    opts:
    - dest_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: Move all hosts from one host group to another.
  hidden: false
  name: move_hosts
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Rollback changes if hosts cannot be removed from source group afterwards.
    hidden: false
    human_readable_name: rollback
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <ROLLBACK>
    min: null
    multiple: false
    name: rollback
    nargs: 1
    opts:
    - --rollback
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-rollback
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show hosts and groups without making changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Move all hosts from one host group to another.
  usage: move_hosts <SRC_GROUP> <DEST_GROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTS>
    min: null
    multiple: false
    name: hostnames_or_ids
    nargs: 1
    opts:
    - hostnames_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host group names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTGROUPS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - hostgroups
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: "Remove hosts from host groups.\n\n[bold underline]Examples[/]\n\n  [i]Remove\
    \ a host to a host group[/]\n\n    [example]remove_host_from_hostgroup 'My host'\
    \ 'My host group'[/]\n\n  [i]Remove multiple hosts from a host group[/]\n\n  \
    \  [example]remove_host_from_hostgroup 'host1,host2' 'My host group'[/]\n\n  [i]Remove\
    \ multiple hosts from multiple host groups[/]\n\n    [example]remove_host_from_hostgroup\
    \ 'host1,host2' 'My host group,Another group'[/]"
  hidden: false
  name: remove_host_from_hostgroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Remove hosts from host groups.
  usage: remove_host_from_hostgroup <HOSTS> <HOSTGROUPS> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of host group(s) to delete. Comma-separated.
    hidden: false
    human_readable_name: HOSTGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUP>
    min: null
    multiple: false
    name: hostgroup
    nargs: 1
    opts:
    - hostgroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: Delete a host group.
  hidden: false
  name: remove_hostgroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Remove host group even if it contains hosts.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <FORCE>
    min: null
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Delete a host group.
  usage: remove_hostgroup <HOSTGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of host group.
    hidden: false
    human_readable_name: HOSTGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUP>
    min: null
    multiple: false
    name: hostgroup
    nargs: 1
    opts:
    - hostgroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: Show details of a host group.
  hidden: false
  name: show_hostgroup
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show details of a host group.
  usage: show_hostgroup <HOSTGROUP>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host group name(s). Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTGROUPS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - hostgroups
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: 'Show usergroups with permissions for the given hostgroup.


    Shows permissions for all host groups by default.'
  hidden: false
  name: show_hostgroup_permissions
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show usergroups with permissions for the given hostgroup.
  usage: show_hostgroup_permissions <HOSTGROUPS>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: '*'
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of host group(s). Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME>
    min: null
    multiple: false
    name: name
    nargs: 1
    opts:
    - name
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Group
  deprecated: false
  epilog: ''
  help: "Show details for host groups.\n\nFetching all host groups with hosts can\
    \ be extremely slow. It is recommended to\nuse [option]--no-hosts[/] when not\
    \ using a specific name filter.\n\n[bold underline]Examples[/]\n\n  [i]Show all\
    \ host groups (excluding hosts)[/]\n\n    [example]show_hostgroups --no-hosts[/]\n\
    \n  [i]Show all host groups starting with 'Web-'[/]\n\n    [example]show_hostgroups\
    \ 'Web-*'[/]\n\n  [i]Show host groups with 'web' in the name[/]\n\n    [example]show_hostgroups\
    \ '*web*'[/]"
  hidden: false
  name: show_hostgroups
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Show hosts in each host group.
    hidden: false
    human_readable_name: select_hosts
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <SELECT_HOSTS>
    min: null
    multiple: false
    name: select_hosts
    nargs: 1
    opts:
    - --hosts
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-hosts
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show details for host groups.
  usage: show_hostgroups <NAME> [OPTIONS]
Host Interface:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of host to create interface on.
    hidden: false
    human_readable_name: HOSTNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME>
    min: null
    multiple: false
    name: hostname
    nargs: 1
    opts:
    - hostname
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Interface
  deprecated: false
  epilog: ''
  help: "Create a host interface.\n\nCreates an SNMPv2 interface by default. Use --type\
    \ to specify a different type.\nOne of --dns and --ip is required. If both are\
    \ specified, --connection is required.\n\n[b]NOTE:[/] Can only create secondary\
    \ host interfaces for interfaces of types\nthat already have a default interface.\
    \ (API limitation)\n\n[bold underline]Examples[/]\n\n  [i]Create an SNMPv2 interface\
    \ on host 'foo.example.com' with derived DNS name 'foo.example.com' (default)[/]\n\
    \n    [example]create_host_interface foo.example.com[/]\n\n  [i]Create an SNMPv2\
    \ interface on host 'foo.example.com' with IP connection[/]\n\n    [example]create_host_interface\
    \ foo.example.com --type snmp --ip 127.0.0.1[/]\n\n  [i]Create an SNMPv2 interface\
    \ on host 'foo.example.com' with different DNS name[/]\n\n    [example]create_host_interface\
    \ foo.example.com --type snmp --dns snmp.example.com[/]\n\n  [i]Create an SNMPv2\
    \ interface on host 'foo' with both IP and DNS, using DNS as enabled address[/]\n\
    \n    [example]create_host_interface foo --type snmp --connection dns --dns snmp.example.com\
    \ --ip 127.0.0.1[/]\n\n  [i]Create an SNMPv3 interface on host 'foo.example.com'[/]\n\
    \n    [example]create_host_interface foo.example.com --type snmp --snmp-version\
    \ 3 --snmp-context-name mycontext --snmp-security-name myuser --snmp-security-level\
    \ authpriv  --snmp-auth-protocol MD5 --snmp-auth-passphrase mypass --snmp-priv-protocol\
    \ DES --snmp-priv-passphrase myprivpass[/]\n\n  [i]Create an Agent interface on\
    \ host 'foo.example.com'[/]\n\n    [example]create_host_interface foo.example.com\
    \ --type agent[/]"
  hidden: false
  name: create_host_interface
  options:
  - allow_from_autoenv: true
    choices:
    - DNS
    - IP
    - '0'
    - '1'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Interface connection mode. Required if both --ip and --dns are specified.
    hidden: false
    human_readable_name: connection
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <CONNECTION>
    min: null
    multiple: false
    name: connection
    nargs: 1
    opts:
    - --connection
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices:
    - Agent
    - SNMP
    - IPMI
    - JMX
    - '1'
    - '2'
    - '3'
    - '4'
    confirmation_prompt: false
    count: false
    default: SNMP
    envvar: null
    expose_value: true
    flag_value: false
    help: Interface type. SNMP enables --snmp-* options.
    hidden: false
    human_readable_name: type_
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <TYPE_>
    min: null
    multiple: false
    name: type_
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Interface port. Defaults to 10050 for agent, 161 for SNMP, 623 for IPMI,
      and 12345 for JMX.
    hidden: false
    human_readable_name: port
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PORT>
    min: null
    multiple: false
    name: port
    nargs: 1
    opts:
    - --port
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: IP address of interface.
    hidden: false
    human_readable_name: ip
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <IP>
    min: null
    multiple: false
    name: ip
    nargs: 1
    opts:
    - --ip
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: DNS address of interface.
    hidden: false
    human_readable_name: dns
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DNS>
    min: null
    multiple: false
    name: dns
    nargs: 1
    opts:
    - --dns
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Whether this is the default interface.
    hidden: false
    human_readable_name: default
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DEFAULT>
    min: null
    multiple: false
    name: default
    nargs: 1
    opts:
    - --default
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-default
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 2
    envvar: null
    expose_value: true
    flag_value: false
    help: SNMP version.
    hidden: false
    human_readable_name: snmp_version
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: 3
    metavar: <SNMP_VERSION>
    min: 1
    multiple: false
    name: snmp_version
    nargs: 1
    opts:
    - --snmp-version
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: integer range
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Use bulk SNMP requests.
    hidden: false
    human_readable_name: snmp_bulk
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_BULK>
    min: null
    multiple: false
    name: snmp_bulk
    nargs: 1
    opts:
    - --snmp-bulk
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-snmp-bulk
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: '{$SNMP_COMMUNITY}'
    envvar: null
    expose_value: true
    flag_value: false
    help: SNMPv{1,2} community.
    hidden: false
    human_readable_name: snmp_community
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_COMMUNITY>
    min: null
    multiple: false
    name: snmp_community
    nargs: 1
    opts:
    - --snmp-community
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: Max repetitions for SNMPv{2,3} bulk requests.
    hidden: false
    human_readable_name: snmp_max_repetitions
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_MAX_REPETITIONS>
    min: 1
    multiple: false
    name: snmp_max_repetitions
    nargs: 1
    opts:
    - --snmp-max-repetitions
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer range
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 security name.
    hidden: false
    human_readable_name: snmp_security_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_SECURITY_NAME>
    min: null
    multiple: false
    name: snmp_security_name
    nargs: 1
    opts:
    - --snmp-security-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 context name.
    hidden: false
    human_readable_name: snmp_context_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_CONTEXT_NAME>
    min: null
    multiple: false
    name: snmp_context_name
    nargs: 1
    opts:
    - --snmp-context-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - noAuthNoPriv
    - authNoPriv
    - authPriv
    - '0'
    - '1'
    - '2'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 security level.
    hidden: false
    human_readable_name: snmp_security_level
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_SECURITY_LEVEL>
    min: null
    multiple: false
    name: snmp_security_level
    nargs: 1
    opts:
    - --snmp-security-level
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices:
    - MD5
    - SHA1
    - SHA224
    - SHA256
    - SHA384
    - SHA512
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 auth protocol (authNoPriv & authPriv).
    hidden: false
    human_readable_name: snmp_auth_protocol
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_AUTH_PROTOCOL>
    min: null
    multiple: false
    name: snmp_auth_protocol
    nargs: 1
    opts:
    - --snmp-auth-protocol
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 auth passphrase (authNoPriv & authPriv).
    hidden: false
    human_readable_name: snmp_auth_passphrase
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_AUTH_PASSPHRASE>
    min: null
    multiple: false
    name: snmp_auth_passphrase
    nargs: 1
    opts:
    - --snmp-auth-passphrase
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - DES
    - AES
    - AES128
    - AES192
    - AES256
    - AES192C
    - AES256C
    - '0'
    - '1'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 priv protocol (authPriv)
    hidden: false
    human_readable_name: snmp_priv_protocol
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_PRIV_PROTOCOL>
    min: null
    multiple: false
    name: snmp_priv_protocol
    nargs: 1
    opts:
    - --snmp-priv-protocol
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 priv passphrase (authPriv).
    hidden: false
    human_readable_name: snmp_priv_passphrase
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_PRIV_PASSPHRASE>
    min: null
    multiple: false
    name: snmp_priv_passphrase
    nargs: 1
    opts:
    - --snmp-priv-passphrase
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a host interface.
  usage: create_host_interface <HOSTNAME> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of interface to remove.
    hidden: false
    human_readable_name: INTERFACE_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <INTERFACE_ID>
    min: null
    multiple: false
    name: interface_id
    nargs: 1
    opts:
    - interface_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Interface
  deprecated: false
  epilog: ''
  help: Remove a host interface.
  hidden: false
  name: remove_host_interface
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Remove a host interface.
  usage: remove_host_interface <INTERFACE_ID>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname or ID
    hidden: false
    human_readable_name: HOSTNAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_ID>
    min: null
    multiple: false
    name: hostname_or_id
    nargs: 1
    opts:
    - hostname_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Interface
  deprecated: false
  epilog: ''
  help: Show host interfaces.
  hidden: false
  name: show_host_interfaces
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show host interfaces.
  usage: show_host_interfaces <HOSTNAME_OR_ID>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of interface to update.
    hidden: false
    human_readable_name: INTERFACE_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <INTERFACE_ID>
    min: null
    multiple: false
    name: interface_id
    nargs: 1
    opts:
    - interface_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Interface
  deprecated: false
  epilog: ''
  help: "Update a host interface.\n\nHost interface type cannot be changed.\n\n[bold\
    \ underline]Examples[/]\n\n  [i]Update the IP address of interface 123.[/]\n\n\
    \    [example]update_host_interface 123 --ip 127.0.0.1[/]\n\n  [i]Change connection\
    \ type of interface 123 to IP.[/]\n\n    [example]update_host_interface 123 --connection\
    \ ip[/]\n\n  [i]Change SNMP community of interface 234 to 'public'.[/]\n\n   \
    \ [example]update_host_interface 234 --snmp-community public[/]"
  hidden: false
  name: update_host_interface
  options:
  - allow_from_autoenv: true
    choices:
    - DNS
    - IP
    - '0'
    - '1'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Interface connection mode.
    hidden: false
    human_readable_name: connection
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <CONNECTION>
    min: null
    multiple: false
    name: connection
    nargs: 1
    opts:
    - --connection
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Interface port.
    hidden: false
    human_readable_name: port
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PORT>
    min: null
    multiple: false
    name: port
    nargs: 1
    opts:
    - --port
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: IP address of interface.
    hidden: false
    human_readable_name: ip
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <IP>
    min: null
    multiple: false
    name: ip
    nargs: 1
    opts:
    - --ip
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: DNS address of interface.
    hidden: false
    human_readable_name: dns
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DNS>
    min: null
    multiple: false
    name: dns
    nargs: 1
    opts:
    - --dns
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Default interface.
    hidden: false
    human_readable_name: default
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DEFAULT>
    min: null
    multiple: false
    name: default
    nargs: 1
    opts:
    - --default
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-default
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMP version.
    hidden: false
    human_readable_name: snmp_version
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: 3
    metavar: <SNMP_VERSION>
    min: 1
    multiple: false
    name: snmp_version
    nargs: 1
    opts:
    - --snmp-version
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: integer range
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Use bulk SNMP requests.
    hidden: false
    human_readable_name: snmp_bulk
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_BULK>
    min: null
    multiple: false
    name: snmp_bulk
    nargs: 1
    opts:
    - --snmp-bulk
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-snmp-bulk
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv{1,2} community.
    hidden: false
    human_readable_name: snmp_community
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_COMMUNITY>
    min: null
    multiple: false
    name: snmp_community
    nargs: 1
    opts:
    - --snmp-community
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Max repetitions for SNMPv{2,3} bulk requests.
    hidden: false
    human_readable_name: snmp_max_repetitions
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_MAX_REPETITIONS>
    min: 1
    multiple: false
    name: snmp_max_repetitions
    nargs: 1
    opts:
    - --snmp-max-repetitions
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer range
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 security name.
    hidden: false
    human_readable_name: snmp_security_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_SECURITY_NAME>
    min: null
    multiple: false
    name: snmp_security_name
    nargs: 1
    opts:
    - --snmp-security-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 context name.
    hidden: false
    human_readable_name: snmp_context_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_CONTEXT_NAME>
    min: null
    multiple: false
    name: snmp_context_name
    nargs: 1
    opts:
    - --snmp-context-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - noAuthNoPriv
    - authNoPriv
    - authPriv
    - '0'
    - '1'
    - '2'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 security level.
    hidden: false
    human_readable_name: snmp_security_level
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_SECURITY_LEVEL>
    min: null
    multiple: false
    name: snmp_security_level
    nargs: 1
    opts:
    - --snmp-security-level
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices:
    - MD5
    - SHA1
    - SHA224
    - SHA256
    - SHA384
    - SHA512
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 auth protocol (authNoPriv & authPriv).
    hidden: false
    human_readable_name: snmp_auth_protocol
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_AUTH_PROTOCOL>
    min: null
    multiple: false
    name: snmp_auth_protocol
    nargs: 1
    opts:
    - --snmp-auth-protocol
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 auth passphrase (authNoPriv & authPriv).
    hidden: false
    human_readable_name: snmp_auth_passphrase
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_AUTH_PASSPHRASE>
    min: null
    multiple: false
    name: snmp_auth_passphrase
    nargs: 1
    opts:
    - --snmp-auth-passphrase
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - DES
    - AES
    - AES128
    - AES192
    - AES256
    - AES192C
    - AES256C
    - '0'
    - '1'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 priv protocol (authPriv)
    hidden: false
    human_readable_name: snmp_priv_protocol
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_PRIV_PROTOCOL>
    min: null
    multiple: false
    name: snmp_priv_protocol
    nargs: 1
    opts:
    - --snmp-priv-protocol
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: SNMPv3 priv passphrase (authPriv).
    hidden: false
    human_readable_name: snmp_priv_passphrase
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SNMP_PRIV_PASSPHRASE>
    min: null
    multiple: false
    name: snmp_priv_passphrase
    nargs: 1
    opts:
    - --snmp-priv-passphrase
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Update a host interface.
  usage: update_host_interface <INTERFACE_ID> [OPTIONS]
Host Monitoring:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of host
    hidden: false
    human_readable_name: HOSTNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME>
    min: null
    multiple: false
    name: hostname
    nargs: 1
    opts:
    - hostname
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices:
    - 'on'
    - 'off'
    - '0'
    - '1'
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Monitoring status
    hidden: false
    human_readable_name: NEW_STATUS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NEW_STATUS>
    min: null
    multiple: false
    name: new_status
    nargs: 1
    opts:
    - new_status
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: choice
  category: Host Monitoring
  deprecated: false
  epilog: ''
  help: Monitor or unmonitor a host.
  hidden: false
  name: monitor_host
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Monitor or unmonitor a host.
  usage: monitor_host <HOSTNAME> <NEW_STATUS>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname or ID
    hidden: false
    human_readable_name: HOSTNAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_ID>
    min: null
    multiple: false
    name: hostname_or_id
    nargs: 1
    opts:
    - hostname_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Monitoring
  deprecated: false
  epilog: ''
  help: Show host inventory details for a specific host.
  hidden: false
  name: show_host_inventory
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show host inventory details for a specific host.
  usage: show_host_inventory <HOSTNAME_OR_ID>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Item names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: ITEM
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <ITEM>
    min: null
    multiple: false
    name: item
    nargs: 1
    opts:
    - item
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Monitoring
  deprecated: false
  epilog: ''
  help: "Show the last values of given items of monitored hosts.\n\n[bold underline]Examples[/]\n\
    \n  [i]Get items starting with 'MongoDB'[/]\n\n    [example]show_last_values 'MongoDB*'[/]\n\
    \n  [i]Get items containing 'memory'[/]\n\n    [example]show_last_values '*memory*'[/]\n\
    \n  [i]Get all items (WARNING: slow!)[/]\n\n    [example]show_last_values '*'[/]"
  hidden: false
  name: show_last_values
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Group items with the same value.
    hidden: false
    human_readable_name: group
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <GROUP>
    min: null
    multiple: false
    name: group
    nargs: 1
    opts:
    - --group
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show the last values of given items of monitored hosts.
  usage: show_last_values <ITEM> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname or ID of host.
    hidden: false
    human_readable_name: HOSTNAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_ID>
    min: null
    multiple: false
    name: hostname_or_id
    nargs: 1
    opts:
    - hostname_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Inventory key
    hidden: false
    human_readable_name: KEY
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <KEY>
    min: null
    multiple: false
    name: key
    nargs: 1
    opts:
    - key
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Inventory value
    hidden: false
    human_readable_name: VALUE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <VALUE>
    min: null
    multiple: false
    name: value
    nargs: 1
    opts:
    - value
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Host Monitoring
  deprecated: false
  epilog: ''
  help: 'Update a host inventory field.


    Inventory fields in the API do not always match Web GUI field names.

    Use `zabbix-cli -o json show_host_inventory <hostname>` to see the available fields.'
  hidden: false
  name: update_host_inventory
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Update a host inventory field.
  usage: update_host_inventory <HOSTNAME_OR_ID> <KEY> <VALUE>
Import/Export:
- arguments: []
  category: Import/Export
  deprecated: false
  epilog: ''
  help: "Export Zabbix configuration for one or more components.\n\nUses defaults\
    \ from Zabbix-CLI configuration file if not specified.\n\n[b]NOTE:[/] [option]--name[/]\
    \ arguments are globs, not regex patterns.\n\n[b]Filename scheme is as follows:[/]\n\
    \n    [code]DIRECTORY/OBJECT_TYPE/NAME_ID_\\[timestamp].FORMAT[/]\n\n[b]But it\
    \ can be changed to the legacy scheme with [option]--legacy-filenames[/option]:[/b]\n\
    \n    [code]DIRECTORY/OBJECT_TYPE/zabbix_export_OBJECT_TYPE_NAME_ID_\\[timestamp].FORMAT[/]\n\
    \nTimestamps are disabled by default, but can be enabled with [option]--timestamps[/]\
    \ or the [configopt]app.commands.export.timestamps[/]\nconfiguration option.\n\
    \nShows detailed information about exported files in JSON output mode.\n\n[bold\
    \ underline]Examples[/]\n\n  [i]Export everything[/]\n\n    [example]export_configuration[/]\n\
    \n  [i]Export all host groups[/]\n\n    [example]export_configuration --type host_groups[/]\n\
    \n  [i]Export all host groups containing 'Linux'[/]\n\n    [example]export_configuration\
    \ --type host_groups --name '*Linux*'[/]\n\n  [i]Export all template groups and\
    \ templates containing 'Linux' or 'Windows'[/]\n\n    [example]export_configuration\
    \ --type template_groups --type templates --name '*Linux*,*Windows*'[/]"
  hidden: false
  name: export_configuration
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Directory to export configuration to. Overrides directory in config.
    hidden: false
    human_readable_name: directory
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DIRECTORY>
    min: null
    multiple: false
    name: directory
    nargs: 1
    opts:
    - --directory
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: directory
  - allow_from_autoenv: true
    choices:
    - host_groups
    - template_groups
    - hosts
    - images
    - maps
    - templates
    - mediaTypes
    confirmation_prompt: false
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Type(s) of objects to export. Can be specified multiple times. Defaults
      to all object types.
    hidden: false
    human_readable_name: types
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <TYPES,[TYPES...]>
    min: null
    multiple: true
    name: types
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Name(s) of objects to export. Comma-separated list.
    hidden: false
    human_readable_name: names
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <NAMES>
    min: null
    multiple: false
    name: names
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - xml
    - json
    - yaml
    - php
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Format to export to. Overrides export format in config.
    hidden: false
    human_readable_name: format
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <FORMAT>
    min: null
    multiple: false
    name: format
    nargs: 1
    opts:
    - --format
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Add timestamps to exported filenames. Overrides config option.
    hidden: false
    human_readable_name: timestamps
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <TIMESTAMPS>
    min: null
    multiple: false
    name: timestamps
    nargs: 1
    opts:
    - --timestamps
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Pretty-print output. Not supported for XML.
    hidden: false
    human_readable_name: pretty
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <PRETTY>
    min: null
    multiple: false
    name: pretty
    nargs: 1
    opts:
    - --pretty
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Open export directory in file explorer after exporting.
    hidden: false
    human_readable_name: open_dir
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <OPEN_DIR>
    min: null
    multiple: false
    name: open_dir
    nargs: 1
    opts:
    - --open
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Enable best-effort exporting. Print errors but continue exporting.
    hidden: false
    human_readable_name: ignore_errors
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <IGNORE_ERRORS>
    min: null
    multiple: false
    name: ignore_errors
    nargs: 1
    opts:
    - --ignore-errors
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Export Zabbix configuration for one or more components.
  usage: export_configuration [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Path to file or directory to import configuration from. Accepts glob pattern.
      Uses default export directory if not specified.
    hidden: false
    human_readable_name: TO_IMPORT
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TO_IMPORT>
    min: null
    multiple: false
    name: to_import
    nargs: 1
    opts:
    - to_import
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  category: Import/Export
  deprecated: false
  epilog: ''
  help: 'Import Zabbix configuration from file, directory or glob pattern.


    Imports all files in all subdirectories if a directory is specified.

    Uses default export directory if no argument is specified.


    Determines format to import based on file extensions.'
  hidden: false
  name: import_configuration
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview files to import.
    hidden: false
    human_readable_name: dry_run
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRY_RUN>
    min: null
    multiple: false
    name: dry_run
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Create missing objects.
    hidden: false
    human_readable_name: create_missing
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <CREATE_MISSING>
    min: null
    multiple: false
    name: create_missing
    nargs: 1
    opts:
    - --create-missing
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-create-missing
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Update existing objects.
    hidden: false
    human_readable_name: update_existing
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <UPDATE_EXISTING>
    min: null
    multiple: false
    name: update_existing
    nargs: 1
    opts:
    - --update-existing
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-update-existing
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Delete missing objects.
    hidden: false
    human_readable_name: delete_missing
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DELETE_MISSING>
    min: null
    multiple: false
    name: delete_missing
    nargs: 1
    opts:
    - --delete-missing
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-delete-missing
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Enable best-effort importing. Print errors from failed imports but continue
      importing.
    hidden: false
    human_readable_name: ignore_errors
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <IGNORE_ERRORS>
    min: null
    multiple: false
    name: ignore_errors
    nargs: 1
    opts:
    - --ignore-errors
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Import Zabbix configuration from file, directory or glob pattern.
  usage: import_configuration <TO_IMPORT> [OPTIONS]
Macro (Global):
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the macro
    hidden: false
    human_readable_name: NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME>
    min: null
    multiple: false
    name: name
    nargs: 1
    opts:
    - name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Value of the macro
    hidden: false
    human_readable_name: VALUE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <VALUE>
    min: null
    multiple: false
    name: value
    nargs: 1
    opts:
    - value
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Macro (Global)
  deprecated: false
  epilog: ''
  help: Create a global macro.
  hidden: false
  name: define_global_macro
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a global macro.
  usage: define_global_macro <NAME> <VALUE>
- arguments: []
  category: Macro (Global)
  deprecated: false
  epilog: ''
  help: Show all global macros.
  hidden: false
  name: show_global_macros
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all global macros.
  usage: show_global_macros
Macro (Host):
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host to define macro for.
    hidden: false
    human_readable_name: HOSTNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME>
    min: null
    multiple: false
    name: hostname
    nargs: 1
    opts:
    - hostname
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of macro. Names will be converted to the Zabbix format, i.e. [value]site_url[/]
      becomes [value]{$SITE_URL}[/].
    hidden: false
    human_readable_name: MACRO_NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MACRO_NAME>
    min: null
    multiple: false
    name: macro_name
    nargs: 1
    opts:
    - macro_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Default value of macro.
    hidden: false
    human_readable_name: MACRO_VALUE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MACRO_VALUE>
    min: null
    multiple: false
    name: macro_value
    nargs: 1
    opts:
    - macro_value
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Macro (Host)
  deprecated: false
  epilog: ''
  help: "Define a host macro.\n\n[bold underline]Examples[/]\n\n  [i]Create a macro\
    \ named {$SNMP_COMMUNITY} for a host[/]\n\n    [example]define_host_macro foo.example.com\
    \ '{$SNMP_COMMUNITY}' public[/]\n\n  [i]Create a macro named {$SITE_URL} for a\
    \ host (automatic name conversion)[/]\n\n    [example]define_host_macro foo.example.com\
    \ site_url https://example.com[/]"
  hidden: false
  name: define_host_macro
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Define a host macro.
  usage: define_host_macro <HOSTNAME> <MACRO_NAME> <MACRO_VALUE>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of template to define macro for.
    hidden: false
    human_readable_name: TEMPLATE_NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAME>
    min: null
    multiple: false
    name: template_name
    nargs: 1
    opts:
    - template_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of macro. Names will be converted to the Zabbix format, i.e. [value]site_url[/]
      becomes [value]{$SITE_URL}[/].
    hidden: false
    human_readable_name: MACRO_NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MACRO_NAME>
    min: null
    multiple: false
    name: macro_name
    nargs: 1
    opts:
    - macro_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Default value of macro.
    hidden: false
    human_readable_name: MACRO_VALUE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MACRO_VALUE>
    min: null
    multiple: false
    name: macro_value
    nargs: 1
    opts:
    - macro_value
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Macro (Host)
  deprecated: false
  epilog: ''
  help: "Define a template macro.\n\n[bold underline]Examples[/]\n\n  [i]Create a\
    \ macro named {$SNMP_COMMUNITY} with the value 'public' for a template[/]\n\n\
    \    [example]define_template_macro Mytemplate '{$SNMP_COMMUNITY}' public[/]\n\
    \n  [i]Create a macro named {$SITE_URL} with an URL value for a template (automatic\
    \ name conversion)[/]\n\n    [example]define_template_macro Mytemplate site_url\
    \ https://example.com[/]"
  hidden: false
  name: define_template_macro
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Define a template macro.
  usage: define_template_macro <TEMPLATE_NAME> <MACRO_NAME> <MACRO_VALUE>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostname or ID to show macros for
    hidden: false
    human_readable_name: HOSTNAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME_OR_ID>
    min: null
    multiple: false
    name: hostname_or_id
    nargs: 1
    opts:
    - hostname_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Macro (Host)
  deprecated: false
  epilog: ''
  help: Show all macros defined for a host.
  hidden: false
  name: show_host_macros
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all macros defined for a host.
  usage: show_host_macros <HOSTNAME_OR_ID>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of macro to find hosts with. Macro names are automatically formatted,
      e.g. [value]site_url[/] becomes [value]{$SITE_URL}[/].
    hidden: false
    human_readable_name: USERMACRO
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERMACRO>
    min: null
    multiple: false
    name: usermacro
    nargs: 1
    opts:
    - usermacro
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Macro (Host)
  deprecated: false
  epilog: ''
  help: 'Find all hosts with a user macro of the given name.


    Renders a list of the complete macro object and its hosts in JSON mode.'
  hidden: false
  name: show_macro_hosts
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Find all hosts with a user macro of the given name.
  usage: show_macro_hosts <USERMACRO> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the macro to find templates with. Automatically formatted.
    hidden: false
    human_readable_name: MACRO_NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MACRO_NAME>
    min: null
    multiple: false
    name: macro_name
    nargs: 1
    opts:
    - macro_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Macro (Host)
  deprecated: false
  epilog: ''
  help: "Find all templates with a macro of the given name.\n\n[bold underline]Examples[/]\n\
    \n  [i]Show all templates with a user macro named {$SNMP_COMMUNITY}[/]\n\n   \
    \ [example]show_macro_templates SNMP_COMMUNITY[/]"
  hidden: false
  name: show_macro_templates
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Find all templates with a macro of the given name.
  usage: show_macro_templates <MACRO_NAME> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template name or ID to show macros for
    hidden: false
    human_readable_name: TEMPLATE_NAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAME_OR_ID>
    min: null
    multiple: false
    name: template_name_or_id
    nargs: 1
    opts:
    - template_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Macro (Host)
  deprecated: false
  epilog: ''
  help: Show all macros defined for a template.
  hidden: false
  name: show_template_macros
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all macros defined for a template.
  usage: show_template_macros <TEMPLATE_NAME_OR_ID>
Maintenance:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Maintenance name.
    hidden: false
    human_readable_name: NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME>
    min: null
    multiple: false
    name: name
    nargs: 1
    opts:
    - name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Maintenance
  deprecated: false
  epilog: ''
  help: "Create a new one-time maintenance definition.\n\nOne can define an interval\
    \ between two timestamps in ISO format\nor a time period in minutes, hours or\
    \ days from the moment the\ndefinition is created. Periods are assumed to be in\
    \ seconds if no unit is\nspecified. If no period is specified, the default is\
    \ 1 hour.\n\n[bold underline]Examples[/]\n\n  [i]Create a maintenance for a host\
    \ from now for 1 hour (default)[/]\n\n    [example]create_maintenance_definition\
    \ 'My maintenance' --host 'My host'[/]\n\n  [i]Create a maintenance for a host\
    \ group in a specific time period[/]\n\n    [example]create_maintenance_definition\
    \ 'My maintenance' --hostgroup 'Linux servers' --period '2022-12-31T23:00 to 2023-01-01T01:00'[/]\n\
    \n  [i]Create a maintenance definition with all options[/]\n\n    [example]create_maintenance_definition\
    \ 'My maintenance' --hostgroup 'Linux servers' --period '2 hours 30 minutes 15\
    \ seconds' --description 'Maintenance for Linux servers' --data-collection ON[/]"
  hidden: false
  name: create_maintenance_definition
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Description.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DESCRIPTION>
    min: null
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Host(s). Comma-separated.
    hidden: false
    human_readable_name: hosts
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTS>
    min: null
    multiple: false
    name: hosts
    nargs: 1
    opts:
    - --host
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Host group(s). Comma-separated.
    hidden: false
    human_readable_name: hostgroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 1 hour
    envvar: null
    expose_value: true
    flag_value: false
    help: Time period in seconds, minutes, hours, days, or as ISO timestamp.
    hidden: false
    human_readable_name: period
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PERIOD>
    min: null
    multiple: false
    name: period
    nargs: 1
    opts:
    - --period
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - 'on'
    - 'off'
    - '0'
    - '1'
    confirmation_prompt: false
    count: false
    default: 'on'
    envvar: null
    expose_value: true
    flag_value: false
    help: Enable or disable data collection.
    hidden: false
    human_readable_name: data_collection
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DATA_COLLECTION>
    min: null
    multiple: false
    name: data_collection
    nargs: 1
    opts:
    - --data-collection
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a new one-time maintenance definition.
  usage: create_maintenance_definition <NAME> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID(s) of maintenance(s) to remove. Comma-separated.
    hidden: false
    human_readable_name: MAINTENANCE_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MAINTENANCE_ID>
    min: null
    multiple: false
    name: maintenance_id
    nargs: 1
    opts:
    - maintenance_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Maintenance
  deprecated: false
  epilog: ''
  help: Remove a maintenance definition.
  hidden: false
  name: remove_maintenance_definition
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Remove a maintenance definition.
  usage: remove_maintenance_definition <MAINTENANCE_ID>
- arguments: []
  category: Maintenance
  deprecated: false
  epilog: ''
  help: 'Show maintenance definitions for IDs, host groups or hosts.


    At least one of [option]--maintenance-id[/], [option]--hostgroup[/], or [option]--host[/]
    is required.'
  hidden: false
  name: show_maintenance_definitions
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maintenance IDs. Comma-separated.
    hidden: false
    human_readable_name: maintenance_id
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <MAINTENANCE_ID>
    min: null
    multiple: false
    name: maintenance_id
    nargs: 1
    opts:
    - --maintenance-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Host group names. Comma-separated.
    hidden: false
    human_readable_name: hostgroup
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUP>
    min: null
    multiple: false
    name: hostgroup
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Host names. Comma-separated.
    hidden: false
    human_readable_name: host
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOST>
    min: null
    multiple: false
    name: host
    nargs: 1
    opts:
    - --host
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show maintenance definitions for IDs, host groups or hosts.
  usage: show_maintenance_definitions [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Maintenance IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: MAINTENANCE_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MAINTENANCE_ID>
    min: null
    multiple: false
    name: maintenance_id
    nargs: 1
    opts:
    - maintenance_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Maintenance
  deprecated: false
  epilog: ''
  help: 'Show maintenance periods for one or more maintenance definitions.


    Shows all maintenance definitions by default.'
  hidden: false
  name: show_maintenance_periods
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show maintenance periods for one or more maintenance definitions.
  usage: show_maintenance_periods <MAINTENANCE_ID> [OPTIONS]
Media:
- arguments: []
  category: Media
  deprecated: false
  epilog: ''
  help: Show all available media types.
  hidden: false
  name: show_media_types
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all available media types.
  usage: show_media_types
Problem:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Comma-separated list of event ID(s)
    hidden: false
    human_readable_name: EVENT_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <EVENT_IDS>
    min: null
    multiple: false
    name: event_ids
    nargs: 1
    opts:
    - event_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Problem
  deprecated: false
  epilog: ''
  help: Acknowledge events by ID.
  hidden: false
  name: acknowledge_event
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: '[Zabbix-CLI] Acknowledged via acknowledge_events'
    envvar: null
    expose_value: true
    flag_value: false
    help: Message to add to the event
    hidden: false
    human_readable_name: message
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <MESSAGE>
    min: null
    multiple: false
    name: message
    nargs: 1
    opts:
    - --message
    - -m
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Close the event after acknowledging it
    hidden: false
    human_readable_name: close
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <CLOSE>
    min: null
    multiple: false
    name: close
    nargs: 1
    opts:
    - --close
    - -c
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Acknowledge events by ID.
  usage: acknowledge_event <EVENT_IDS> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ''
    hidden: false
    human_readable_name: TRIGGER_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TRIGGER_IDS>
    min: null
    multiple: false
    name: trigger_ids
    nargs: 1
    opts:
    - trigger_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  category: Problem
  deprecated: false
  epilog: ''
  help: "Acknowledge the the last event for the given triggers.\n\n[bold underline]Examples[/]\n\
    \n  [i]Acknowledge the last event for trigger 12345[/]\n\n    [example]acknowledge_trigger_last_event\
    \ 12345[/]\n\n  [i]Acknowledge the last event for trigger 12345 with a message\
    \ and close it[/]\n\n    [example]acknowledge_trigger_last_event 12345 --message\
    \ 'Acked via CLI' --close[/]\n\n  [i]Acknowledge multiple triggers[/]\n\n    [example]acknowledge_trigger_last_event\
    \ 12345,12346[/]"
  hidden: false
  name: acknowledge_trigger_last_event
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Acknowledgement message
    hidden: false
    human_readable_name: message
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <MESSAGE>
    min: null
    multiple: false
    name: message
    nargs: 1
    opts:
    - --message
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Close event
    hidden: false
    human_readable_name: close
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <CLOSE>
    min: null
    multiple: false
    name: close
    nargs: 1
    opts:
    - --close
    - -c
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Acknowledge the the last event for the given triggers.
  usage: acknowledge_trigger_last_event <TRIGGER_IDS> [OPTIONS]
- arguments: []
  category: Problem
  deprecated: false
  epilog: ''
  help: 'Show the latest events for the given triggers, hosts, and/or host groups.


    At least one trigger ID, host or host group must be specified.'
  hidden: false
  name: show_alarms
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Description of alarm(s) to show.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <DESCRIPTION>
    min: null
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - unclassified
    - information
    - warning
    - average
    - high
    - disaster
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Priority of alarm(s) to show.
    hidden: false
    human_readable_name: priority
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PRIORITY>
    min: null
    multiple: false
    name: priority
    nargs: 1
    opts:
    - --priority
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Host group(s) to show alarms for. Comma-separated.
    hidden: false
    human_readable_name: hostgroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Show only alarms whose last event is unacknowledged.
    hidden: false
    human_readable_name: unacknowledged
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <UNACKNOWLEDGED>
    min: null
    multiple: false
    name: unacknowledged
    nargs: 1
    opts:
    - --unack
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --ack
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show the latest events for the given triggers, hosts, and/or host groups.
  usage: show_alarms [OPTIONS]
- arguments: []
  category: Problem
  deprecated: false
  epilog: ''
  help: "Show the latest events for the given triggers, hosts, and/or host groups.\n\
    \nAt least one trigger ID, host or host group must be specified.\n\n[bold underline]Examples[/]\n\
    \n  [i]Show recent events for host foo.example.com[/]\n\n    [example]show_trigger_events\
    \ --host foo.example.com[/]\n\n  [i]Show recent events for hosts in host group\
    \ 'Linux servers'[/]\n\n    [example]show_trigger_events --hostgroup 'Linux servers'[/]\n\
    \n  [i]Show 20 most recent events for triggers 12345 & 12346[/]\n\n    [example]show_trigger_events\
    \ --trigger-id 12345,12346 --limit 20[/]"
  hidden: false
  name: show_trigger_events
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ID of trigger(s) to show events for.
    hidden: false
    human_readable_name: trigger_id
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <TRIGGER_ID>
    min: null
    multiple: false
    name: trigger_id
    nargs: 1
    opts:
    - --trigger-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Host group(s) to show events for.
    hidden: false
    human_readable_name: hostgroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Host(s) to show events for.
    hidden: false
    human_readable_name: hosts
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTS>
    min: null
    multiple: false
    name: hosts
    nargs: 1
    opts:
    - --host
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: Maximum number of events to show.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -l
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show the latest events for the given triggers, hosts, and/or host groups.
  usage: show_trigger_events [OPTIONS]
Proxy:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostnames. Comma-separated Supports wildcards.
    hidden: false
    human_readable_name: HOSTNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME>
    min: null
    multiple: false
    name: hostname
    nargs: 1
    opts:
    - hostname
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy
  deprecated: false
  epilog: ''
  help: 'Clear the proxy for one or more hosts.


    Sets the hosts to be monitored by the Zabbix server instead of a proxy.'
  hidden: false
  name: clear_host_proxy
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-dryrun
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Clear the proxy for one or more hosts.
  usage: clear_host_proxy <HOSTNAME> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Comma delimited list of proxies to share hosts between.
    hidden: false
    human_readable_name: <proxy1,proxy2,...>
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <<PROXY1,PROXY2,...>>
    min: null
    multiple: false
    name: proxy
    nargs: 1
    opts:
    - proxy
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Weights for each proxy. Comma-separated. Defaults to equal weights.
    hidden: false
    human_readable_name: '[weight1,weight2,...]'
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <[WEIGHT1,WEIGHT2,...]>
    min: null
    multiple: false
    name: weight
    nargs: 1
    opts:
    - weight
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy
  deprecated: false
  epilog: ''
  help: "Spread hosts between multiple proxies.\n\nHosts are determined by the hosts\
    \ monitored by the given proxies\nHosts monitored by other proxies or not monitored\
    \ at all are not affected.\n\nWeighting for the load balancing is optional, and\
    \ defaults to equal weights.\nNumber of proxies must match number of weights if\
    \ specified.\n\n[bold underline]Examples[/]\n\n  [i]Load balance hosts evenly\
    \ between two proxies[/]\n\n    [example]load_balance_proxy_hosts proxy1,proxy2[/]\n\
    \n  [i]Place twice as many hosts on proxy1 as proxy2[/]\n\n    [example]load_balance_proxy_hosts\
    \ proxy1,proxy2 2,1[/]\n\n  [i]Load balance hosts evenly between three proxies[/]\n\
    \n    [example]load_balance_proxy_hosts proxy1,proxy2,proxy3[/]\n\n  [i]Load balance\
    \ hosts unevenly between three proxies[/]\n\n    [example]load_balance_proxy_hosts\
    \ proxy1,proxy2,proxy3 1,1,2[/]"
  hidden: false
  name: load_balance_proxy_hosts
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Spread hosts between multiple proxies.
  usage: load_balance_proxy_hosts <<PROXY1,PROXY2,...>> <[WEIGHT1,WEIGHT2,...]>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Proxy to move hosts from.
    hidden: false
    human_readable_name: PROXY_SRC
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXY_SRC>
    min: null
    multiple: false
    name: proxy_src
    nargs: 1
    opts:
    - proxy_src
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Proxy to move hosts to.
    hidden: false
    human_readable_name: PROXY_DST
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXY_DST>
    min: null
    multiple: false
    name: proxy_dst
    nargs: 1
    opts:
    - proxy_dst
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy
  deprecated: false
  epilog: ''
  help: "Move hosts from one proxy to another.\n\n[bold underline]Examples[/]\n\n\
    \  [i]Move all hosts from one proxy to another[/]\n\n    [example]move_proxy_hosts\
    \ proxy1 proxy2[/]\n\n  [i]Move all hosts with names matching a regex pattern[/]\n\
    \n    [example]move_proxy_hosts proxy1 proxy2 --filter '$www.*'[/]"
  hidden: false
  name: move_proxy_hosts
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Regex pattern of hosts to move.
    hidden: false
    human_readable_name: host_filter
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOST_FILTER>
    min: null
    multiple: false
    name: host_filter
    nargs: 1
    opts:
    - --filter
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Move hosts from one proxy to another.
  usage: move_proxy_hosts <PROXY_SRC> <PROXY_DST> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Filter by proxy name or ID. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: NAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME_OR_ID>
    min: null
    multiple: false
    name: name_or_id
    nargs: 1
    opts:
    - name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy
  deprecated: false
  epilog: ''
  help: 'Show all proxies.


    Shows number of hosts for each proxy unless [option]--hosts[/] is passed in,

    in which case the hostnames of each host are displayed instead.'
  hidden: false
  name: show_proxies
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show hostnames of each host for every proxy.
    hidden: false
    human_readable_name: hosts
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTS>
    min: null
    multiple: false
    name: hosts
    nargs: 1
    opts:
    - --hosts
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all proxies.
  usage: show_proxies <NAME_OR_ID> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Proxy name or ID. Supports wildcards.
    hidden: false
    human_readable_name: PROXY
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXY>
    min: null
    multiple: false
    name: proxy
    nargs: 1
    opts:
    - proxy
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy
  deprecated: false
  epilog: ''
  help: Show all hosts with for a given proxy.
  hidden: false
  name: show_proxy_hosts
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all hosts with for a given proxy.
  usage: show_proxy_hosts <PROXY>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostnames. Comma-separated Supports wildcards.
    hidden: false
    human_readable_name: HOSTNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAME>
    min: null
    multiple: false
    name: hostname
    nargs: 1
    opts:
    - hostname
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Proxy name. Supports wildcards.
    hidden: false
    human_readable_name: PROXY
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXY>
    min: null
    multiple: false
    name: proxy
    nargs: 1
    opts:
    - proxy
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy
  deprecated: false
  epilog: ''
  help: 'Assign hosts to a proxy.


    Supports wildcards for both hosts and proxy names.

    If multiple proxies match the proxy name, the first match is used.'
  hidden: false
  name: update_host_proxy
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-dryrun
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Assign hosts to a proxy.
  usage: update_host_proxy <HOSTNAME> <PROXY> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host group(s). Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUP>
    min: null
    multiple: false
    name: hostgroup
    nargs: 1
    opts:
    - hostgroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Proxy to assign. Supports wildcards.
    hidden: false
    human_readable_name: PROXY
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXY>
    min: null
    multiple: false
    name: proxy
    nargs: 1
    opts:
    - proxy
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy
  deprecated: false
  epilog: ''
  help: Assign a proxy to all hosts in one or more host groups.
  hidden: false
  name: update_hostgroup_proxy
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-dryrun
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Assign a proxy to all hosts in one or more host groups.
  usage: update_hostgroup_proxy <HOSTGROUP> <PROXY> [OPTIONS]
Proxy Group:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of proxy to add.
    hidden: false
    human_readable_name: NAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME_OR_ID>
    min: null
    multiple: false
    name: name_or_id
    nargs: 1
    opts:
    - name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of proxy group to add proxy to.
    hidden: false
    human_readable_name: PROXY_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXY_GROUP>
    min: null
    multiple: false
    name: proxy_group
    nargs: 1
    opts:
    - proxy_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Address for active agents.
    hidden: false
    human_readable_name: LOCAL_ADDRESS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <LOCAL_ADDRESS>
    min: null
    multiple: false
    name: local_address
    nargs: 1
    opts:
    - local_address
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Address for active agents.
    hidden: false
    human_readable_name: LOCAL_PORT
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <LOCAL_PORT>
    min: null
    multiple: false
    name: local_port
    nargs: 1
    opts:
    - local_port
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy Group
  deprecated: false
  epilog: ''
  help: "Add a proxy to a proxy group.\n\nRequires a local address and port for active\
    \ agent redirection if\nif the proxy does not have it set.\n\n[bold underline]Examples[/]\n\
    \n  [i]Add a proxy to a proxy group[/]\n\n    [example]add_proxy_to_group proxy1\
    \ group1 192.168.0.2 10051[/]"
  hidden: false
  name: add_proxy_to_group
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Add a proxy to a proxy group.
  usage: add_proxy_to_group <NAME_OR_ID> <PROXY_GROUP> <LOCAL_ADDRESS> <LOCAL_PORT>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of proxy to remove.
    hidden: false
    human_readable_name: NAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME_OR_ID>
    min: null
    multiple: false
    name: name_or_id
    nargs: 1
    opts:
    - name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy Group
  deprecated: false
  epilog: ''
  help: Remove a proxy from a proxy group.
  hidden: false
  name: remove_proxy_from_group
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Remove a proxy from a proxy group.
  usage: remove_proxy_from_group <NAME_OR_ID>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Proxy group name or ID. Supports wildcards.
    hidden: false
    human_readable_name: PROXYGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXYGROUP>
    min: null
    multiple: false
    name: proxygroup
    nargs: 1
    opts:
    - proxygroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy Group
  deprecated: false
  epilog: ''
  help: Show all hosts in a proxy group.
  hidden: false
  name: show_proxy_group_hosts
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all hosts in a proxy group.
  usage: show_proxy_group_hosts <PROXYGROUP>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Filter by proxy name or ID. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: NAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME_OR_ID>
    min: null
    multiple: false
    name: name_or_id
    nargs: 1
    opts:
    - name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy Group
  deprecated: false
  epilog: ''
  help: "Show all proxy groups and their proxies.\n\nOptionally takes in a list of\
    \ names or IDs to filter by.\n\n[bold underline]Examples[/]\n\n  [i]Show all proxy\
    \ groups[/]\n\n    [example]show_proxy_groups[/]\n\n  [i]Show proxy groups with\
    \ a specific proxy[/]\n\n    [example]show_proxy_groups --proxy proxy1[/]\n\n\
    \  [i]Show proxy groups with either proxy1 or proxy2[/]\n\n    [example]show_proxy_groups\
    \ --proxy proxy1,proxy2[/]"
  hidden: false
  name: show_proxy_groups
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Show only groups containing these proxies. Comma-separated.
    hidden: false
    human_readable_name: proxies
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXIES>
    min: null
    multiple: false
    name: proxies
    nargs: 1
    opts:
    - --proxy
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all proxy groups and their proxies.
  usage: show_proxy_groups <NAME_OR_ID> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host group(s). Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUP>
    min: null
    multiple: false
    name: hostgroup
    nargs: 1
    opts:
    - hostgroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Proxy group to assign. Supports wildcards.
    hidden: false
    human_readable_name: PROXYGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <PROXYGROUP>
    min: null
    multiple: false
    name: proxygroup
    nargs: 1
    opts:
    - proxygroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Proxy Group
  deprecated: false
  epilog: ''
  help: Assign a proxy group to all hosts in one or more host groups.
  hidden: false
  name: update_hostgroup_proxygroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-dryrun
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Assign a proxy group to all hosts in one or more host groups.
  usage: update_hostgroup_proxygroup <HOSTGROUP> <PROXYGROUP> [OPTIONS]
Template:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: TEMPLATE_NAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAMES_OR_IDS>
    min: null
    multiple: false
    name: template_names_or_ids
    nargs: 1
    opts:
    - template_names_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostnames or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTNAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAMES_OR_IDS>
    min: null
    multiple: false
    name: hostnames_or_ids
    nargs: 1
    opts:
    - hostnames_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template
  deprecated: false
  epilog: ''
  help: "Link templates to hosts.\n\n[bold underline]Examples[/]\n\n  [i]Link one\
    \ template to one host[/]\n\n    [example]link_template_to_host 'Apache by HTTP'\
    \ foo.example.com[/]\n\n  [i]Link many templates to many hosts[/]\n\n    [example]link_template_to_host\
    \ 'Apache by HTTP,HAProxy by Zabbix agent' foo.example.com,bar.example.com[/]\n\
    \n  [i]Link one template to all hosts[/]\n\n    [example]link_template_to_host\
    \ 'Apache by HTTP' '*'[/]\n\n  [i]Link many templates to all hosts[/]\n\n    [example]link_template_to_host\
    \ 'Apache by HTTP,HAProxy by Zabbix agent' '*'[/]\n\n  [i]Link all templates to\
    \ all hosts [red](use with caution!)[/red][/]\n\n    [example]link_template_to_host\
    \ '*' '*'[/]"
  hidden: false
  name: link_template_to_host
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Fail if any hosts or templates aren't found. Should not be used in conjunction
      with wildcards.
    hidden: false
    human_readable_name: strict
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <STRICT>
    min: null
    multiple: false
    name: strict
    nargs: 1
    opts:
    - --strict
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Link templates to hosts.
  usage: link_template_to_host <TEMPLATE_NAMES_OR_IDS> <HOSTNAMES_OR_IDS> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: SOURCE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <SOURCE>
    min: null
    multiple: false
    name: source
    nargs: 1
    opts:
    - source
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: DEST
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <DEST>
    min: null
    multiple: false
    name: dest
    nargs: 1
    opts:
    - dest
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template
  deprecated: false
  epilog: ''
  help: "Link templates to templates.\n\n[b]NOTE:[/] Destination templates are the\
    \ ones that are ultimately modified. Source templates remain unchanged.\n\n[bold\
    \ underline]Examples[/]\n\n  [i]Link one template to one template[/]\n\n    [example]link_template_to_template\
    \ 'Apache by HTTP' foo_template[/]\n\n  [i]Link many templates to many templates[/]\n\
    \n    [example]link_template_to_template 'Apache by HTTP,HAProxy by Zabbix agent'\
    \ foo_template,bar_template[/]\n\n  [i]Link all templates starting with 'Apache'\
    \ to a template[/]\n\n    [example]link_template_to_template 'Apache*' foo_template[/]\n\
    \n  [i]Link all templates containing 'HTTP' to a subset of templates[/]\n\n  \
    \  [example]link_template_to_template '*HTTP*' 'Webserver-*'[/]"
  hidden: false
  name: link_template_to_template
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Fail if any templates aren't found. Should not be used in conjunction with
      wildcards.
    hidden: false
    human_readable_name: strict
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <STRICT>
    min: null
    multiple: false
    name: strict
    nargs: 1
    opts:
    - --strict
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Do not actually link templates, just show what would be done.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Link templates to templates.
  usage: link_template_to_template <SOURCE> <DEST> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template name or ID. Supports wildcards.
    hidden: false
    human_readable_name: TEMPLATE_NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAME>
    min: null
    multiple: false
    name: template_name
    nargs: 1
    opts:
    - template_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template
  deprecated: false
  epilog: ''
  help: "Show a template's items.\n\n[bold underline]Examples[/]\n\n  [i]Show items\
    \ for a template[/]\n\n    [example]show_items 'Apache by HTTP'[/]"
  hidden: false
  name: show_items
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show a template's items.
  usage: show_items <TEMPLATE_NAME>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template name or ID. Names support wildcards.
    hidden: false
    human_readable_name: TEMPLATE_NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAME>
    min: null
    multiple: false
    name: template_name
    nargs: 1
    opts:
    - template_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template
  deprecated: false
  epilog: ''
  help: Show a template.
  hidden: false
  name: show_template
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show a template.
  usage: show_template <TEMPLATE_NAME>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template name(s) or ID(s). Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: TEMPLATES
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATES>
    min: null
    multiple: false
    name: templates
    nargs: 1
    opts:
    - templates
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template
  deprecated: false
  epilog: ''
  help: 'Show all templates.


    Shows all templates by default. The template name can be a pattern containing
    wildcards.

    Names and IDs cannot be mixed.'
  hidden: false
  name: show_templates
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all templates.
  usage: show_templates <TEMPLATES>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: TEMPLATE_NAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAMES_OR_IDS>
    min: null
    multiple: false
    name: template_names_or_ids
    nargs: 1
    opts:
    - template_names_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Hostnames or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: HOSTNAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTNAMES_OR_IDS>
    min: null
    multiple: false
    name: hostnames_or_ids
    nargs: 1
    opts:
    - hostnames_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template
  deprecated: false
  epilog: ''
  help: "Unlink templates from hosts.\n\nUnlinks and clears by default. Use `--no-clear`\
    \ to unlink without clearing.\n\n[bold underline]Examples[/]\n\n  [i]Unlink a\
    \ template from a host[/]\n\n    [example]unlink_template_from_host 'Apache by\
    \ HTTP' foo.example.com[/]\n\n  [i]Unlink many templates from many hosts[/]\n\n\
    \    [example]unlink_template_from_host 'Apache by HTTP,HAProxy by Zabbix agent'\
    \ foo.example.com,bar.example.com[/]\n\n  [i]Unlink one template from all hosts[/]\n\
    \n    [example]unlink_template_from_host 'Apache by HTTP' '*'[/]\n\n  [i]Unlink\
    \ templates starting with 'Apache' from hosts starting with 'Web'[/]\n\n    [example]unlink_template_from_host\
    \ 'Apache*' 'Web-*'[/]\n\n  [i]Unlink template from host without clearing items\
    \ and triggers[/]\n\n    [example]unlink_template_from_host --no-clear 'Apache\
    \ by HTTP' foo.example.com[/]"
  hidden: false
  name: unlink_template_from_host
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Fail if any hosts or templates aren't found. Should not be used in conjunction
      with wildcards.
    hidden: false
    human_readable_name: strict
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <STRICT>
    min: null
    multiple: false
    name: strict
    nargs: 1
    opts:
    - --strict
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Unlink and clear templates.
    hidden: false
    human_readable_name: clear
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <CLEAR>
    min: null
    multiple: false
    name: clear
    nargs: 1
    opts:
    - --clear
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-clear
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Unlink templates from hosts.
  usage: unlink_template_from_host <TEMPLATE_NAMES_OR_IDS> <HOSTNAMES_OR_IDS> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: SOURCE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <SOURCE>
    min: null
    multiple: false
    name: source
    nargs: 1
    opts:
    - source
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: DEST
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <DEST>
    min: null
    multiple: false
    name: dest
    nargs: 1
    opts:
    - dest
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template
  deprecated: false
  epilog: ''
  help: "Unlink templates from templates.\n\nUnlinks and clears by default. Use `--no-clear`\
    \ to unlink without clearing.\n[b]NOTE:[/] Destination templates are the ones\
    \ that are ultimately modified. Source templates remain unchanged.\n\n[bold underline]Examples[/]\n\
    \n  [i]Unlink one template from one template[/]\n\n    [example]unlink_template_from_template\
    \ 'Apache by HTTP' foo_template[/]\n\n  [i]Unlink many templates from many templates[/]\n\
    \n    [example]unlink_template_from_template 'Apache by HTTP,HAProxy by Zabbix\
    \ agent' foo_template,bar_template[/]\n\n  [i]Unlink all templates starting with\
    \ 'Apache' from a template[/]\n\n    [example]unlink_template_from_template 'Apache*'\
    \ foo_template[/]\n\n  [i]Unlink all templates containing 'HTTP' from a subset\
    \ of templates[/]\n\n    [example]unlink_template_from_template '*HTTP*' 'Web-*'[/]\n\
    \n  [i]Unlink a template without clearing items and triggers[/]\n\n    [example]unlink_template_from_template\
    \ --no-clear foo_template bar_template[/]"
  hidden: false
  name: unlink_template_from_template
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Fail if any templates aren't found. Should not be used in conjunction with
      wildcards.
    hidden: false
    human_readable_name: strict
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <STRICT>
    min: null
    multiple: false
    name: strict
    nargs: 1
    opts:
    - --strict
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Unlink and clear templates.
    hidden: false
    human_readable_name: clear
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <CLEAR>
    min: null
    multiple: false
    name: clear
    nargs: 1
    opts:
    - --clear
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-clear
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Unlink templates from templates.
  usage: unlink_template_from_template <SOURCE> <DEST> [OPTIONS]
Template Group:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: TEMPLATE_NAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAMES_OR_IDS>
    min: null
    multiple: false
    name: template_names_or_ids
    nargs: 1
    opts:
    - template_names_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host/template group names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: GROUP_NAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <GROUP_NAMES_OR_IDS>
    min: null
    multiple: false
    name: group_names_or_ids
    nargs: 1
    opts:
    - group_names_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: 'Add templates to groups.


    [bold]NOTE:[/] Group arguments are interpreted as template groups in >= 6.2,

    otherwise as host groups.'
  hidden: false
  name: add_template_to_group
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Fail if any host groups or templates aren't found. Should not be used in
      conjunction with wildcards.
    hidden: false
    human_readable_name: strict
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <STRICT>
    min: null
    multiple: false
    name: strict
    nargs: 1
    opts:
    - --strict
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Add templates to groups.
  usage: add_template_to_group <TEMPLATE_NAMES_OR_IDS> <GROUP_NAMES_OR_IDS> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the group.
    hidden: false
    human_readable_name: TEMPLATEGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATEGROUP>
    min: null
    multiple: false
    name: templategroup
    nargs: 1
    opts:
    - templategroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: "Create a new template group.\n\nAssigns default user group permissions by\
    \ default.\n\n* [option]--rw-groups[/] defaults to config option [configopt]app.default_admin_usergroups[/].\n\
    * [option]--ro-groups[/] defaults to config option [configopt]app.default_create_user_usergroups[/].\n\
    * Use [option]--no-usergroup-permissions[/] to create a group without any user\
    \ group permissions.\n\n[b]NOTE:[/] Calls [command]create_hostgroup[/] for Zabbix\
    \ versions < 6.2.0.\n\n[bold underline]Examples[/]\n\n  [i]Create a template group\
    \ with default user group permissions[/]\n\n    [example]create_templategroup\
    \ 'My Template Group'[/]\n\n  [i]Create a template group with specific RO and\
    \ RW groups[/]\n\n    [example]create_templategroup 'My Template Group' --ro-groups\
    \ users --rw-groups admins[/]\n\n  [i]Create a template group with no user group\
    \ permissions[/]\n\n    [example]create_templategroup 'My Template Group' --no-usergroup-permissions[/]"
  hidden: false
  name: create_templategroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: User group(s) to give read/write permissions. Comma-separated.
    hidden: false
    human_readable_name: rw_groups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <RW_GROUPS>
    min: null
    multiple: false
    name: rw_groups
    nargs: 1
    opts:
    - --rw-groups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: User group(s) to give read-only permissions. Comma-separated.
    hidden: false
    human_readable_name: ro_groups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <RO_GROUPS>
    min: null
    multiple: false
    name: ro_groups
    nargs: 1
    opts:
    - --ro-groups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Assign default user group permissions from configs.
    hidden: false
    human_readable_name: use_default_usergroups
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <USE_DEFAULT_USERGROUPS>
    min: null
    multiple: false
    name: use_default_usergroups
    nargs: 1
    opts:
    - --default-usergroups
    - --usergroup-permissions
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-default-usergroups
    - --no-usergroup-permissions
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a new template group.
  usage: create_templategroup <TEMPLATEGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group to get templates from.
    hidden: false
    human_readable_name: SRC_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <SRC_GROUP>
    min: null
    multiple: false
    name: src_group
    nargs: 1
    opts:
    - src_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group(s) to add templates to. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: DEST_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <DEST_GROUP>
    min: null
    multiple: false
    name: dest_group
    nargs: 1
    opts:
    - dest_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: 'Add all templates from a group to other groups.


    Interprets the source group as a template group in >= 6.2, otherwise as a host
    group.


    Does not modify the source group or its templates.

    To remove the templates from the source group, use the [command]move_templates[/]
    command instead.'
  hidden: false
  name: extend_templategroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show groups and templates without copying.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Add all templates from a group to other groups.
  usage: extend_templategroup <SRC_GROUP> <DEST_GROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group to move templates from.
    hidden: false
    human_readable_name: SRC_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <SRC_GROUP>
    min: null
    multiple: false
    name: src_group
    nargs: 1
    opts:
    - src_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Group to move templates to.
    hidden: false
    human_readable_name: DEST_GROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <DEST_GROUP>
    min: null
    multiple: false
    name: dest_group
    nargs: 1
    opts:
    - dest_group
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: Move all templates from one group to another.
  hidden: false
  name: move_templates
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Rollback changes if templates cannot be removed from source group afterwards.
    hidden: false
    human_readable_name: rollback
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <ROLLBACK>
    min: null
    multiple: false
    name: rollback
    nargs: 1
    opts:
    - --rollback
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-rollback
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show templates and groups without making changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Move all templates from one group to another.
  usage: move_templates <SRC_GROUP> <DEST_GROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Template names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: TEMPLATE_NAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATE_NAMES_OR_IDS>
    min: null
    multiple: false
    name: template_names_or_ids
    nargs: 1
    opts:
    - template_names_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Host/template group names or IDs. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: GROUP_NAMES_OR_IDS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <GROUP_NAMES_OR_IDS>
    min: null
    multiple: false
    name: group_names_or_ids
    nargs: 1
    opts:
    - group_names_or_ids
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: "Remove templates from groups.\n\n[bold underline]Examples[/]\n\n  [i]Remove\
    \ one template from one group[/]\n\n    [example]remove_template_from_group 'Apache\
    \ by HTTP' foo_group[/]\n\n  [i]Remove many templates from many groups[/]\n\n\
    \    [example]remove_template_from_group 'Apache by HTTP,HAProxy by Zabbix agent'\
    \ foo_group,bar_group[/]\n\n  [i]Remove all templates starting with 'Apache' from\
    \ a group[/]\n\n    [example]remove_template_from_group 'Apache*' foo_group[/]\n\
    \n  [i]Remove all templates containing 'HTTP' from all groups[/]\n\n    [example]remove_template_from_group\
    \ '*HTTP*' '*'[/]"
  hidden: false
  name: remove_template_from_group
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Fail if any host groups or templates aren't found. Should not be used in
      conjunction with wildcards.
    hidden: false
    human_readable_name: strict
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <STRICT>
    min: null
    multiple: false
    name: strict
    nargs: 1
    opts:
    - --strict
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Preview changes.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Remove templates from groups.
  usage: remove_template_from_group <TEMPLATE_NAMES_OR_IDS> <GROUP_NAMES_OR_IDS> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the group to delete.
    hidden: false
    human_readable_name: TEMPLATEGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATEGROUP>
    min: null
    multiple: false
    name: templategroup
    nargs: 1
    opts:
    - templategroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: 'Delete a template group.


    NOTE: Calls [command]remove_hostgroup[/] for Zabbix <6.2.'
  hidden: false
  name: remove_templategroup
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Delete a template group.
  usage: remove_templategroup <TEMPLATEGROUP>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the group to show. Supports wildcards.
    hidden: false
    human_readable_name: TEMPLATEGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATEGROUP>
    min: null
    multiple: false
    name: templategroup
    nargs: 1
    opts:
    - templategroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: Show details for a template group.
  hidden: false
  name: show_templategroup
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Show/hide templates associated with the group.
    hidden: false
    human_readable_name: templates
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATES>
    min: null
    multiple: false
    name: templates
    nargs: 1
    opts:
    - --templates
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-templates
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show details for a template group.
  usage: show_templategroup <TEMPLATEGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of template group(s). Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: NAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <NAME>
    min: null
    multiple: false
    name: name
    nargs: 1
    opts:
    - name
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: Template Group
  deprecated: false
  epilog: ''
  help: "Show template groups.\n\nFetches all groups by default, but can be filtered\
    \ by name.\n\n[bold underline]Examples[/]\n\n  [i]Show all template groups[/]\n\
    \n    [example]show_templategroups[/]\n\n  [i]Show all template groups starting\
    \ with 'Web-'[/]\n\n    [example]show_templategroups 'Web-*'[/]\n\n  [i]Show template\
    \ groups with 'web' in the name[/]\n\n    [example]show_templategroups '*web*'[/]"
  hidden: false
  name: show_templategroups
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Show/hide templates associated with each group.
    hidden: false
    human_readable_name: templates
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATES>
    min: null
    multiple: false
    name: templates
    nargs: 1
    opts:
    - --templates
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-templates
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show template groups.
  usage: show_templategroups <NAME> [OPTIONS]
User:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Email address, SMS number, jabber address, etc.
    hidden: false
    human_readable_name: SENDTO
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <SENDTO>
    min: null
    multiple: false
    name: sendto
    nargs: 1
    opts:
    - sendto
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: A media type name or ID defined in Zabbix. Case-sensitive.
    hidden: false
    human_readable_name: MEDIATYPE
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <MEDIATYPE>
    min: null
    multiple: false
    name: mediatype
    nargs: 1
    opts:
    - mediatype
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User
  deprecated: false
  epilog: ''
  help: "Create a notification user.\n\nNotification users can be used to send notifications\
    \ when a Zabbix\nevent happens.\n\nSometimes we need to send a notification to\
    \ a place not owned by any\nuser in particular, e.g. an email list or jabber channel\
    \ but Zabbix does\nnot provide a way to define a media for a user group.\n\nThis\
    \ is the reason we use [i]notification users[/]. They are users nobody\nowns,\
    \ but that can be used by other users to send notifications to the\nmedia defined\
    \ in the notification user profile.\n\nRun [command]show_media_types[/command]\
    \ to get a list of available media types.\n\nAdds the user to the default user\
    \ group and default notification user group\nunless [option]--usergroups[/option]\
    \ is specified.\n\n[bold underline]Examples[/]\n\n  [i]Create a notification user\
    \ for email reporting[/]\n\n    [example]create_notification_user user@example.com\
    \ Email[/]"
  hidden: false
  name: create_notification_user
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Remarks about the notification user to include in username (max 20 chars).
    hidden: false
    human_readable_name: remarks
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <REMARKS>
    min: null
    multiple: false
    name: remarks
    nargs: 1
    opts:
    - --remarks
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Override generated username. Ignores --remarks.
    hidden: false
    human_readable_name: username
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAME>
    min: null
    multiple: false
    name: username
    nargs: 1
    opts:
    - --username
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Comma-separated list of usergroups to add the user to. Overrides user groups
      in config file.
    hidden: false
    human_readable_name: usergroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUPS>
    min: null
    multiple: false
    name: usergroups
    nargs: 1
    opts:
    - --usergroups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Add the user to the default user groups defined in the config file in addition
      to any groups specified with [option]--usergroups[/]. This is the default behavior.
    hidden: false
    human_readable_name: use_default_usergroups
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <USE_DEFAULT_USERGROUPS>
    min: null
    multiple: false
    name: use_default_usergroups
    nargs: 1
    opts:
    - --default-usergroups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-default-usergroups
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Do not create the user, just show what would be done.
    hidden: false
    human_readable_name: dryrun
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DRYRUN>
    min: null
    multiple: false
    name: dryrun
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a notification user.
  usage: create_notification_user <SENDTO> <MEDIATYPE> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username of the user to create.
    hidden: false
    human_readable_name: USERNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAME>
    min: null
    multiple: false
    name: username
    nargs: 1
    opts:
    - username
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User
  deprecated: false
  epilog: ''
  help: "Create a user.\n\n[bold underline]Examples[/]\n\n  [i]Create a user with\
    \ a random password[/]\n\n    [example]create_user jdoe --firstname John --lastname\
    \ Doe[/]\n\n  [i]Create a user with a specific password[/]\n\n    [example]create_user\
    \ jdoe --firstname John --lastname Doe --passwd 'MyPassword'[/]\n\n  [i]Create\
    \ a user with a password from stdin[/]\n\n    [example]create_user jdoe --firstname\
    \ John --lastname Doe --passwd -[/]\n\n  [i]Create a user with a specific role\
    \ and user groups[/]\n\n    [example]create_user jdoe --firstname John --lastname\
    \ Doe --role admin --groups 'All-admins,Linux-admins'[/]"
  hidden: false
  name: create_user
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: First name of the user to create.
    hidden: false
    human_readable_name: first_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <FIRST_NAME>
    min: null
    multiple: false
    name: first_name
    nargs: 1
    opts:
    - --firstname
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Last name of the user to create.
    hidden: false
    human_readable_name: last_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LAST_NAME>
    min: null
    multiple: false
    name: last_name
    nargs: 1
    opts:
    - --lastname
    - --surname
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Password of the user to create. Set to '-' to prompt for password. Generates
      random password if omitted.
    hidden: false
    human_readable_name: password
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PASSWORD>
    min: null
    multiple: false
    name: password
    nargs: 1
    opts:
    - --passwd
    - --password
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - user
    - admin
    - superadmin
    - guest
    - '1'
    - '2'
    - '3'
    - '4'
    confirmation_prompt: false
    count: false
    default: user
    envvar: null
    expose_value: true
    flag_value: false
    help: Role of the user.
    hidden: false
    human_readable_name: role
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <ROLE>
    min: null
    multiple: false
    name: role
    nargs: 1
    opts:
    - --role
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Enable auto-login for the user.
    hidden: false
    human_readable_name: autologin
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <AUTOLOGIN>
    min: null
    multiple: false
    name: autologin
    nargs: 1
    opts:
    - --autologin
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-autologin
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: '86400'
    envvar: null
    expose_value: true
    flag_value: false
    help: User session lifetime in seconds. Set to 0 to never expire. Can be a time
      unit with suffix (0s, 15m, 1h, 1d, etc.)
    hidden: false
    human_readable_name: autologout
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <AUTOLOGOUT>
    min: null
    multiple: false
    name: autologout
    nargs: 1
    opts:
    - --autologout
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Comma-separated list of user group names or IDs to add the user to.
    hidden: false
    human_readable_name: groups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <GROUPS>
    min: null
    multiple: false
    name: groups
    nargs: 1
    opts:
    - --groups
    - --usergroups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Add the user to the default user groups defined in the config file in addition
      to any groups specified with [option]--groups[/]. This is the default behavior.
    hidden: false
    human_readable_name: use_default_usergroups
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <USE_DEFAULT_USERGROUPS>
    min: null
    multiple: false
    name: use_default_usergroups
    nargs: 1
    opts:
    - --default-usergroups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-default-usergroups
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a user.
  usage: create_user <USERNAME> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username to remove.
    hidden: false
    human_readable_name: USERNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAME>
    min: null
    multiple: false
    name: username
    nargs: 1
    opts:
    - username
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User
  deprecated: false
  epilog: ''
  help: Remove a user.
  hidden: false
  name: remove_user
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Remove a user.
  usage: remove_user <USERNAME>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username of user
    hidden: false
    human_readable_name: USERNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAME>
    min: null
    multiple: false
    name: username
    nargs: 1
    opts:
    - username
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User
  deprecated: false
  epilog: ''
  help: Show a user.
  hidden: false
  name: show_user
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show a user.
  usage: show_user <USERNAME>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Filter by username or ID. Supports wildcards.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAME_OR_ID>
    min: null
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User
  deprecated: false
  epilog: ''
  help: 'Show all users.


    Users can be filtered by name, ID, or role.'
  hidden: false
  name: show_users
  options:
  - allow_from_autoenv: true
    choices:
    - user
    - admin
    - superadmin
    - guest
    - '1'
    - '2'
    - '3'
    - '4'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Filter by role.
    hidden: false
    human_readable_name: role
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <ROLE>
    min: null
    multiple: false
    name: role
    nargs: 1
    opts:
    - --role
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of users shown.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  - allow_from_autoenv: true
    choices:
    - name
    - id
    - role
    confirmation_prompt: false
    count: false
    default: name
    envvar: null
    expose_value: true
    flag_value: false
    help: Sort by field.
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SORT>
    min: null
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all users.
  usage: show_users <USERNAME_OR_ID> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username of the user to update
    hidden: false
    human_readable_name: USERNAME
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAME>
    min: null
    multiple: false
    name: username
    nargs: 1
    opts:
    - username
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User
  deprecated: false
  epilog: ''
  help: "Update a user.\n\nUse [command]add_user_to_usergroup[/command] and [command]remove_user_from_usergroup[/command]\
    \ to manage user groups.\n\n[bold underline]Examples[/]\n\n  [i]Assign new first\
    \ and last name[/]\n\n    [example]update_user jdoe --firstname John --lastname\
    \ Doe[/]\n\n  [i]Promote user to admin[/]\n\n    [example]update_user jdoe --role\
    \ Admin[/]\n\n  [i]Update user's password, prompt for passwords[/]\n\n    [example]update_user\
    \ jdoe --passwd - --old-passwd -[/]\n\n  [i]Update user's password, generate random\
    \ new password[/]\n\n    [example]update_user jdoe --passwd ? --old-passwd -[/]\n\
    \n  [i]Disable autologin for user[/]\n\n    [example]update_user jdoe --no-autologin[/]"
  hidden: false
  name: update_user
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New first name.
    hidden: false
    human_readable_name: first_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <FIRST_NAME>
    min: null
    multiple: false
    name: first_name
    nargs: 1
    opts:
    - --firstname
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New last name.
    hidden: false
    human_readable_name: last_name
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LAST_NAME>
    min: null
    multiple: false
    name: last_name
    nargs: 1
    opts:
    - --lastname
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New password for user. Set to '-' to prompt for password, '?' to generate
      a random password.
    hidden: false
    human_readable_name: new_password
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <NEW_PASSWORD>
    min: null
    multiple: false
    name: new_password
    nargs: 1
    opts:
    - --passwd
    - --new-passwd
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Existing password, required if --passwd is used. Set to '-' to prompt for
      password.
    hidden: false
    human_readable_name: old_password
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <OLD_PASSWORD>
    min: null
    multiple: false
    name: old_password
    nargs: 1
    opts:
    - --old-passwd
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - user
    - admin
    - superadmin
    - guest
    - '1'
    - '2'
    - '3'
    - '4'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: User role.
    hidden: false
    human_readable_name: role
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <ROLE>
    min: null
    multiple: false
    name: role
    nargs: 1
    opts:
    - --role
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Enable/disable auto-login
    hidden: false
    human_readable_name: autologin
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <AUTOLOGIN>
    min: null
    multiple: false
    name: autologin
    nargs: 1
    opts:
    - --autologin
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-autologin
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: boolean
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: User session lifetime in seconds. Set to 0 to never expire. Can be a time
      unit with suffix (0s, 15m, 1h, 1d, etc.)
    hidden: false
    human_readable_name: autologout
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <AUTOLOGOUT>
    min: null
    multiple: false
    name: autologout
    nargs: 1
    opts:
    - --autologout
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Update a user.
  usage: update_user <USERNAME> [OPTIONS]
User Group:
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Usernames to add. Comma-separated.
    hidden: false
    human_readable_name: USERNAMES
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAMES>
    min: null
    multiple: false
    name: usernames
    nargs: 1
    opts:
    - usernames
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: User groups to add the users to. Comma-separated.
    hidden: false
    human_readable_name: USERGROUPS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUPS>
    min: null
    multiple: false
    name: usergroups
    nargs: 1
    opts:
    - usergroups
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: 'Add users to usergroups.


    Users and groups must exist.'
  hidden: false
  name: add_user_to_usergroup
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Add users to usergroups.
  usage: add_user_to_usergroup <USERNAMES> <USERGROUPS>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: User group to give permissions to.
    hidden: false
    human_readable_name: USERGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUP>
    min: null
    multiple: false
    name: usergroup
    nargs: 1
    opts:
    - usergroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: 'Give a user group permissions to host/template groups.


    Run [command]show_hostgroups[/] to get a list of host groups, and

    [command]show_templategroups --no-templates[/] to get a list of template groups.'
  hidden: false
  name: add_usergroup_permissions
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Comma-separated list of host group names.
    hidden: false
    human_readable_name: hostgroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Comma-separated list of template group names.
    hidden: false
    human_readable_name: templategroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATEGROUPS>
    min: null
    multiple: false
    name: templategroups
    nargs: 1
    opts:
    - --templategroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - deny
    - ro
    - rw
    - '0'
    - '2'
    - '3'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Permission to give to the user group.
    hidden: false
    human_readable_name: permission
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PERMISSION>
    min: null
    multiple: false
    name: permission
    nargs: 1
    opts:
    - --permission
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Give a user group permissions to host/template groups.
  usage: add_usergroup_permissions <USERGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the user group to create.
    hidden: false
    human_readable_name: USERGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUP>
    min: null
    multiple: false
    name: usergroup
    nargs: 1
    opts:
    - usergroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: Create a user group.
  hidden: false
  name: create_usergroup
  options:
  - allow_from_autoenv: true
    choices:
    - default
    - internal
    - ldap
    - disable
    - '0'
    - '1'
    - '2'
    - '3'
    confirmation_prompt: false
    count: false
    default: default
    envvar: null
    expose_value: true
    flag_value: false
    help: GUI access for the group.
    hidden: false
    human_readable_name: gui_access
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <GUI_ACCESS>
    min: null
    multiple: false
    name: gui_access
    nargs: 1
    opts:
    - --gui
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Create the user group in a disabled state.
    hidden: false
    human_readable_name: disabled
    is_argument: false
    is_bool_flag: true
    is_eager: false
    is_option: null
    max: null
    metavar: <DISABLED>
    min: null
    multiple: false
    name: disabled
    nargs: 1
    opts:
    - --disabled
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Create a user group.
  usage: create_usergroup <USERGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Usernames to remove. Comma-separated.
    hidden: false
    human_readable_name: USERNAMES
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERNAMES>
    min: null
    multiple: false
    name: usernames
    nargs: 1
    opts:
    - usernames
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: User groups to remove the users from. Comma-separated.
    hidden: false
    human_readable_name: USERGROUPS
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUPS>
    min: null
    multiple: false
    name: usergroups
    nargs: 1
    opts:
    - usergroups
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: 'Remove users from usergroups.


    Ignores users not in user groups. Users and groups must exist.'
  hidden: false
  name: remove_user_from_usergroup
  options: []
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Remove users from usergroups.
  usage: remove_user_from_usergroup <USERNAMES> <USERGROUPS>
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the user group(s) to show. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: USERGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUP>
    min: null
    multiple: false
    name: usergroup
    nargs: 1
    opts:
    - usergroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: "Show one or more user groups by name or ID.\n\n[bold underline]Examples[/]\n\
    \n  [i]Show user group 'Admins'[/]\n\n    [example]show_usergroup Admins[/]\n\n\
    \  [i]Show user groups 'Admins' and 'Operators'[/]\n\n    [example]show_usergroup\
    \ Admins,Operators[/]\n\n  [i]Show all user groups containing 'web' sorted by\
    \ ID[/]\n\n    [example]show_usergroup '*web*' --sort id[/]"
  hidden: false
  name: show_usergroup
  options:
  - allow_from_autoenv: true
    choices:
    - name
    - id
    - users
    confirmation_prompt: false
    count: false
    default: name
    envvar: null
    expose_value: true
    flag_value: false
    help: Sort by field.
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SORT>
    min: null
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show one or more user groups by name or ID.
  usage: show_usergroup <USERGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of user group. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: USERGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUP>
    min: null
    multiple: false
    name: usergroup
    nargs: 1
    opts:
    - usergroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: "Show permissions for one or more user groups.\n\n[bold underline]Examples[/]\n\
    \n  [i]Show permissions for user group 'Admins'[/]\n\n    [example]show_usergroup_permissions\
    \ Admins[/]\n\n  [i]Show permissions for user groups 'Admins' and 'Operators'[/]\n\
    \n    [example]show_usergroup_permissions Admins,Operators[/]\n\n  [i]Show permissions\
    \ for all user groups sorted by ID[/]\n\n    [example]show_usergroup_permissions\
    \ * --sort id[/]"
  hidden: false
  name: show_usergroup_permissions
  options:
  - allow_from_autoenv: true
    choices:
    - name
    - id
    - users
    confirmation_prompt: false
    count: false
    default: name
    envvar: null
    expose_value: true
    flag_value: false
    help: Sort by field.
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SORT>
    min: null
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show permissions for one or more user groups.
  usage: show_usergroup_permissions <USERGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the user group(s) to show. Comma-separated. Supports wildcards.
    hidden: false
    human_readable_name: USERGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUP>
    min: null
    multiple: false
    name: usergroup
    nargs: 1
    opts:
    - usergroup
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: "Show all suser groups.\n\nCan be filtered by name or ID.\n\n[bold underline]Examples[/]\n\
    \n  [i]Show all user groups[/]\n\n    [example]show_usergroups[/]\n\n  [i]Show\
    \ user groups 'Admins' and 'Operators'[/]\n\n    [example]show_usergroup Admins,Operators[/]\n\
    \n  [i]Show all user groups containing 'web' sorted by ID[/]\n\n    [example]show_usergroup\
    \ '*web*' --sort id[/]"
  hidden: false
  name: show_usergroups
  options:
  - allow_from_autoenv: true
    choices:
    - name
    - id
    - users
    confirmation_prompt: false
    count: false
    default: name
    envvar: null
    expose_value: true
    flag_value: false
    help: Sort by field.
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <SORT>
    min: null
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: 0
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit the number of results. 0 to show all.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <LIMIT>
    min: null
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    - -n
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Show all suser groups.
  usage: show_usergroups <USERGROUP> [OPTIONS]
- arguments:
  - allow_from_autoenv: null
    choices: null
    confirmation_prompt: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: User group to give permissions to.
    hidden: false
    human_readable_name: USERGROUP
    is_argument: true
    is_bool_flag: null
    is_eager: false
    is_option: null
    max: null
    metavar: <USERGROUP>
    min: null
    multiple: false
    name: usergroup
    nargs: 1
    opts:
    - usergroup
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show: true
    show_choices: true
    show_default: false
    show_envvar: true
    type: text
  category: User Group
  deprecated: false
  epilog: ''
  help: 'Give a user group permissions to host/template groups.


    Run [command]show_hostgroups[/] to get a list of host groups, and

    [command]show_templategroups --no-templates[/] to get a list of template groups.'
  hidden: true
  name: update_usergroup_permissions
  options:
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Comma-separated list of host group names.
    hidden: false
    human_readable_name: hostgroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <HOSTGROUPS>
    min: null
    multiple: false
    name: hostgroups
    nargs: 1
    opts:
    - --hostgroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices: null
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Comma-separated list of template group names.
    hidden: false
    human_readable_name: templategroups
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <TEMPLATEGROUPS>
    min: null
    multiple: false
    name: templategroups
    nargs: 1
    opts:
    - --templategroup
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
  - allow_from_autoenv: true
    choices:
    - deny
    - ro
    - rw
    - '0'
    - '2'
    - '3'
    confirmation_prompt: false
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Permission to give to the user group.
    hidden: false
    human_readable_name: permission
    is_argument: false
    is_bool_flag: false
    is_eager: false
    is_option: null
    max: null
    metavar: <PERMISSION>
    min: null
    multiple: false
    name: permission
    nargs: 1
    opts:
    - --permission
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show: true
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
  options_metavar: '[OPTIONS]'
  score: 0
  short_help: Give a user group permissions to host/template groups.
  usage: update_usergroup_permissions <USERGROUP> [OPTIONS]
