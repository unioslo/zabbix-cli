{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Zabbix CLI","text":"<p>Zabbix CLI is a command line application for interacting with Zabbix version 6 or later. It is written in Python and uses the Zabbix API to interact with a Zabbix server.</p>"},{"location":"#installation","title":"Installation","text":"uvpipxHomebrewBinary <p>Install with <code>uv</code> to avoid conflicts with other Python packages in your system:</p> <pre><code>uv tool install zabbix-cli-uio\n</code></pre> <p>To try out Zabbix-CLI without installing it, run it directly with <code>uvx</code>:</p> <pre><code>uvx --from zabbix-cli-uio zabbix-cli\n</code></pre> <p>PyPI package name</p> <p>We are in the process of acquiring the PyPI project <code>zabbix-cli</code>. Until then, installation must be done via the alias <code>zabbix-cli-uio</code>.</p> <p>Install with <code>pipx</code> to avoid conflicts with other Python packages in your system:</p> <pre><code>pipx install zabbix-cli-uio\n</code></pre> <p>PyPI package name</p> <p>We are in the process of acquiring the PyPI project <code>zabbix-cli</code>. Until then, installation must be done via the alias <code>zabbix-cli-uio</code>.</p> <p>You can install <code>zabbix-cli</code> with Homebrew:</p> <pre><code>brew install zabbix-cli\n</code></pre> <p>Warning</p> <p>The Homebrew package is maintained by a third party. It may be outdated or contain bugs. For the most up to date version, follow the installation instructions for pipx.</p> <p>Binaries are built with PyInstaller for each release and can be downloaded from the GitHub releases page. Download the correct binary for your platform and save it as <code>zabbix-cli</code>.</p> <p>Linux &amp; macOS</p> <p>Remember to make the binary executable with <code>chmod +x zabbix-cli</code>.</p> <p>For the next steps or ways to customize the installation, head over to the detailed installation guide.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>This page documents all the changes to released versions of Zabbix CLI.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Configuration wizard for creating/updating the configuration file via <code>zabbix-cli init --wizard/--no-wizard</code>.</li> <li>The wizard is enabled by default.</li> <li>Configuration file tables for the following commands:</li> <li><code>create_host</code>: <code>[app.commands.create_host]</code></li> <li><code>create_user</code>: <code>[app.commands.create_user]</code></li> <li><code>create_notification_user</code>: <code>[app.commands.create_notification_user]</code></li> <li><code>export_configuration</code>: <code>[app.commands.export]</code></li> <li><code>import_configuration</code>: <code>[app.commands.export]</code></li> <li>NOTE: <code>export_configuration</code> and <code>import_configuration</code> share the same configuration table to maintain consistency.</li> <li>New option <code>create_user --default-usergroups/--no-default-usergroups</code></li> <li>New option <code>create_notification_user --default-usergroups/--no-default-usergroups</code></li> <li>New command <code>define_template_macro</code> to define a macro for a template.</li> <li>New command <code>show_template_macros</code> to show macros for a template.</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Moved the following config options to the new <code>[app.commands]</code> table:</li> <li><code>app.default_hostgroups</code> \u2192 <code>app.commands.create_host.hostgroups</code></li> <li><code>app.default_admin_usergroups</code> \u2192 <code>app.commands.create_hostgroup.rw_groups</code></li> <li><code>app.default_create_user_usergroups</code> \u2192 <code>app.commands.create_user.usergroups</code> &amp; <code>app.commands.create_hostgroup.ro_groups</code></li> <li><code>app.default_notification_users_usergroups</code> \u2192 <code>app.commands.create_notification_user.usergroups</code></li> <li><code>app.export_directory</code> \u2192 <code>app.commands.export.directory</code></li> <li><code>app.export_format</code> \u2192 <code>app.commands.export.format</code></li> <li><code>app.export_timestamps</code> \u2192 <code>app.commands.export.timestamps</code></li> <li>Removed default value in config for notification user groups (<code>All-notification-users</code>).</li> <li><code>create_notification_user</code> no longer uses the same default user groups as <code>create_user</code>.</li> <li>The default user groups is now set by <code>app.commands.create_notification_user.usergroups</code> in the config file.</li> <li><code>show_hostgroups</code> no longer requires a name argument. Shows all host groups by default.</li> <li>Renamed macro commands. The term \"usermacro\" is a remnant of Zabbix-CLI v2 and only exists as part of the API. In the documentation and web interface, these are simply referred to as \"Macros\" in the global context and \"Host/Template Macros\" in the host/template context.</li> <li><code>define_host_usermacro</code> \u2192 <code>define_host_macro</code></li> <li><code>show_host_usermacros</code> \u2192 <code>show_host_macros</code></li> <li><code>show_usermacro_host_list</code> \u2192 <code>show_macro_hosts</code></li> <li><code>show_usermacro_template_list</code> \u2192 <code>show_macro_templates</code></li> </ul>"},{"location":"changelog/#deprecated","title":"Deprecated","text":"<ul> <li>Deprecated the following config options (moved to the new <code>[app.commands]</code> table):</li> <li><code>app.default_hostgroups</code></li> <li><code>app.default_admin_usergroups</code></li> <li><code>app.default_create_user_usergroups</code></li> <li><code>app.default_notification_users_usergroups</code></li> <li><code>app.export_directory</code></li> <li><code>app.export_format</code></li> <li><code>app.export_timestamps</code></li> <li>Commands containing \"usermacro\" in the name are deprecated in favor of the new names without \"user\":</li> <li><code>define_host_usermacro</code></li> <li><code>show_host_usermacros</code></li> <li><code>show_usermacro_host_list</code></li> <li><code>show_usermacro_template_list</code></li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Proxy groups with macros for <code>min_online</code> causing validation to fail and fallback to a default value of <code>1</code>. Removed this check to allow macros to be used.</li> </ul>"},{"location":"changelog/#internal","title":"Internal","text":"<ul> <li>Replace <code>pre-commit</code> with <code>prek</code>.</li> </ul>"},{"location":"changelog/#353-2025-10-20","title":"3.5.3 - 2025-10-20","text":""},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Force-load typer.rich_utils #312 by @sur5r</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Use stdlib tomllib instead of standalone tomli on Python 3.11+ #306 by @a-detiste</li> </ul>"},{"location":"changelog/#352-2025-04-24","title":"3.5.2 - 2025-04-24","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li><code>create_notification_user --dryrun</code> option to preview changes without making them.</li> <li><code>create_host --create-interface/--no-create-interface</code> option to control creation of interface when creating a host.</li> <li>Persistent configuration of commands via a new config table <code>[app.commands]</code>.</li> <li>Configuration table <code>app.commands.create_host</code> to configure the <code>create_host</code> command.</li> <li>Configuration option <code>app.commands.create_host.create_interface</code> to enable/disable creating interfaces when creating a host.</li> </ul>"},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li><code>create_notification_user</code> now always shows a table of the user that has been created, along with its media types.</li> </ul>"},{"location":"changelog/#351-2025-02-03","title":"3.5.1 - 2025-02-03","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Support for custom CA file bundles for Zabbix API connections. The config option <code>api.verify_ssl</code> now accepts a path to a custom CA file bundle.</li> </ul>"},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li><code>create_maintenance_definition</code> with multiple host groups only including the first group in the maintenance definition for Zabbix &gt;=6.0.</li> <li><code>add_user_to_usergroup</code> and <code>remove_user_from_usergroup</code> using deprecated API parameters for Zabbix &gt;=6.0.</li> <li>Commands that allow multiple names or IDs to be specified should now correctly handle searching for multiple values.</li> </ul>"},{"location":"changelog/#350-2025-01-13","title":"3.5.0 - 2025-01-13","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>Environment variable <code>ZABBIX_URL</code> to specify the URL for the Zabbix API.</li> <li>Session file for storing Zabbix API sessions for multiple URLs and users.</li> <li>This allows for multiple Zabbix instances to be used without re-authenticating.</li> <li>The session file is stored in the application's data directory by default with the name <code>.zabbix-cli_session.json</code>.</li> <li><code>app.use_session_file</code> configuration option to enable or disable session file usage.</li> </ul>"},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>Authentication info from environment variables now take priority over the configuration file.</li> </ul>"},{"location":"changelog/#deprecated_1","title":"Deprecated","text":"<ul> <li>Auth token file. Use the new session file instead. Session files are now created by default if <code>app.use_auth_token_file</code> is set to <code>true</code> in the configuration file.</li> <li><code>app.use_auth_token_file</code> configuration option. Use <code>app.use_session_file</code> instead.</li> </ul>"},{"location":"changelog/#342-2024-12-16","title":"3.4.2 - 2024-12-16","text":""},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li><code>login</code> command re-enabled. It should now behave consistently regardless of configuration and environment.</li> <li><code>login</code> command description updated to reflect its intended usage.</li> <li>Now uses new header-based authentication for Zabbix &gt;=6.4 instead of passing it as a part of the request body.</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Authentication for Zabbix 7.2 and later. The application now correctly determines how to pass in authentication data based on the Zabbix version.</li> </ul>"},{"location":"changelog/#341-2024-12-04","title":"3.4.1 - 2024-12-04","text":""},{"location":"changelog/#changed_5","title":"Changed","text":"<ul> <li><code>create_notification_user</code>: Now adds users to the default user group in addition to the notification user group to match behavior in V2.</li> <li><code>show_media_types</code>: Now shows the formatted string representation of the media type <code>type</code> field instead of an integer.</li> <li>Auth tokens and passwords from API request errors are now masked by default in output.</li> </ul>"},{"location":"changelog/#deprecated_2","title":"Deprecated","text":"<ul> <li><code>login</code> command. It is fundamentally flawed and is slated to be removed in a future version unless a valid use case is presented.</li> <li>Restart the application with a different configuration or launch options to change login methods instead.</li> </ul>"},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Ordering of User commands in the help output.</li> <li>Auth token file being written when logging in with a token.</li> <li>Custom auth token file path not being used when writing auth token file.</li> </ul>"},{"location":"changelog/#340-2024-11-28","title":"3.4.0 - 2024-11-28","text":""},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>New command <code>help</code> to show help for a specific command.</li> <li>New command categories:</li> <li><code>Host Group</code></li> <li><code>Host Interface</code></li> <li><code>Host Monitoring</code></li> <li><code>Macro (Global)</code></li> <li><code>Macro (User)</code></li> <li><code>Media</code></li> <li><code>Proxy Group</code></li> <li><code>Template Group</code></li> </ul>"},{"location":"changelog/#changed_6","title":"Changed","text":"<ul> <li>Commands are now sorted alphabetically within each category.</li> <li>Categories are now split up into more granular sections. See the <code>Added</code> section for the new categories.</li> </ul>"},{"location":"changelog/#deprecated_3","title":"Deprecated","text":"<ul> <li><code>update_usergroup_permissions</code> command. Use <code>add_usergroup_permissions</code> instead.</li> <li>In the future, a <code>remove_usergroup_permissions</code> command will be added to complement the <code>add_usergroup_permissions</code> command instead of complicating the <code>update_usergroup_permissions</code> command.</li> </ul>"},{"location":"changelog/#fixed_5","title":"Fixed","text":"<ul> <li>V2-style <code>-C</code> command invocation shim. Now correctly passes arguments to the new CLI.</li> <li>Internal Typer import error after <code>typer==0.13.0</code>.</li> </ul>"},{"location":"changelog/#330-2024-11-06","title":"3.3.0 - 2024-11-06","text":""},{"location":"changelog/#added_5","title":"Added","text":"<ul> <li>New configuration file table <code>[app.output]</code>:</li> <li><code>format</code>: Default output format for commands. Defaults to <code>\"table\"</code>.</li> <li><code>color</code>: Enable or disable color output. Defaults to <code>true</code>.</li> <li><code>paging</code>: Enable or disable paging of output. Defaults to <code>false</code>.</li> <li><code>theme</code>: Color theme for output. Defaults to <code>\"default\"</code>.</li> <li>Application now automatically assigns deprecated config options to their new equivalents internally.</li> <li>New command <code>update_config</code> to update an outdated configuration file with new options, as well as any currently applied overrides.</li> <li><code>show_config --secrets &lt;hide|mask|plain&gt;</code> option for controlling the display mode of sensitive information in the configuration file. Defaults to <code>mask</code>.</li> <li>New command <code>update_host</code> to update basic information about a host.</li> <li>New command <code>show_proxy_hosts</code> to show hosts monitored by a given proxy.</li> </ul>"},{"location":"changelog/#changed_7","title":"Changed","text":"<ul> <li>Custom auth (token) file paths in config now take precedence over the default path if both exist.</li> <li>Application now prompts for Zabbix API URL if missing from config.</li> <li>Default logging configuration is performed before loading the configuration file. Ensures a default logging configuration is always present.</li> <li>Authentication method + source is now logged on successful authentication.</li> <li>No longer attempts to add a user to the logging context when logging in with an auth token.</li> <li>Require at least one option to be set for <code>update_*</code> commands. Previously, these command would state that the resource was updated even if no changes were made.</li> <li>Command <code>add_proxy_to_group</code> no longer requires a local address and port argument. If not provided, the application attempts to use the proxy's <code>local_address</code> and <code>local_port</code> fields. If the proxy does not have these fields, the command fails.</li> </ul>"},{"location":"changelog/#deprecated_4","title":"Deprecated","text":"<ul> <li>Config options moved to <code>[app.output]</code> table:</li> <li><code>app.use_colors</code> \u2192 <code>app.output.color</code></li> <li><code>app.use_paging</code> \u2192 <code>app.output.paging</code></li> <li><code>app.output_format</code> \u2192 <code>app.output.format</code></li> </ul>"},{"location":"changelog/#320-2024-10-29","title":"3.2.0 - 2024-10-29","text":""},{"location":"changelog/#added_6","title":"Added","text":"<ul> <li>Configurable error handling modes for bulk mode under <code>app.bulk_mode</code>:</li> <li><code>strict</code>: Stop on first error.</li> <li><code>continue</code>: Continue on command execution error, report at the end.</li> <li><code>ignore</code>: Ignore all errors, including command file parsing errors.</li> <li>REPL autocompletion for enums and paths.</li> <li>Auto completion for <code>export_configuration --directory</code> argument.</li> </ul>"},{"location":"changelog/#fixed_6","title":"Fixed","text":"<ul> <li>Screen flickering on application startup when not authenticating via username and password prompt.</li> <li><code>define_host_usermacro</code> not working as expected when using a macro name that already exists elsewhere.</li> </ul>"},{"location":"changelog/#313-2024-10-15","title":"3.1.3 - 2024-10-15","text":""},{"location":"changelog/#fixed_7","title":"Fixed","text":"<ul> <li>Empty macro names not throwing an error in macro commands.</li> <li>Pyinstaller built binary on certain Linux versions.</li> </ul>"},{"location":"changelog/#312-2024-10-01","title":"3.1.2 - 2024-10-01","text":""},{"location":"changelog/#changed_8","title":"Changed","text":"<ul> <li>Reduced source distribution size by excluding unnecessary files.</li> </ul>"},{"location":"changelog/#311-2024-10-01","title":"3.1.1 - 2024-10-01","text":""},{"location":"changelog/#added_7","title":"Added","text":"<ul> <li>Publish to PyPI.</li> </ul>"},{"location":"changelog/#310-2024-09-27","title":"3.1.0 - 2024-09-27","text":""},{"location":"changelog/#added_8","title":"Added","text":"<ul> <li>Plugin support. See the plugins documentation for more information.</li> </ul>"},{"location":"changelog/#changed_9","title":"Changed","text":"<ul> <li><code>--config</code> now always creates the config file at the given location if it doesn't exist.</li> <li><code>show_config</code> now shows the absolute path to the active configuration file.</li> </ul>"},{"location":"changelog/#303-2024-09-16","title":"3.0.3 - 2024-09-16","text":""},{"location":"changelog/#added_9","title":"Added","text":"<ul> <li><code>--limit</code> option for <code>show_*</code> commands to limit the number of results shown:</li> <li><code>show_usermacro_host_list</code></li> <li><code>show_usermacro_template_list</code></li> <li><code>show_maintenance_periods</code></li> </ul>"},{"location":"changelog/#changed_10","title":"Changed","text":"<ul> <li><code>show_host_usermacros</code> rendering of <code>automatic</code> field.</li> <li>Now shows a human readable string instead of <code>0</code> or <code>1</code>.</li> <li>Example formatting.</li> <li>Hide defaults for required positional arguments.</li> <li><code>show_dirs</code> and <code>init</code> no longer requires logging in to the Zabbix API or an existing configuration file.</li> <li>Log record format:</li> <li>No longer includes the process ID.</li> <li>Now includes filename, line number and function name.</li> <li>Rich markup is no longer included in log messages.</li> <li>Accessing the config when it is not loaded now uses the same sample config as <code>sample_config</code> instead of raising an exception.</li> </ul>"},{"location":"changelog/#fixed_8","title":"Fixed","text":"<ul> <li><code>show_usermacro_host_list</code> not showing all hosts with the given macro.</li> <li><code>show_usermacro_template_list</code> not showing all templates with the given macro.</li> <li>Auth token file using username from config file instead of from prompt.</li> </ul>"},{"location":"changelog/#302-2024-09-06","title":"3.0.2 - 2024-09-06","text":""},{"location":"changelog/#added_10","title":"Added","text":"<ul> <li><code>show_hosts</code>: <code>--hostgroup</code> option for filtering by host group names or IDs.</li> <li><code>show_last_values</code>: ` Item ID filtering.</li> <li><code>show_usergroup</code>: Group ID filtering.</li> <li><code>show_usergroups</code>: Group name or ID filtering.</li> <li><code>show_users</code>: <code>--sort</code> option for sorting results by a field.</li> <li>Status messages when fetching data from the Zabbix API in most <code>show_*</code> commands.</li> <li><code>--limit</code> option for most <code>show_*</code> commands to limit the number of results shown.</li> <li>Environment variable <code>ZABBIX_API_TOKEN</code> for logging in with an API token.</li> </ul>"},{"location":"changelog/#fixed_9","title":"Fixed","text":"<ul> <li>Markup errors when rendering Zabbix items with keys containing special characters.</li> <li>Environment variables not matching V2 names.</li> <li>Before: <code>ZABBIX_CLI_USERNAME</code>, <code>ZABBIX_CLI_PASSWORD</code></li> <li>After: <code>ZABBIX_USERNAME</code>, <code>ZABBIX_PASSWORD</code></li> </ul>"},{"location":"changelog/#301-2024-09-05","title":"3.0.1 - 2024-09-05","text":""},{"location":"changelog/#changed_11","title":"Changed","text":"<ul> <li><code>migrate_config</code> no longer requires logging in to the Zabbix API.</li> </ul>"},{"location":"changelog/#fixed_10","title":"Fixed","text":"<ul> <li><code>migrate_config</code> not migrating username to the new <code>api.username</code> field in the resulting TOML configuration file.</li> <li><code>migrate_config</code> using <code>legacy_json_format = true</code> in the resulting TOML configuration file by default.</li> <li>Can force the old JSON format with the new <code>--legacy-json-format</code> flag.</li> </ul>"},{"location":"changelog/#300-2024-09-02","title":"3.0.0 - 2024-09-02","text":""},{"location":"changelog/#added_11","title":"Added","text":"<ul> <li>New CLI powered by <code>typer</code> and <code>click-repl</code></li> <li>Shell autocompletion</li> <li>TOML configuration file support</li> <li>Old configuration format is deprecated.</li> <li>Usage examples for most commands.</li> <li>New configuration options:</li> <li><code>app.default_format</code>: Sets the default CLI output format. Defaults to <code>table</code>.</li> <li><code>app.legacy_json_format</code>: Enables the old JSON output format. Defaults to <code>false</code>.</li> <li>New commands:</li> <li><code>add_proxy_to_group</code>: Add a proxy to a proxy group.</li> <li><code>create_templategroup</code>: Create a template group.</li> <li><code>extend_hostgroup</code>: Add all hosts from a host group to other host group(s) without removing them from the original group.</li> <li><code>extend_templategroup</code>: Add all templates from a group to other group(s) without removing them from the original group.</li> <li><code>init</code>: Initialize the CLI configuration file.</li> <li><code>link_template_to_template</code>: Link template(s) to template(s).</li> <li><code>move_hosts</code>: Move all hosts from one host group to another.</li> <li><code>move_templates</code>: Move all templates from one group to another.</li> <li><code>open</code>: Open a CLI directory in the system's file manager.</li> <li><code>remove_hostgroup</code>: Delete a host group.</li> <li><code>remove_host_interface</code>: Delete a host interface.</li> <li><code>remove_proxy_from_group</code>: Remove a proxy from a proxy group.</li> <li><code>remove_templategroup</code>: Delete a template group.</li> <li><code>show_dirs</code>: Show directories used by the CLI.</li> <li><code>show_host_interfaces</code>: Show interfaces for a host.</li> <li><code>show_media_types</code>: Show media types.</li> <li><code>show_proxies</code>: Show proxies.</li> <li><code>show_proxy_groups</code>: Show proxy groups.</li> <li><code>show_proxy_group_hosts</code>: Show hosts in a proxy group.</li> <li><code>show_templategroup</code>: Show a single template group.</li> <li><code>show_templategroups</code>: Show all template groups.</li> <li><code>show_user</code>: Show details for a single user.</li> <li><code>unlink_template_from_template</code>: Unlink template(s) from template(s).</li> <li><code>update_host_interface</code>: Update a host interface.</li> <li><code>update_user</code>: Update a user.</li> <li><code>update_hostgroup_proxy</code>: Assign a proxy to all hosts in one or more host groups.</li> <li><code>update_hostgroup_proxygroup</code>: Assign a proxy group to all hosts in one or more host groups.</li> <li>New command options:</li> <li><code>add_host_to_hostgroup</code>:<ul> <li><code>--dryrun</code>: Preview changes without making them.</li> </ul> </li> <li><code>create_host</code>:<ul> <li><code>--name</code>: Host name</li> <li>Host name still defaults to host DNS name or IP address if not specified.</li> <li><code>--description</code>: Host description</li> </ul> </li> <li><code>create_hostgroup</code>:<ul> <li><code>--rw-groups</code>: User groups to give RW permissions to the host group.</li> <li><code>--ro-groups</code>: User groups to give RO permissions to the host group. Uses groups from config file if not specified.</li> <li><code>--no-usergroup-permissions</code>: Do not set user group permissions. Defaults to <code>false</code>.</li> </ul> </li> <li><code>create_host_interface</code>:<ul> <li><code>--snmp...</code> TODO</li> </ul> </li> <li><code>import_configuration</code>:<ul> <li><code>--dryrun</code>: Preview files to import.</li> <li><code>--delete-missing</code>: Delete objects not found in the import file(s).</li> </ul> </li> <li><code>link_template_to_host</code>:<ul> <li><code>--dryrun</code>: Preview changes without making them.</li> </ul> </li> <li><code>remove_host_from_hostgroup</code>:<ul> <li><code>--dryrun</code>: Preview changes without making them.</li> </ul> </li> <li><code>show_host</code>:<ul> <li><code>--monitored/--unmonitored</code>: Filter by monitored status</li> <li><code>--maintenance/--no-maintenance</code>: Filter by maintenance status</li> <li><code>--active [available | unavailable | unknown ]</code>: Filter by active interface availability</li> <li>Old positional filter argument syntax is deprecated.</li> </ul> </li> <li><code>show_hosts</code>:<ul> <li><code>--limit</code>: Limit number of hosts to show.</li> <li>As well as the new <code>show_host</code> options.</li> </ul> </li> <li><code>show_hostgroup</code>:<ul> <li><code>--hosts/--no-hosts</code>: Show hosts in the group</li> </ul> </li> <li><code>show_hostgroups</code>:<ul> <li><code>--hosts/--no-hosts</code>: Show hosts in the group</li> </ul> </li> <li><code>show_trigger_events</code><ul> <li><code>--trigger-id</code>: Trigger ID(s) to get events for.</li> <li>Corresponds to old positional argument 1.</li> <li><code>--host</code>: Host(s) to get events for.</li> <li><code>--hostgroup</code>: Host group(s) to get events for.</li> <li><code>--limit</code>: Limit number of events to show</li> <li>Corresponds to old positional argument 2.</li> <li>Defaults to 10 (was 1).</li> </ul> </li> <li><code>show_usergroup</code>:<ul> <li><code>--sort</code>: Sort results by a field.</li> </ul> </li> <li><code>show_usergroups</code>:<ul> <li><code>--sort</code>: Sort results by a field.</li> </ul> </li> <li><code>show_usergroup_permissions</code>:<ul> <li><code>--sort</code>: Sort results by a field.</li> </ul> </li> <li><code>unlink_template_from_host</code>:<ul> <li><code>--dryrun</code>: Preview changes.</li> </ul> </li> <li><code>update_host_proxy</code>:<ul> <li><code>--dryrun</code>: Preview changes.</li> </ul> </li> <li>New command arguments:</li> <li><code>show_templates</code>:<ul> <li><code>template_names</code>: Template name(s) to filter by. Shows all templates by default. Supports wildcards.</li> </ul> </li> <li><code>show_hostgroup</code>:<ul> <li><code>name</code>: Host group name(s) to filter by. Shows all host groups by default. Supports wildcards.</li> </ul> </li> </ul>"},{"location":"changelog/#changed_12","title":"Changed","text":"<ul> <li>Commands now take named options instead of positional arguments.</li> <li>Positional arguments are deprecated.</li> <li>JSON output is no longer always a dict with numeric string keys.</li> <li>See V3 migration guide for more information.</li> <li>The old format can be enabled with the new option <code>app.legacy_json_format</code> in the new TOML configuration file.</li> <li>When loading configuration from a legacy <code>.conf</code> file, the old format is assumed.</li> <li>TOML configuration file option names:</li> <li>Table [zabbix_api] \u2192 [api]<ul> <li><code>zabbix_api_url</code> \u2192 <code>url</code></li> <li><code>cert_verify</code> \u2192 <code>verify_ssl</code></li> </ul> </li> <li>Table [zabbix_config] \u2192 [app]<ul> <li><code>system_id</code> \u2192 <code>username</code></li> <li><code>default_directory_exports</code> \u2192 <code>export_directory</code></li> <li><code>default_export_format</code> \u2192 <code>export_format</code></li> <li><code>include_timestamp_export_filename</code> \u2192 <code>export_timestamps</code></li> <li><code>allow_insecure_authfile</code> \u2192 <code>allow_insecure_auth_file</code></li> </ul> </li> <li><code>logging.logging</code> \u2192 <code>logging.enabled</code></li> <li>The original names are deprecated and slated for removal in a future version.</li> <li>Configuration file defaults:</li> <li><code>app.default_admin_usergroups</code> defaults to <code>[]</code> (empty list)</li> <li><code>app.default_create_user_usergroups</code> defaults to <code>[]</code> (empty list)</li> <li><code>app.export_timestamps</code> defaults to <code>false</code><ul> <li>Exports are automatically overwritten if the file already exists.</li> </ul> </li> <li><code>app.export_format</code> defaults to <code>json</code> (was <code>xml</code>)</li> <li>Application now creates a config file on launch if it doesn't exist.</li> <li>Command changes:</li> <li><code>create_host_interface</code><ul> <li>Default port number is now determined by interface type.</li> <li>Agent: 10050</li> <li>SNMP: 161</li> <li>IPMI: 623</li> <li>JMX: 12345</li> </ul> </li> <li><code>define_host_monitoring_status</code>:<ul> <li>Renamed to <code>monitor_host</code>.</li> </ul> </li> <li><code>link_template_to_hostgroup</code>:<ul> <li>Renamed to <code>add_template_to_group</code>.</li> </ul> </li> <li><code>show_host_inventory</code><ul> <li>Now shows shows any inventory field that is set for the host in the table output.</li> <li>Includes all inventory fields in JSON output.</li> </ul> </li> <li><code>show_hostgroup_permissions</code>:<ul> <li>Shows permissions for all host groups by default.</li> </ul> </li> <li><code>show_proxies</code>:<ul> <li>Now takes a <code>name_or_id</code> argument to filter by proxy name or ID. Comma-separated. Supports wildcards.</li> </ul> </li> <li><code>show_zabbixcli_config</code>:<ul> <li>Renamed to <code>show_config</code>.</li> </ul> </li> <li><code>unlink_template_from_hostgroup</code>:<ul> <li>Renamed to <code>remove_template_from_group</code>.</li> <li>No longer unlinks and clears templates from each other.</li> <li>This was a bug/misunderstanding of the Zabbix API in the old version.</li> <li>Use <code>unlink_template_from_template</code> to unlink and clear templates from each other.</li> </ul> </li> <li><code>update_host_proxy</code><ul> <li>Now supports setting proxy for multiple hosts at once using wildcards.</li> <li>Output format is changed.</li> <li>Now groups hosts by proxy prior to update.</li> </ul> </li> </ul>"},{"location":"changelog/#deprecated_5","title":"Deprecated","text":"<ul> <li><code>zabbix-cli.conf</code> format. Prefer the new TOML configuration file format.</li> <li>Config file options:</li> <li><code>zabbix_config.system_id</code> \u2192 <code>api.username</code></li> <li>Commands:</li> <li><code>unlink_template_from_hostgroup</code>:<ul> <li>Renamed to <code>remove_template_from_group</code>.</li> </ul> </li> <li><code>define_host_monitoring_status</code>:<ul> <li>Renamed to <code>monitor_host</code></li> </ul> </li> <li><code>show_zabbixcli_config</code>:<ul> <li>Renamed to <code>show_config</code></li> </ul> </li> <li><code>zabbix-cli-init</code> script.</li> <li>Replaced by <code>zabbix-cli init</code> command.</li> <li><code>zabbix-cli-bulk-execution</code> script.</li> <li>Replaced by <code>zabbix-cli --file</code>.</li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>Support for Zabbix &lt;1.8 login using <code>user.authenticate</code>.</li> </ul>"},{"location":"changelog/#internal_1","title":"Internal","text":"<ul> <li>Use Hatch for building and publishing.</li> <li>Switch from setup.py to pyproject.toml.</li> <li>Add <code>pre-commit</code> hooks.</li> <li>Add <code>pytest</code> tests</li> <li>Use Ruff for linting and formatting.</li> <li>Use Pyright for static type checking.</li> <li>API code rewritten with Pydantic data models.</li> </ul>"},{"location":"commands/","title":"Commands","text":"<p>Each command and its arguments and/or options are documented in the following pages. The commands are grouped by category.</p>"},{"location":"commands/CLI/","title":"CLI","text":""},{"location":"commands/CLI/#help","title":"help","text":"<pre><code>help &lt;COMMAND&gt;\n</code></pre> <p>Show help for a commmand</p> <p>Arguments</p> <p><code>COMMAND</code> Command nameType: <code>command</code> </p>"},{"location":"commands/CLI/#init","title":"init","text":"<pre><code>init [OPTIONS]\n</code></pre> <p>Create and initialize config file.</p> <p>Options</p> <p><code>--config-file</code>,  <code>-c</code> <code>&lt;CONFIG_FILE&gt;</code> Location of the config file.Type: <code>path</code> </p> <p><code>--overwrite</code>Overwrite existing configType: <code>boolean</code> Default: <code>False</code></p> <p><code>--url</code>,  <code>-u</code> <code>&lt;URL&gt;</code> Zabbix API URL to use.Type: <code>text</code> </p> <p><code>--wizard</code>/<code>--no-wizard</code>Run the interactive wizard to set up the configuration file.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/CLI/#login","title":"login","text":"<pre><code>login [OPTIONS]\n</code></pre> <p>Trigger a new login prompt in the REPL.</p> <p>Ends the current session before triggering a new login prompt.</p> <p>Triggers a login prompt if <code>--username</code> &amp; <code>--password</code> or <code>--token</code> is not provided.</p> <p>Creates a new auth token file if enabled in the config.</p> <p>Options</p> <p><code>--username</code>,  <code>-u</code> <code>&lt;USERNAME&gt;</code> Username to log in with.Type: <code>text</code> </p> <p><code>--password</code>,  <code>-p</code> <code>&lt;PASSWORD&gt;</code> Password to log in with.Type: <code>text</code> </p> <p><code>--token</code>,  <code>-t</code> <code>&lt;TOKEN&gt;</code> API token to log in with.Type: <code>text</code> </p>"},{"location":"commands/CLI/#migrate_config","title":"migrate_config","text":"<pre><code>migrate_config [OPTIONS]\n</code></pre> <p>Migrate a legacy .conf config to a new .toml config.</p> <p>The new config file will be created in the default location if no destination is specified. The new config enables the new JSON format by default.</p> <p>Options</p> <p><code>--source</code>,  <code>-s</code> <code>&lt;SOURCE&gt;</code> Location of the config file to migrate.Type: <code>path</code> </p> <p><code>--destination</code>,  <code>-d</code> <code>&lt;DESTINATION&gt;</code> Path of the new config file to create. Uses the default config path if not specified.Type: <code>path</code> </p> <p><code>--overwrite</code>Overwrite destination config file if it exists.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--legacy-json-format</code>Use legacy JSON format mode in the new config file.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/CLI/#open","title":"open","text":"<pre><code>open &lt;DIRECTORY_TYPE&gt; [OPTIONS]\n</code></pre> <p>Open an app directory in the system's file manager.</p> <p>Use --force to attempt to open when no DISPLAY env var is set.</p> <p>Arguments</p> <p><code>DIRECTORY_TYPE</code> The type of directory to open.Type: <code>choice</code> Choices: <code>config</code>, <code>data</code>, <code>logs</code>, <code>siteconfig</code>, <code>exports</code>Required: \u2705</p> <p>Options</p> <p><code>--force</code>LINUX: Try to open with <code>--command</code> even if no window manager is detected.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--path</code>Show path instead of opening directory.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--command</code> <code>&lt;OPEN_COMMAND&gt;</code> Specify command to use to use for opening.Type: <code>text</code> </p>"},{"location":"commands/CLI/#sample_config","title":"sample_config","text":"<pre><code>sample_config\n</code></pre> <p>Print a sample configuration file.</p>"},{"location":"commands/CLI/#show_config","title":"show_config","text":"<pre><code>show_config [OPTIONS]\n</code></pre> <p>Show the current application configuration.</p> <p>Options</p> <p><code>--secrets</code> <code>&lt;SECRETS&gt;</code> Display mode for secrets.Type: <code>choice</code> Choices: <code>hide</code>, <code>masked</code>, <code>plain</code>Default: <code>masked</code></p>"},{"location":"commands/CLI/#show_dirs","title":"show_dirs","text":"<pre><code>show_dirs\n</code></pre> <p>Show the default directories used by the application.</p>"},{"location":"commands/CLI/#show_history","title":"show_history","text":"<pre><code>show_history [OPTIONS]\n</code></pre> <p>Show the command history.</p> <p>Options</p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"commands/CLI/#update_config","title":"update_config","text":"<pre><code>update_config [OPTIONS]\n</code></pre> <p>Update the config file with the current application state.</p> <p>Adds missing fields and updates deprecated fields to their new values.</p> <p>Options</p> <p><code>--config-file</code>,  <code>-c</code> <code>&lt;CONFIG_FILE&gt;</code> Location of the config file to update.Type: <code>path</code> </p> <p><code>--secrets</code> <code>&lt;SECRETS&gt;</code> Visibility mode for secrets.Type: <code>choice</code> Choices: <code>hide</code>, <code>masked</code>, <code>plain</code>Default: <code>plain</code></p> <p><code>--force</code>Skip confirmation prompt.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Host/","title":"Host","text":""},{"location":"commands/Host/#create_host","title":"create_host","text":"<pre><code>create_host &lt;HOSTNAME_OR_IP&gt; [OPTIONS]\n</code></pre> <p>Create a host.</p> <p>Always adds the host to the default host groups specified in the config under <code>app.commands.create_host.hostgroups</code> unless <code>--no-default-hostgroup</code> is specified.</p> <p>Selects a random proxy by default unless <code>--proxy</code> <code>\"-\"</code> is specified.</p> <p>Creates an interface for the host by default unless <code>--no-interface</code> is specified.</p> <p>Arguments</p> <p><code>HOSTNAME_OR_IP</code> Hostname or IPType: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--hostgroup</code> <code>&lt;HOSTGROUPS&gt;</code> Hostgroup name(s) or ID(s). Comma-separated.Type: <code>text</code> </p> <p><code>--proxy</code> <code>&lt;PROXY&gt;</code> Proxy server used to monitor the host. Supports regular expressions.Type: <code>text</code> Default: <code>.+</code></p> <p><code>--status</code> <code>&lt;STATUS&gt;</code> Host monitoring status.Type: <code>choice</code> Choices: <code>on</code>, <code>off</code>, <code>0</code>, <code>1</code>Default: <code>on</code></p> <p><code>--default-hostgroup</code>,  <code>--default-hostgroups</code>/<code>--no-default-hostgroup</code>, <code>--no-default-hostgroups</code>Add host to default host groups defined in config.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--name</code> <code>&lt;NAME&gt;</code> Visible name of the host. Uses hostname or IP if omitted.Type: <code>text</code> </p> <p><code>--description</code> <code>&lt;DESCRIPTION&gt;</code> Description of the host.Type: <code>text</code> </p> <p><code>--create-interface</code>/<code>--no-create-interface</code>Do not create an interface for the host.Type: <code>boolean</code> </p>"},{"location":"commands/Host/#remove_host","title":"remove_host","text":"<pre><code>remove_host &lt;HOSTNAME&gt;\n</code></pre> <p>Delete a host.</p> <p>Arguments</p> <p><code>HOSTNAME</code> Name of host to remove.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Host/#show_host","title":"show_host","text":"<pre><code>show_host &lt;HOSTNAME_OR_ID&gt; [OPTIONS]\n</code></pre> <p>Show a specific host.</p> <p>Arguments</p> <p><code>HOSTNAME_OR_ID</code> Hostname or ID.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--active</code> <code>&lt;ACTIVE&gt;</code> Active interface availability.Type: <code>choice</code> Choices: <code>unknown</code>, <code>available</code>, <code>unavailable</code>, <code>0</code>, <code>1</code>, <code>2</code></p> <p><code>--maintenance</code>/<code>--no-maintenance</code>Maintenance status.Type: <code>boolean</code> </p> <p><code>--monitored</code>/<code>--no-monitored</code>Monitoring status.Type: <code>boolean</code> </p>"},{"location":"commands/Host/#show_hosts","title":"show_hosts","text":"<pre><code>show_hosts &lt;HOSTNAME_OR_ID&gt; [OPTIONS]\n</code></pre> <p>Show all hosts.</p> <p>Hosts can be filtered by agent, monitoring and maintenance status. Hosts are sorted by name.</p> <p>Examples</p> <p>Show all monitored (enabled) hosts</p> <pre><code>show_hosts --monitored\n</code></pre> <p>Show all hosts with names ending in '.example.com'</p> <pre><code>show_hosts '*.example.com'\n</code></pre> <p>Show all hosts with names ending in '.example.com' or '.example.net'</p> <pre><code>show_hosts '*.example.com,*.example.net'\n</code></pre> <p>Show all hosts with names ending in '.example.com' or '.example.net'</p> <pre><code>show_hosts '*.example.com,*.example.net'\n</code></pre> <p>Show all hosts from a given hostgroup</p> <pre><code>show_hosts --hostgroup 'Linux servers'\n</code></pre> <p>Arguments</p> <p><code>HOSTNAME_OR_ID</code> Hostname pattern or ID to filter by. Comma-separated. Supports wildcards.Type: <code>text</code> </p> <p>Options</p> <p><code>--hostgroup</code> <code>&lt;HOSTGROUP&gt;</code> Hostgroup name(s) or ID(s). Comma-separated.Type: <code>text</code> </p> <p><code>--active</code> <code>&lt;ACTIVE&gt;</code> Active interface availability.Type: <code>choice</code> Choices: <code>unknown</code>, <code>available</code>, <code>unavailable</code>, <code>0</code>, <code>1</code>, <code>2</code></p> <p><code>--maintenance</code>/<code>--no-maintenance</code>Maintenance status.Type: <code>boolean</code> </p> <p><code>--monitored</code>/<code>--unmonitored</code>Monitoring status.Type: <code>boolean</code> </p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"commands/Host/#update_host","title":"update_host","text":"<pre><code>update_host &lt;HOSTNAME_OR_IP&gt; [OPTIONS]\n</code></pre> <p>Update basic information about a host.</p> <p>Other notable commands to update a host:</p> <ul> <li><code>add_host_to_hostgroup</code></li> <li><code>create_host_interface</code></li> <li><code>monitor_host</code></li> <li><code>remove_host_from_hostgroup</code></li> <li><code>update_host_interface</code></li> <li><code>update_host_inventory</code></li> </ul> <p>Arguments</p> <p><code>HOSTNAME_OR_IP</code> Hostname or IPType: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--name</code> <code>&lt;NAME&gt;</code> Visible name of the host.Type: <code>text</code> </p> <p><code>--description</code> <code>&lt;DESCRIPTION&gt;</code> Description of the host.Type: <code>text</code> </p>"},{"location":"commands/Host_Group/","title":"Host Group","text":""},{"location":"commands/Host_Group/#add_host_to_hostgroup","title":"add_host_to_hostgroup","text":"<pre><code>add_host_to_hostgroup &lt;HOSTS&gt; &lt;HOSTGROUPS&gt; [OPTIONS]\n</code></pre> <p>Add hosts to host groups.</p> <p>Host name and group arguments are interpreted as IDs if they are numeric.</p> <p>Examples</p> <p>Add a host to a host group</p> <pre><code>add_host_to_hostgroup 'My host' 'My host group'\n</code></pre> <p>Add multiple hosts to a host group</p> <pre><code>add_host_to_hostgroup 'host1,host2' 'My host group'\n</code></pre> <p>Add multiple hosts to multiple host groups</p> <pre><code>add_host_to_hostgroup 'host1,host2' 'My host group,Another group'\n</code></pre> <p>Arguments</p> <p><code>HOSTS</code> Host names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>HOSTGROUPS</code> Host group names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>Preview changesType: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Host_Group/#create_hostgroup","title":"create_hostgroup","text":"<pre><code>create_hostgroup &lt;HOSTGROUP&gt; [OPTIONS]\n</code></pre> <p>Create a new host group.</p> <p>Assigns default user group permissions by default.</p> <ul> <li><code>--rw-groups</code> defaults to config option <code>app.commands.create_hostgroup.rw_groups</code>.</li> <li><code>--ro-groups</code> defaults to config option <code>app.commands.create_hostgroup.ro_groups</code>.</li> <li>Use <code>--no-default-usergroups</code> to avoid adding user to default user groups.</li> </ul> <p>Examples</p> <p>Create a host group with default user group permissions from config</p> <pre><code>create_hostgroup 'My Host Group'\n</code></pre> <p>Create a host group with specific RO and RW user group access</p> <pre><code>create_hostgroup 'My Host Group' --ro-groups users --rw-groups admins\n</code></pre> <p>Create a host group without default user group permissions</p> <pre><code>create_hostgroup 'My Host Group' --no-usergroup-permissions\n</code></pre> <p>Arguments</p> <p><code>HOSTGROUP</code> Name of host group.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--rw-groups</code> <code>&lt;RW_GROUPS&gt;</code> User group(s) to give read/write permissions. Comma-separated.Type: <code>text</code> </p> <p><code>--ro-groups</code> <code>&lt;RO_GROUPS&gt;</code> User group(s) to give read-only permissions. Comma-separated.Type: <code>text</code> </p> <p><code>--default-usergroups</code>,  <code>--usergroup-permissions</code>/<code>--no-default-usergroups</code>, <code>--no-usergroup-permissions</code>Assign default user group permissions from configs.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/Host_Group/#extend_hostgroup","title":"extend_hostgroup","text":"<pre><code>extend_hostgroup &lt;SRC_GROUP&gt; &lt;DEST_GROUP&gt; [OPTIONS]\n</code></pre> <p>Add all hosts from a host group to other host groups.</p> <p>The source group is not modified. Existing hosts in the destination group(s) are not removed or modified.</p> <p>Arguments</p> <p><code>SRC_GROUP</code> Group to get hosts from.Type: <code>text</code> Required: \u2705</p> <p><code>DEST_GROUP</code> Group(s) to add hosts to. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>Show hosts and groups without making changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Host_Group/#move_hosts","title":"move_hosts","text":"<pre><code>move_hosts &lt;SRC_GROUP&gt; &lt;DEST_GROUP&gt; [OPTIONS]\n</code></pre> <p>Move all hosts from one host group to another.</p> <p>Arguments</p> <p><code>SRC_GROUP</code> Group to move hosts from.Type: <code>text</code> Required: \u2705</p> <p><code>DEST_GROUP</code> Group to move hosts to.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--rollback</code>/<code>--no-rollback</code>Rollback changes if hosts cannot be removed from source group afterwards.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--dryrun</code>Show hosts and groups without making changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Host_Group/#remove_host_from_hostgroup","title":"remove_host_from_hostgroup","text":"<pre><code>remove_host_from_hostgroup &lt;HOSTS&gt; &lt;HOSTGROUPS&gt; [OPTIONS]\n</code></pre> <p>Remove hosts from host groups.</p> <p>Examples</p> <p>Remove a host to a host group</p> <pre><code>remove_host_from_hostgroup 'My host' 'My host group'\n</code></pre> <p>Remove multiple hosts from a host group</p> <pre><code>remove_host_from_hostgroup 'host1,host2' 'My host group'\n</code></pre> <p>Remove multiple hosts from multiple host groups</p> <pre><code>remove_host_from_hostgroup 'host1,host2' 'My host group,Another group'\n</code></pre> <p>Arguments</p> <p><code>HOSTS</code> Host names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>HOSTGROUPS</code> Host group names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>Preview changesType: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Host_Group/#remove_hostgroup","title":"remove_hostgroup","text":"<pre><code>remove_hostgroup &lt;HOSTGROUP&gt; [OPTIONS]\n</code></pre> <p>Delete a host group.</p> <p>Arguments</p> <p><code>HOSTGROUP</code> Name of host group(s) to delete. Comma-separated.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--force</code>Remove host group even if it contains hosts.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Host_Group/#show_hostgroup","title":"show_hostgroup","text":"<pre><code>show_hostgroup &lt;HOSTGROUP&gt;\n</code></pre> <p>Show details of a host group.</p> <p>Arguments</p> <p><code>HOSTGROUP</code> Name of host group.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Host_Group/#show_hostgroup_permissions","title":"show_hostgroup_permissions","text":"<pre><code>show_hostgroup_permissions &lt;HOSTGROUPS&gt;\n</code></pre> <p>Show usergroups with permissions for the given hostgroup.</p> <p>Shows permissions for all host groups by default.</p> <p>Arguments</p> <p><code>HOSTGROUPS</code> Host group name(s). Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Host_Group/#show_hostgroups","title":"show_hostgroups","text":"<pre><code>show_hostgroups &lt;NAME&gt; [OPTIONS]\n</code></pre> <p>Show details for host groups.</p> <p>Fetching all host groups with hosts can be extremely slow. It is recommended to use <code>--no-hosts</code> when not using a specific name filter.</p> <p>Examples</p> <p>Show all host groups (excluding hosts)</p> <pre><code>show_hostgroups --no-hosts\n</code></pre> <p>Show all host groups starting with 'Web-'</p> <pre><code>show_hostgroups 'Web-*'\n</code></pre> <p>Show host groups with 'web' in the name</p> <pre><code>show_hostgroups '*web*'\n</code></pre> <p>Arguments</p> <p><code>NAME</code> Name of host group(s). Comma-separated. Supports wildcards.Type: <code>text</code> Default: <code>*</code></p> <p>Options</p> <p><code>--hosts</code>/<code>--no-hosts</code>Show hosts in each host group.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"commands/Host_Interface/","title":"Host Interface","text":""},{"location":"commands/Host_Interface/#create_host_interface","title":"create_host_interface","text":"<pre><code>create_host_interface &lt;HOSTNAME&gt; [OPTIONS]\n</code></pre> <p>Create a host interface.</p> <p>Creates an SNMPv2 interface by default. Use --type to specify a different type. One of --dns and --ip is required. If both are specified, --connection is required.</p> <p>NOTE: Can only create secondary host interfaces for interfaces of types that already have a default interface. (API limitation)</p> <p>Examples</p> <p>Create an SNMPv2 interface on host 'foo.example.com' with derived DNS name 'foo.example.com' (default)</p> <pre><code>create_host_interface foo.example.com\n</code></pre> <p>Create an SNMPv2 interface on host 'foo.example.com' with IP connection</p> <pre><code>create_host_interface foo.example.com --type snmp --ip 127.0.0.1\n</code></pre> <p>Create an SNMPv2 interface on host 'foo.example.com' with different DNS name</p> <pre><code>create_host_interface foo.example.com --type snmp --dns snmp.example.com\n</code></pre> <p>Create an SNMPv2 interface on host 'foo' with both IP and DNS, using DNS as enabled address</p> <pre><code>create_host_interface foo --type snmp --connection dns --dns snmp.example.com --ip 127.0.0.1\n</code></pre> <p>Create an SNMPv3 interface on host 'foo.example.com'</p> <pre><code>create_host_interface foo.example.com --type snmp --snmp-version 3 --snmp-context-name mycontext --snmp-security-name myuser --snmp-security-level authpriv --snmp-auth-protocol MD5 --snmp-auth-passphrase mypass --snmp-priv-protocol DES --snmp-priv-passphrase myprivpass\n</code></pre> <p>Create an Agent interface on host 'foo.example.com'</p> <pre><code>create_host_interface foo.example.com --type agent\n</code></pre> <p>Arguments</p> <p><code>HOSTNAME</code> Name of host to create interface on.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--connection</code> <code>&lt;CONNECTION&gt;</code> Interface connection mode. Required if both --ip and --dns are specified.Type: <code>choice</code> Choices: <code>DNS</code>, <code>IP</code>, <code>0</code>, <code>1</code></p> <p><code>--type</code> <code>&lt;TYPE_&gt;</code> Interface type. SNMP enables --snmp- options.Type: <code>choice</code> Choices: <code>Agent</code>, <code>SNMP</code>, <code>IPMI</code>, <code>JMX</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>Default:* <code>SNMP</code></p> <p><code>--port</code> <code>&lt;PORT&gt;</code> Interface port. Defaults to 10050 for agent, 161 for SNMP, 623 for IPMI, and 12345 for JMX.Type: <code>text</code> </p> <p><code>--ip</code> <code>&lt;IP&gt;</code> IP address of interface.Type: <code>text</code> </p> <p><code>--dns</code> <code>&lt;DNS&gt;</code> DNS address of interface.Type: <code>text</code> </p> <p><code>--default</code>/<code>--no-default</code>Whether this is the default interface.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--snmp-version</code> <code>&lt;SNMP_VERSION&gt;</code> SNMP version.Type: <code>integer range</code> Min: <code>1</code>Max: <code>3</code>Default: <code>2</code></p> <p><code>--snmp-bulk</code>/<code>--no-snmp-bulk</code>Use bulk SNMP requests.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--snmp-community</code> <code>&lt;SNMP_COMMUNITY&gt;</code> SNMPv{1,2} community.Type: <code>text</code> Default: <code>{$SNMP_COMMUNITY}</code></p> <p><code>--snmp-max-repetitions</code> <code>&lt;SNMP_MAX_REPETITIONS&gt;</code> Max repetitions for SNMPv{2,3} bulk requests.Type: <code>integer range</code> Min: <code>1</code>Default: <code>10</code></p> <p><code>--snmp-security-name</code> <code>&lt;SNMP_SECURITY_NAME&gt;</code> SNMPv3 security name.Type: <code>text</code> </p> <p><code>--snmp-context-name</code> <code>&lt;SNMP_CONTEXT_NAME&gt;</code> SNMPv3 context name.Type: <code>text</code> </p> <p><code>--snmp-security-level</code> <code>&lt;SNMP_SECURITY_LEVEL&gt;</code> SNMPv3 security level.Type: <code>choice</code> Choices: <code>noAuthNoPriv</code>, <code>authNoPriv</code>, <code>authPriv</code>, <code>0</code>, <code>1</code>, <code>2</code></p> <p><code>--snmp-auth-protocol</code> <code>&lt;SNMP_AUTH_PROTOCOL&gt;</code> SNMPv3 auth protocol (authNoPriv &amp; authPriv).Type: <code>choice</code> Choices: <code>MD5</code>, <code>SHA1</code>, <code>SHA224</code>, <code>SHA256</code>, <code>SHA384</code>, <code>SHA512</code>, <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code></p> <p><code>--snmp-auth-passphrase</code> <code>&lt;SNMP_AUTH_PASSPHRASE&gt;</code> SNMPv3 auth passphrase (authNoPriv &amp; authPriv).Type: <code>text</code> </p> <p><code>--snmp-priv-protocol</code> <code>&lt;SNMP_PRIV_PROTOCOL&gt;</code> SNMPv3 priv protocol (authPriv)Type: <code>choice</code> Choices: <code>DES</code>, <code>AES</code>, <code>AES128</code>, <code>AES192</code>, <code>AES256</code>, <code>AES192C</code>, <code>AES256C</code>, <code>0</code>, <code>1</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code></p> <p><code>--snmp-priv-passphrase</code> <code>&lt;SNMP_PRIV_PASSPHRASE&gt;</code> SNMPv3 priv passphrase (authPriv).Type: <code>text</code> </p>"},{"location":"commands/Host_Interface/#remove_host_interface","title":"remove_host_interface","text":"<pre><code>remove_host_interface &lt;INTERFACE_ID&gt;\n</code></pre> <p>Remove a host interface.</p> <p>Arguments</p> <p><code>INTERFACE_ID</code> ID of interface to remove.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Host_Interface/#show_host_interfaces","title":"show_host_interfaces","text":"<pre><code>show_host_interfaces &lt;HOSTNAME_OR_ID&gt;\n</code></pre> <p>Show host interfaces.</p> <p>Arguments</p> <p><code>HOSTNAME_OR_ID</code> Hostname or IDType: <code>text</code> Required: \u2705</p>"},{"location":"commands/Host_Interface/#update_host_interface","title":"update_host_interface","text":"<pre><code>update_host_interface &lt;INTERFACE_ID&gt; [OPTIONS]\n</code></pre> <p>Update a host interface.</p> <p>Host interface type cannot be changed.</p> <p>Examples</p> <p>Update the IP address of interface 123.</p> <pre><code>update_host_interface 123 --ip 127.0.0.1\n</code></pre> <p>Change connection type of interface 123 to IP.</p> <pre><code>update_host_interface 123 --connection ip\n</code></pre> <p>Change SNMP community of interface 234 to 'public'.</p> <pre><code>update_host_interface 234 --snmp-community public\n</code></pre> <p>Arguments</p> <p><code>INTERFACE_ID</code> ID of interface to update.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--connection</code> <code>&lt;CONNECTION&gt;</code> Interface connection mode.Type: <code>choice</code> Choices: <code>DNS</code>, <code>IP</code>, <code>0</code>, <code>1</code></p> <p><code>--port</code> <code>&lt;PORT&gt;</code> Interface port.Type: <code>text</code> </p> <p><code>--ip</code> <code>&lt;IP&gt;</code> IP address of interface.Type: <code>text</code> </p> <p><code>--dns</code> <code>&lt;DNS&gt;</code> DNS address of interface.Type: <code>text</code> </p> <p><code>--default</code>/<code>--no-default</code>Default interface.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--snmp-version</code> <code>&lt;SNMP_VERSION&gt;</code> SNMP version.Type: <code>integer range</code> Min: <code>1</code>Max: <code>3</code></p> <p><code>--snmp-bulk</code>/<code>--no-snmp-bulk</code>Use bulk SNMP requests.Type: <code>boolean</code> </p> <p><code>--snmp-community</code> <code>&lt;SNMP_COMMUNITY&gt;</code> SNMPv{1,2} community.Type: <code>text</code> </p> <p><code>--snmp-max-repetitions</code> <code>&lt;SNMP_MAX_REPETITIONS&gt;</code> Max repetitions for SNMPv{2,3} bulk requests.Type: <code>integer range</code> Min: <code>1</code></p> <p><code>--snmp-security-name</code> <code>&lt;SNMP_SECURITY_NAME&gt;</code> SNMPv3 security name.Type: <code>text</code> </p> <p><code>--snmp-context-name</code> <code>&lt;SNMP_CONTEXT_NAME&gt;</code> SNMPv3 context name.Type: <code>text</code> </p> <p><code>--snmp-security-level</code> <code>&lt;SNMP_SECURITY_LEVEL&gt;</code> SNMPv3 security level.Type: <code>choice</code> Choices: <code>noAuthNoPriv</code>, <code>authNoPriv</code>, <code>authPriv</code>, <code>0</code>, <code>1</code>, <code>2</code></p> <p><code>--snmp-auth-protocol</code> <code>&lt;SNMP_AUTH_PROTOCOL&gt;</code> SNMPv3 auth protocol (authNoPriv &amp; authPriv).Type: <code>choice</code> Choices: <code>MD5</code>, <code>SHA1</code>, <code>SHA224</code>, <code>SHA256</code>, <code>SHA384</code>, <code>SHA512</code>, <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code></p> <p><code>--snmp-auth-passphrase</code> <code>&lt;SNMP_AUTH_PASSPHRASE&gt;</code> SNMPv3 auth passphrase (authNoPriv &amp; authPriv).Type: <code>text</code> </p> <p><code>--snmp-priv-protocol</code> <code>&lt;SNMP_PRIV_PROTOCOL&gt;</code> SNMPv3 priv protocol (authPriv)Type: <code>choice</code> Choices: <code>DES</code>, <code>AES</code>, <code>AES128</code>, <code>AES192</code>, <code>AES256</code>, <code>AES192C</code>, <code>AES256C</code>, <code>0</code>, <code>1</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code></p> <p><code>--snmp-priv-passphrase</code> <code>&lt;SNMP_PRIV_PASSPHRASE&gt;</code> SNMPv3 priv passphrase (authPriv).Type: <code>text</code> </p>"},{"location":"commands/Host_Monitoring/","title":"Host Monitoring","text":""},{"location":"commands/Host_Monitoring/#monitor_host","title":"monitor_host","text":"<pre><code>monitor_host &lt;HOSTNAME&gt; &lt;NEW_STATUS&gt;\n</code></pre> <p>Monitor or unmonitor a host.</p> <p>Arguments</p> <p><code>HOSTNAME</code> Name of hostType: <code>text</code> Required: \u2705</p> <p><code>NEW_STATUS</code> Monitoring statusType: <code>choice</code> Choices: <code>on</code>, <code>off</code>, <code>0</code>, <code>1</code>Required: \u2705</p>"},{"location":"commands/Host_Monitoring/#show_host_inventory","title":"show_host_inventory","text":"<pre><code>show_host_inventory &lt;HOSTNAME_OR_ID&gt;\n</code></pre> <p>Show host inventory details for a specific host.</p> <p>Arguments</p> <p><code>HOSTNAME_OR_ID</code> Hostname or IDType: <code>text</code> Required: \u2705</p>"},{"location":"commands/Host_Monitoring/#show_last_values","title":"show_last_values","text":"<pre><code>show_last_values &lt;ITEM&gt; [OPTIONS]\n</code></pre> <p>Show the last values of given items of monitored hosts.</p> <p>Examples</p> <p>Get items starting with 'MongoDB'</p> <pre><code>show_last_values 'MongoDB*'\n</code></pre> <p>Get items containing 'memory'</p> <pre><code>show_last_values '*memory*'\n</code></pre> <p>Get all items (WARNING: slow!)</p> <pre><code>show_last_values '*'\n</code></pre> <p>Arguments</p> <p><code>ITEM</code> Item names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--group</code>Group items with the same value.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"commands/Host_Monitoring/#update_host_inventory","title":"update_host_inventory","text":"<pre><code>update_host_inventory &lt;HOSTNAME_OR_ID&gt; &lt;KEY&gt; &lt;VALUE&gt;\n</code></pre> <p>Update a host inventory field.</p> <p>Inventory fields in the API do not always match Web GUI field names. Use <code>zabbix-cli -o json show_host_inventory &lt;hostname&gt;</code> to see the available fields.</p> <p>Arguments</p> <p><code>HOSTNAME_OR_ID</code> Hostname or ID of host.Type: <code>text</code> Required: \u2705</p> <p><code>KEY</code> Inventory keyType: <code>text</code> Required: \u2705</p> <p><code>VALUE</code> Inventory valueType: <code>text</code> Required: \u2705</p>"},{"location":"commands/ImportExport/","title":"Import/Export","text":""},{"location":"commands/ImportExport/#export_configuration","title":"export_configuration","text":"<pre><code>export_configuration [OPTIONS]\n</code></pre> <p>Export Zabbix configuration for one or more components.</p> <p>Uses defaults from Zabbix-CLI configuration file if not specified.</p> <p>NOTE: <code>--name</code> arguments are globs, not regex patterns.</p> <p>Filename scheme is as follows:</p> <p><code>DIRECTORY/OBJECT_TYPE/NAME_ID_[timestamp].FORMAT</code></p> <p>But it can be changed to the legacy scheme with <code>--legacy-filenames</code>:</p> <p><code>DIRECTORY/OBJECT_TYPE/zabbix_export_OBJECT_TYPE_NAME_ID_[timestamp].FORMAT</code></p> <p>Timestamps are disabled by default, but can be enabled with <code>--timestamps</code> or the <code>app.commands.export.timestamps</code> configuration option.</p> <p>Shows detailed information about exported files in JSON output mode.</p> <p>Examples</p> <p>Export everything</p> <pre><code>export_configuration\n</code></pre> <p>Export all host groups</p> <pre><code>export_configuration --type host_groups\n</code></pre> <p>Export all host groups containing 'Linux'</p> <pre><code>export_configuration --type host_groups --name '*Linux*'\n</code></pre> <p>Export all template groups and templates containing 'Linux' or 'Windows'</p> <pre><code>export_configuration --type template_groups --type templates --name '*Linux*,*Windows*'\n</code></pre> <p>Options</p> <p><code>--directory</code> <code>&lt;DIRECTORY&gt;</code> Directory to export configuration to. Overrides directory in config.Type: <code>directory</code> </p> <p><code>--type</code> <code>&lt;TYPES,[TYPES...]&gt;</code> Type(s) of objects to export. Can be specified multiple times. Defaults to all object types.Separate multiple values with commas, or use <code>--type</code> multiple times.Type: <code>choice</code> Choices: <code>host_groups</code>, <code>template_groups</code>, <code>hosts</code>, <code>images</code>, <code>maps</code>, <code>templates</code>, <code>mediaTypes</code>Default: <code>[]</code></p> <p><code>--name</code> <code>&lt;NAMES&gt;</code> Name(s) of objects to export. Comma-separated list.Type: <code>text</code> </p> <p><code>--format</code> <code>&lt;FORMAT&gt;</code> Format to export to. Overrides export format in config.Type: <code>choice</code> Choices: <code>xml</code>, <code>json</code>, <code>yaml</code>, <code>php</code></p> <p><code>--timestamps</code>Add timestamps to exported filenames. Overrides config option.Type: <code>boolean</code> </p> <p><code>--pretty</code>Pretty-print output. Not supported for XML.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--open</code>Open export directory in file explorer after exporting.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--ignore-errors</code>Enable best-effort exporting. Print errors but continue exporting.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/ImportExport/#import_configuration","title":"import_configuration","text":"<pre><code>import_configuration &lt;TO_IMPORT&gt; [OPTIONS]\n</code></pre> <p>Import Zabbix configuration from file, directory or glob pattern.</p> <p>Imports all files in all subdirectories if a directory is specified. Uses default export directory if no argument is specified.</p> <p>Determines format to import based on file extensions.</p> <p>Arguments</p> <p><code>TO_IMPORT</code> Path to file or directory to import configuration from. Accepts glob pattern. Uses default export directory if not specified.Type: <code>text</code> </p> <p>Options</p> <p><code>--dryrun</code>Preview files to import.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--create-missing</code>/<code>--no-create-missing</code>Create missing objects.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--update-existing</code>/<code>--no-update-existing</code>Update existing objects.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--delete-missing</code>/<code>--no-delete-missing</code>Delete missing objects.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--ignore-errors</code>Enable best-effort importing. Print errors from failed imports but continue importing.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Macro_%28Global%29/","title":"Macro (Global)","text":""},{"location":"commands/Macro_%28Global%29/#define_global_macro","title":"define_global_macro","text":"<pre><code>define_global_macro &lt;NAME&gt; &lt;VALUE&gt;\n</code></pre> <p>Create a global macro.</p> <p>Arguments</p> <p><code>NAME</code> Name of the macroType: <code>text</code> Required: \u2705</p> <p><code>VALUE</code> Value of the macroType: <code>text</code> Required: \u2705</p>"},{"location":"commands/Macro_%28Global%29/#show_global_macros","title":"show_global_macros","text":"<pre><code>show_global_macros\n</code></pre> <p>Show all global macros.</p>"},{"location":"commands/Macro_%28Host%29/","title":"Macro (Host)","text":""},{"location":"commands/Macro_%28Host%29/#define_host_macro","title":"define_host_macro","text":"<pre><code>define_host_macro &lt;HOSTNAME&gt; &lt;MACRO_NAME&gt; &lt;MACRO_VALUE&gt;\n</code></pre> <p>Define a host macro.</p> <p>Examples</p> <p>Create a macro named {$SNMP_COMMUNITY} for a host</p> <pre><code>define_host_macro foo.example.com '{$SNMP_COMMUNITY}' public\n</code></pre> <p>Create a macro named {$SITE_URL} for a host (automatic name conversion)</p> <pre><code>define_host_macro foo.example.com site_url https://example.com\n</code></pre> <p>Arguments</p> <p><code>HOSTNAME</code> Host to define macro for.Type: <code>text</code> Required: \u2705</p> <p><code>MACRO_NAME</code> Name of macro. Names will be converted to the Zabbix format, i.e. <code>site_url</code> becomes <code>{$SITE_URL}</code>.Type: <code>text</code> Required: \u2705</p> <p><code>MACRO_VALUE</code> Default value of macro.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Macro_%28Host%29/#define_template_macro","title":"define_template_macro","text":"<pre><code>define_template_macro &lt;TEMPLATE_NAME&gt; &lt;MACRO_NAME&gt; &lt;MACRO_VALUE&gt;\n</code></pre> <p>Define a template macro.</p> <p>Examples</p> <p>Create a macro named {$SNMP_COMMUNITY} with the value 'public' for a template</p> <pre><code>define_template_macro Mytemplate '{$SNMP_COMMUNITY}' public\n</code></pre> <p>Create a macro named {$SITE_URL} with an URL value for a template (automatic name conversion)</p> <pre><code>define_template_macro Mytemplate site_url https://example.com\n</code></pre> <p>Arguments</p> <p><code>TEMPLATE_NAME</code> Name of template to define macro for.Type: <code>text</code> Required: \u2705</p> <p><code>MACRO_NAME</code> Name of macro. Names will be converted to the Zabbix format, i.e. <code>site_url</code> becomes <code>{$SITE_URL}</code>.Type: <code>text</code> Required: \u2705</p> <p><code>MACRO_VALUE</code> Default value of macro.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Macro_%28Host%29/#show_host_macros","title":"show_host_macros","text":"<pre><code>show_host_macros &lt;HOSTNAME_OR_ID&gt;\n</code></pre> <p>Show all macros defined for a host.</p> <p>Arguments</p> <p><code>HOSTNAME_OR_ID</code> Hostname or ID to show macros forType: <code>text</code> Required: \u2705</p>"},{"location":"commands/Macro_%28Host%29/#show_macro_hosts","title":"show_macro_hosts","text":"<pre><code>show_macro_hosts &lt;USERMACRO&gt; [OPTIONS]\n</code></pre> <p>Find all hosts with a user macro of the given name.</p> <p>Renders a list of the complete macro object and its hosts in JSON mode.</p> <p>Arguments</p> <p><code>USERMACRO</code> Name of macro to find hosts with. Macro names are automatically formatted, e.g. <code>site_url</code> becomes <code>{$SITE_URL}</code>.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"commands/Macro_%28Host%29/#show_macro_templates","title":"show_macro_templates","text":"<pre><code>show_macro_templates &lt;MACRO_NAME&gt; [OPTIONS]\n</code></pre> <p>Find all templates with a macro of the given name.</p> <p>Examples</p> <p>Show all templates with a user macro named {$SNMP_COMMUNITY}</p> <pre><code>show_macro_templates SNMP_COMMUNITY\n</code></pre> <p>Arguments</p> <p><code>MACRO_NAME</code> Name of the macro to find templates with. Automatically formatted.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"commands/Macro_%28Host%29/#show_template_macros","title":"show_template_macros","text":"<pre><code>show_template_macros &lt;TEMPLATE_NAME_OR_ID&gt;\n</code></pre> <p>Show all macros defined for a template.</p> <p>Arguments</p> <p><code>TEMPLATE_NAME_OR_ID</code> Template name or ID to show macros forType: <code>text</code> Required: \u2705</p>"},{"location":"commands/Maintenance/","title":"Maintenance","text":""},{"location":"commands/Maintenance/#create_maintenance_definition","title":"create_maintenance_definition","text":"<pre><code>create_maintenance_definition &lt;NAME&gt; [OPTIONS]\n</code></pre> <p>Create a new one-time maintenance definition.</p> <p>One can define an interval between two timestamps in ISO format or a time period in minutes, hours or days from the moment the definition is created. Periods are assumed to be in seconds if no unit is specified. If no period is specified, the default is 1 hour.</p> <p>Examples</p> <p>Create a maintenance for a host from now for 1 hour (default)</p> <pre><code>create_maintenance_definition 'My maintenance' --host 'My host'\n</code></pre> <p>Create a maintenance for a host group in a specific time period</p> <pre><code>create_maintenance_definition 'My maintenance' --hostgroup 'Linux servers' --period '2022-12-31T23:00 to 2023-01-01T01:00'\n</code></pre> <p>Create a maintenance definition with all options</p> <pre><code>create_maintenance_definition 'My maintenance' --hostgroup 'Linux servers' --period '2 hours 30 minutes 15 seconds' --description 'Maintenance for Linux servers' --data-collection ON\n</code></pre> <p>Arguments</p> <p><code>NAME</code> Maintenance name.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--description</code> <code>&lt;DESCRIPTION&gt;</code> Description.Type: <code>text</code> </p> <p><code>--host</code> <code>&lt;HOSTS&gt;</code> Host(s). Comma-separated.Type: <code>text</code> </p> <p><code>--hostgroup</code> <code>&lt;HOSTGROUPS&gt;</code> Host group(s). Comma-separated.Type: <code>text</code> </p> <p><code>--period</code> <code>&lt;PERIOD&gt;</code> Time period in seconds, minutes, hours, days, or as ISO timestamp.Type: <code>text</code> Default: <code>1 hour</code></p> <p><code>--data-collection</code> <code>&lt;DATA_COLLECTION&gt;</code> Enable or disable data collection.Type: <code>choice</code> Choices: <code>on</code>, <code>off</code>, <code>0</code>, <code>1</code>Default: <code>on</code></p>"},{"location":"commands/Maintenance/#remove_maintenance_definition","title":"remove_maintenance_definition","text":"<pre><code>remove_maintenance_definition &lt;MAINTENANCE_ID&gt;\n</code></pre> <p>Remove a maintenance definition.</p> <p>Arguments</p> <p><code>MAINTENANCE_ID</code> ID(s) of maintenance(s) to remove. Comma-separated.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Maintenance/#show_maintenance_definitions","title":"show_maintenance_definitions","text":"<pre><code>show_maintenance_definitions [OPTIONS]\n</code></pre> <p>Show maintenance definitions for IDs, host groups or hosts.</p> <p>At least one of <code>--maintenance-id</code>, <code>--hostgroup</code>, or <code>--host</code> is required.</p> <p>Options</p> <p><code>--maintenance-id</code> <code>&lt;MAINTENANCE_ID&gt;</code> Maintenance IDs. Comma-separated.Type: <code>text</code> </p> <p><code>--hostgroup</code> <code>&lt;HOSTGROUP&gt;</code> Host group names. Comma-separated.Type: <code>text</code> </p> <p><code>--host</code> <code>&lt;HOST&gt;</code> Host names. Comma-separated.Type: <code>text</code> </p>"},{"location":"commands/Maintenance/#show_maintenance_periods","title":"show_maintenance_periods","text":"<pre><code>show_maintenance_periods &lt;MAINTENANCE_ID&gt; [OPTIONS]\n</code></pre> <p>Show maintenance periods for one or more maintenance definitions.</p> <p>Shows all maintenance definitions by default.</p> <p>Arguments</p> <p><code>MAINTENANCE_ID</code> Maintenance IDs. Comma-separated. Supports wildcards.Type: <code>text</code> </p> <p>Options</p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"commands/Media/","title":"Media","text":""},{"location":"commands/Media/#show_media_types","title":"show_media_types","text":"<pre><code>show_media_types\n</code></pre> <p>Show all available media types.</p>"},{"location":"commands/Problem/","title":"Problem","text":""},{"location":"commands/Problem/#acknowledge_event","title":"acknowledge_event","text":"<pre><code>acknowledge_event &lt;EVENT_IDS&gt; [OPTIONS]\n</code></pre> <p>Acknowledge events by ID.</p> <p>Arguments</p> <p><code>EVENT_IDS</code> Comma-separated list of event ID(s)Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--message</code>,  <code>-m</code> <code>&lt;MESSAGE&gt;</code> Message to add to the eventType: <code>text</code> Default: <code>[Zabbix-CLI] Acknowledged via acknowledge_events</code></p> <p><code>--close</code>,  <code>-c</code>Close the event after acknowledging itType: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Problem/#acknowledge_trigger_last_event","title":"acknowledge_trigger_last_event","text":"<pre><code>acknowledge_trigger_last_event &lt;TRIGGER_IDS&gt; [OPTIONS]\n</code></pre> <p>Acknowledge the the last event for the given triggers.</p> <p>Examples</p> <p>Acknowledge the last event for trigger 12345</p> <pre><code>acknowledge_trigger_last_event 12345\n</code></pre> <p>Acknowledge the last event for trigger 12345 with a message and close it</p> <pre><code>acknowledge_trigger_last_event 12345 --message 'Acked via CLI' --close\n</code></pre> <p>Acknowledge multiple triggers</p> <pre><code>acknowledge_trigger_last_event 12345,12346\n</code></pre> <p>Arguments</p> <p><code>TRIGGER_IDS</code> Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--message</code> <code>&lt;MESSAGE&gt;</code> Acknowledgement messageType: <code>text</code> </p> <p><code>--close</code>,  <code>-c</code>Close eventType: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Problem/#show_alarms","title":"show_alarms","text":"<pre><code>show_alarms [OPTIONS]\n</code></pre> <p>Show the latest events for the given triggers, hosts, and/or host groups.</p> <p>At least one trigger ID, host or host group must be specified.</p> <p>Options</p> <p><code>--description</code> <code>&lt;DESCRIPTION&gt;</code> Description of alarm(s) to show.Type: <code>text</code> </p> <p><code>--priority</code> <code>&lt;PRIORITY&gt;</code> Priority of alarm(s) to show.Type: <code>choice</code> Choices: <code>unclassified</code>, <code>information</code>, <code>warning</code>, <code>average</code>, <code>high</code>, <code>disaster</code>, <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code></p> <p><code>--hostgroup</code> <code>&lt;HOSTGROUPS&gt;</code> Host group(s) to show alarms for. Comma-separated.Type: <code>text</code> </p> <p><code>--unack</code>/<code>--ack</code>Show only alarms whose last event is unacknowledged.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/Problem/#show_trigger_events","title":"show_trigger_events","text":"<pre><code>show_trigger_events [OPTIONS]\n</code></pre> <p>Show the latest events for the given triggers, hosts, and/or host groups.</p> <p>At least one trigger ID, host or host group must be specified.</p> <p>Examples</p> <p>Show recent events for host foo.example.com</p> <pre><code>show_trigger_events --host foo.example.com\n</code></pre> <p>Show recent events for hosts in host group 'Linux servers'</p> <pre><code>show_trigger_events --hostgroup 'Linux servers'\n</code></pre> <p>Show 20 most recent events for triggers 12345 &amp; 12346</p> <pre><code>show_trigger_events --trigger-id 12345,12346 --limit 20\n</code></pre> <p>Options</p> <p><code>--trigger-id</code> <code>&lt;TRIGGER_ID&gt;</code> ID of trigger(s) to show events for.Type: <code>text</code> </p> <p><code>--hostgroup</code> <code>&lt;HOSTGROUPS&gt;</code> Host group(s) to show events for.Type: <code>text</code> </p> <p><code>--host</code> <code>&lt;HOSTS&gt;</code> Host(s) to show events for.Type: <code>text</code> </p> <p><code>--limit</code>,  <code>-l</code> <code>&lt;LIMIT&gt;</code> Maximum number of events to show.Type: <code>integer</code> Default: <code>10</code></p>"},{"location":"commands/Proxy/","title":"Proxy","text":""},{"location":"commands/Proxy/#clear_host_proxy","title":"clear_host_proxy","text":"<pre><code>clear_host_proxy &lt;HOSTNAME&gt; [OPTIONS]\n</code></pre> <p>Clear the proxy for one or more hosts.</p> <p>Sets the hosts to be monitored by the Zabbix server instead of a proxy.</p> <p>Arguments</p> <p><code>HOSTNAME</code> Hostnames. Comma-separated Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>/<code>--no-dryrun</code>Preview changesType: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Proxy/#load_balance_proxy_hosts","title":"load_balance_proxy_hosts","text":"<pre><code>load_balance_proxy_hosts &lt;&lt;PROXY1,PROXY2,...&gt;&gt; &lt;[WEIGHT1,WEIGHT2,...]&gt;\n</code></pre> <p>Spread hosts between multiple proxies.</p> <p>Hosts are determined by the hosts monitored by the given proxies Hosts monitored by other proxies or not monitored at all are not affected.</p> <p>Weighting for the load balancing is optional, and defaults to equal weights. Number of proxies must match number of weights if specified.</p> <p>Examples</p> <p>Load balance hosts evenly between two proxies</p> <pre><code>load_balance_proxy_hosts proxy1,proxy2\n</code></pre> <p>Place twice as many hosts on proxy1 as proxy2</p> <pre><code>load_balance_proxy_hosts proxy1,proxy2 2,1\n</code></pre> <p>Load balance hosts evenly between three proxies</p> <pre><code>load_balance_proxy_hosts proxy1,proxy2,proxy3\n</code></pre> <p>Load balance hosts unevenly between three proxies</p> <pre><code>load_balance_proxy_hosts proxy1,proxy2,proxy3 1,1,2\n</code></pre> <p>Arguments</p> <p><code>&lt;proxy1,proxy2,...&gt;</code> Comma delimited list of proxies to share hosts between.Type: <code>text</code> Required: \u2705</p> <p><code>[weight1,weight2,...]</code> Weights for each proxy. Comma-separated. Defaults to equal weights.Type: <code>text</code> </p>"},{"location":"commands/Proxy/#move_proxy_hosts","title":"move_proxy_hosts","text":"<pre><code>move_proxy_hosts &lt;PROXY_SRC&gt; &lt;PROXY_DST&gt; [OPTIONS]\n</code></pre> <p>Move hosts from one proxy to another.</p> <p>Examples</p> <p>Move all hosts from one proxy to another</p> <pre><code>move_proxy_hosts proxy1 proxy2\n</code></pre> <p>Move all hosts with names matching a regex pattern</p> <pre><code>move_proxy_hosts proxy1 proxy2 --filter '$www.*'\n</code></pre> <p>Arguments</p> <p><code>PROXY_SRC</code> Proxy to move hosts from.Type: <code>text</code> Required: \u2705</p> <p><code>PROXY_DST</code> Proxy to move hosts to.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--filter</code> <code>&lt;HOST_FILTER&gt;</code> Regex pattern of hosts to move.Type: <code>text</code> </p>"},{"location":"commands/Proxy/#show_proxies","title":"show_proxies","text":"<pre><code>show_proxies &lt;NAME_OR_ID&gt; [OPTIONS]\n</code></pre> <p>Show all proxies.</p> <p>Shows number of hosts for each proxy unless <code>--hosts</code> is passed in, in which case the hostnames of each host are displayed instead.</p> <p>Arguments</p> <p><code>NAME_OR_ID</code> Filter by proxy name or ID. Comma-separated. Supports wildcards.Type: <code>text</code> </p> <p>Options</p> <p><code>--hosts</code>Show hostnames of each host for every proxy.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Proxy/#show_proxy_hosts","title":"show_proxy_hosts","text":"<pre><code>show_proxy_hosts &lt;PROXY&gt;\n</code></pre> <p>Show all hosts with for a given proxy.</p> <p>Arguments</p> <p><code>PROXY</code> Proxy name or ID. Supports wildcards.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Proxy/#update_host_proxy","title":"update_host_proxy","text":"<pre><code>update_host_proxy &lt;HOSTNAME&gt; &lt;PROXY&gt; [OPTIONS]\n</code></pre> <p>Assign hosts to a proxy.</p> <p>Supports wildcards for both hosts and proxy names. If multiple proxies match the proxy name, the first match is used.</p> <p>Arguments</p> <p><code>HOSTNAME</code> Hostnames. Comma-separated Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>PROXY</code> Proxy name. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>/<code>--no-dryrun</code>Preview changesType: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Proxy/#update_hostgroup_proxy","title":"update_hostgroup_proxy","text":"<pre><code>update_hostgroup_proxy &lt;HOSTGROUP&gt; &lt;PROXY&gt; [OPTIONS]\n</code></pre> <p>Assign a proxy to all hosts in one or more host groups.</p> <p>Arguments</p> <p><code>HOSTGROUP</code> Host group(s). Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>PROXY</code> Proxy to assign. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>/<code>--no-dryrun</code>Preview changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Proxy_Group/","title":"Proxy Group","text":""},{"location":"commands/Proxy_Group/#add_proxy_to_group","title":"add_proxy_to_group","text":"<pre><code>add_proxy_to_group &lt;NAME_OR_ID&gt; &lt;PROXY_GROUP&gt; &lt;LOCAL_ADDRESS&gt; &lt;LOCAL_PORT&gt;\n</code></pre> <p>Add a proxy to a proxy group.</p> <p>Requires a local address and port for active agent redirection if if the proxy does not have it set.</p> <p>Examples</p> <p>Add a proxy to a proxy group</p> <pre><code>add_proxy_to_group proxy1 group1 192.168.0.2 10051\n</code></pre> <p>Arguments</p> <p><code>NAME_OR_ID</code> Name or ID of proxy to add.Type: <code>text</code> Required: \u2705</p> <p><code>PROXY_GROUP</code> Name or ID of proxy group to add proxy to.Type: <code>text</code> Required: \u2705</p> <p><code>LOCAL_ADDRESS</code> Address for active agents.Type: <code>text</code> </p> <p><code>LOCAL_PORT</code> Address for active agents.Type: <code>text</code> </p>"},{"location":"commands/Proxy_Group/#remove_proxy_from_group","title":"remove_proxy_from_group","text":"<pre><code>remove_proxy_from_group &lt;NAME_OR_ID&gt;\n</code></pre> <p>Remove a proxy from a proxy group.</p> <p>Arguments</p> <p><code>NAME_OR_ID</code> Name or ID of proxy to remove.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Proxy_Group/#show_proxy_group_hosts","title":"show_proxy_group_hosts","text":"<pre><code>show_proxy_group_hosts &lt;PROXYGROUP&gt;\n</code></pre> <p>Show all hosts in a proxy group.</p> <p>Arguments</p> <p><code>PROXYGROUP</code> Proxy group name or ID. Supports wildcards.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Proxy_Group/#show_proxy_groups","title":"show_proxy_groups","text":"<pre><code>show_proxy_groups &lt;NAME_OR_ID&gt; [OPTIONS]\n</code></pre> <p>Show all proxy groups and their proxies.</p> <p>Optionally takes in a list of names or IDs to filter by.</p> <p>Examples</p> <p>Show all proxy groups</p> <pre><code>show_proxy_groups\n</code></pre> <p>Show proxy groups with a specific proxy</p> <pre><code>show_proxy_groups --proxy proxy1\n</code></pre> <p>Show proxy groups with either proxy1 or proxy2</p> <pre><code>show_proxy_groups --proxy proxy1,proxy2\n</code></pre> <p>Arguments</p> <p><code>NAME_OR_ID</code> Filter by proxy name or ID. Comma-separated. Supports wildcards.Type: <code>text</code> </p> <p>Options</p> <p><code>--proxy</code> <code>&lt;PROXIES&gt;</code> Show only groups containing these proxies. Comma-separated.Type: <code>text</code> </p>"},{"location":"commands/Proxy_Group/#update_hostgroup_proxygroup","title":"update_hostgroup_proxygroup","text":"<pre><code>update_hostgroup_proxygroup &lt;HOSTGROUP&gt; &lt;PROXYGROUP&gt; [OPTIONS]\n</code></pre> <p>Assign a proxy group to all hosts in one or more host groups.</p> <p>Arguments</p> <p><code>HOSTGROUP</code> Host group(s). Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>PROXYGROUP</code> Proxy group to assign. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>/<code>--no-dryrun</code>Preview changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template/","title":"Template","text":""},{"location":"commands/Template/#link_template_to_host","title":"link_template_to_host","text":"<pre><code>link_template_to_host &lt;TEMPLATE_NAMES_OR_IDS&gt; &lt;HOSTNAMES_OR_IDS&gt; [OPTIONS]\n</code></pre> <p>Link templates to hosts.</p> <p>Examples</p> <p>Link one template to one host</p> <pre><code>link_template_to_host 'Apache by HTTP' foo.example.com\n</code></pre> <p>Link many templates to many hosts</p> <pre><code>link_template_to_host 'Apache by HTTP,HAProxy by Zabbix agent' foo.example.com,bar.example.com\n</code></pre> <p>Link one template to all hosts</p> <pre><code>link_template_to_host 'Apache by HTTP' '*'\n</code></pre> <p>Link many templates to all hosts</p> <pre><code>link_template_to_host 'Apache by HTTP,HAProxy by Zabbix agent' '*'\n</code></pre> <p>Link all templates to all hosts (use with caution!)</p> <pre><code>link_template_to_host '*' '*'\n</code></pre> <p>Arguments</p> <p><code>TEMPLATE_NAMES_OR_IDS</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>HOSTNAMES_OR_IDS</code> Hostnames or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--strict</code>Fail if any hosts or templates aren't found. Should not be used in conjunction with wildcards.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--dryrun</code>Preview changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template/#link_template_to_template","title":"link_template_to_template","text":"<pre><code>link_template_to_template &lt;SOURCE&gt; &lt;DEST&gt; [OPTIONS]\n</code></pre> <p>Link templates to templates.</p> <p>NOTE: Destination templates are the ones that are ultimately modified. Source templates remain unchanged.</p> <p>Examples</p> <p>Link one template to one template</p> <pre><code>link_template_to_template 'Apache by HTTP' foo_template\n</code></pre> <p>Link many templates to many templates</p> <pre><code>link_template_to_template 'Apache by HTTP,HAProxy by Zabbix agent' foo_template,bar_template\n</code></pre> <p>Link all templates starting with 'Apache' to a template</p> <pre><code>link_template_to_template 'Apache*' foo_template\n</code></pre> <p>Link all templates containing 'HTTP' to a subset of templates</p> <pre><code>link_template_to_template '*HTTP*' 'Webserver-*'\n</code></pre> <p>Arguments</p> <p><code>SOURCE</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>DEST</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--strict</code>Fail if any templates aren't found. Should not be used in conjunction with wildcards.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--dryrun</code>Do not actually link templates, just show what would be done.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template/#show_items","title":"show_items","text":"<pre><code>show_items &lt;TEMPLATE_NAME&gt;\n</code></pre> <p>Show a template's items.</p> <p>Examples</p> <p>Show items for a template</p> <pre><code>show_items 'Apache by HTTP'\n</code></pre> <p>Arguments</p> <p><code>TEMPLATE_NAME</code> Template name or ID. Supports wildcards.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Template/#show_template","title":"show_template","text":"<pre><code>show_template &lt;TEMPLATE_NAME&gt;\n</code></pre> <p>Show a template.</p> <p>Arguments</p> <p><code>TEMPLATE_NAME</code> Template name or ID. Names support wildcards.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Template/#show_templates","title":"show_templates","text":"<pre><code>show_templates &lt;TEMPLATES&gt;\n</code></pre> <p>Show all templates.</p> <p>Shows all templates by default. The template name can be a pattern containing wildcards. Names and IDs cannot be mixed.</p> <p>Arguments</p> <p><code>TEMPLATES</code> Template name(s) or ID(s). Comma-separated. Supports wildcards.Type: <code>text</code> </p>"},{"location":"commands/Template/#unlink_template_from_host","title":"unlink_template_from_host","text":"<pre><code>unlink_template_from_host &lt;TEMPLATE_NAMES_OR_IDS&gt; &lt;HOSTNAMES_OR_IDS&gt; [OPTIONS]\n</code></pre> <p>Unlink templates from hosts.</p> <p>Unlinks and clears by default. Use <code>--no-clear</code> to unlink without clearing.</p> <p>Examples</p> <p>Unlink a template from a host</p> <pre><code>unlink_template_from_host 'Apache by HTTP' foo.example.com\n</code></pre> <p>Unlink many templates from many hosts</p> <pre><code>unlink_template_from_host 'Apache by HTTP,HAProxy by Zabbix agent' foo.example.com,bar.example.com\n</code></pre> <p>Unlink one template from all hosts</p> <pre><code>unlink_template_from_host 'Apache by HTTP' '*'\n</code></pre> <p>Unlink templates starting with 'Apache' from hosts starting with 'Web'</p> <pre><code>unlink_template_from_host 'Apache*' 'Web-*'\n</code></pre> <p>Unlink template from host without clearing items and triggers</p> <pre><code>unlink_template_from_host --no-clear 'Apache by HTTP' foo.example.com\n</code></pre> <p>Arguments</p> <p><code>TEMPLATE_NAMES_OR_IDS</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>HOSTNAMES_OR_IDS</code> Hostnames or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--strict</code>Fail if any hosts or templates aren't found. Should not be used in conjunction with wildcards.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--dryrun</code>Preview changes.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--clear</code>/<code>--no-clear</code>Unlink and clear templates.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/Template/#unlink_template_from_template","title":"unlink_template_from_template","text":"<pre><code>unlink_template_from_template &lt;SOURCE&gt; &lt;DEST&gt; [OPTIONS]\n</code></pre> <p>Unlink templates from templates.</p> <p>Unlinks and clears by default. Use <code>--no-clear</code> to unlink without clearing. NOTE: Destination templates are the ones that are ultimately modified. Source templates remain unchanged.</p> <p>Examples</p> <p>Unlink one template from one template</p> <pre><code>unlink_template_from_template 'Apache by HTTP' foo_template\n</code></pre> <p>Unlink many templates from many templates</p> <pre><code>unlink_template_from_template 'Apache by HTTP,HAProxy by Zabbix agent' foo_template,bar_template\n</code></pre> <p>Unlink all templates starting with 'Apache' from a template</p> <pre><code>unlink_template_from_template 'Apache*' foo_template\n</code></pre> <p>Unlink all templates containing 'HTTP' from a subset of templates</p> <pre><code>unlink_template_from_template '*HTTP*' 'Web-*'\n</code></pre> <p>Unlink a template without clearing items and triggers</p> <pre><code>unlink_template_from_template --no-clear foo_template bar_template\n</code></pre> <p>Arguments</p> <p><code>SOURCE</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>DEST</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--strict</code>Fail if any templates aren't found. Should not be used in conjunction with wildcards.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--clear</code>/<code>--no-clear</code>Unlink and clear templates.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--dryrun</code>Preview changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template_Group/","title":"Template Group","text":""},{"location":"commands/Template_Group/#add_template_to_group","title":"add_template_to_group","text":"<pre><code>add_template_to_group &lt;TEMPLATE_NAMES_OR_IDS&gt; &lt;GROUP_NAMES_OR_IDS&gt; [OPTIONS]\n</code></pre> <p>Add templates to groups.</p> <p>NOTE: Group arguments are interpreted as template groups in &gt;= 6.2, otherwise as host groups.</p> <p>Arguments</p> <p><code>TEMPLATE_NAMES_OR_IDS</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>GROUP_NAMES_OR_IDS</code> Host/template group names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--strict</code>Fail if any host groups or templates aren't found. Should not be used in conjunction with wildcards.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template_Group/#create_templategroup","title":"create_templategroup","text":"<pre><code>create_templategroup &lt;TEMPLATEGROUP&gt; [OPTIONS]\n</code></pre> <p>Create a new template group.</p> <p>Assigns default user group permissions by default.</p> <ul> <li><code>--rw-groups</code> defaults to config option <code>app.default_admin_usergroups</code>.</li> <li><code>--ro-groups</code> defaults to config option <code>app.default_create_user_usergroups</code>.</li> <li>Use <code>--no-usergroup-permissions</code> to create a group without any user group permissions.</li> </ul> <p>NOTE: Calls <code>create_hostgroup</code> for Zabbix versions &lt; 6.2.0.</p> <p>Examples</p> <p>Create a template group with default user group permissions</p> <pre><code>create_templategroup 'My Template Group'\n</code></pre> <p>Create a template group with specific RO and RW groups</p> <pre><code>create_templategroup 'My Template Group' --ro-groups users --rw-groups admins\n</code></pre> <p>Create a template group with no user group permissions</p> <pre><code>create_templategroup 'My Template Group' --no-usergroup-permissions\n</code></pre> <p>Arguments</p> <p><code>TEMPLATEGROUP</code> Name of the group.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--rw-groups</code> <code>&lt;RW_GROUPS&gt;</code> User group(s) to give read/write permissions. Comma-separated.Type: <code>text</code> </p> <p><code>--ro-groups</code> <code>&lt;RO_GROUPS&gt;</code> User group(s) to give read-only permissions. Comma-separated.Type: <code>text</code> </p> <p><code>--default-usergroups</code>,  <code>--usergroup-permissions</code>/<code>--no-default-usergroups</code>, <code>--no-usergroup-permissions</code>Assign default user group permissions from configs.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/Template_Group/#extend_templategroup","title":"extend_templategroup","text":"<pre><code>extend_templategroup &lt;SRC_GROUP&gt; &lt;DEST_GROUP&gt; [OPTIONS]\n</code></pre> <p>Add all templates from a group to other groups.</p> <p>Interprets the source group as a template group in &gt;= 6.2, otherwise as a host group.</p> <p>Does not modify the source group or its templates. To remove the templates from the source group, use the <code>move_templates</code> command instead.</p> <p>Arguments</p> <p><code>SRC_GROUP</code> Group to get templates from.Type: <code>text</code> Required: \u2705</p> <p><code>DEST_GROUP</code> Group(s) to add templates to. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--dryrun</code>Show groups and templates without copying.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template_Group/#move_templates","title":"move_templates","text":"<pre><code>move_templates &lt;SRC_GROUP&gt; &lt;DEST_GROUP&gt; [OPTIONS]\n</code></pre> <p>Move all templates from one group to another.</p> <p>Arguments</p> <p><code>SRC_GROUP</code> Group to move templates from.Type: <code>text</code> Required: \u2705</p> <p><code>DEST_GROUP</code> Group to move templates to.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--rollback</code>/<code>--no-rollback</code>Rollback changes if templates cannot be removed from source group afterwards.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--dryrun</code>Show templates and groups without making changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template_Group/#remove_template_from_group","title":"remove_template_from_group","text":"<pre><code>remove_template_from_group &lt;TEMPLATE_NAMES_OR_IDS&gt; &lt;GROUP_NAMES_OR_IDS&gt; [OPTIONS]\n</code></pre> <p>Remove templates from groups.</p> <p>Examples</p> <p>Remove one template from one group</p> <pre><code>remove_template_from_group 'Apache by HTTP' foo_group\n</code></pre> <p>Remove many templates from many groups</p> <pre><code>remove_template_from_group 'Apache by HTTP,HAProxy by Zabbix agent' foo_group,bar_group\n</code></pre> <p>Remove all templates starting with 'Apache' from a group</p> <pre><code>remove_template_from_group 'Apache*' foo_group\n</code></pre> <p>Remove all templates containing 'HTTP' from all groups</p> <pre><code>remove_template_from_group '*HTTP*' '*'\n</code></pre> <p>Arguments</p> <p><code>TEMPLATE_NAMES_OR_IDS</code> Template names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p><code>GROUP_NAMES_OR_IDS</code> Host/template group names or IDs. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--strict</code>Fail if any host groups or templates aren't found. Should not be used in conjunction with wildcards.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--dryrun</code>Preview changes.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/Template_Group/#remove_templategroup","title":"remove_templategroup","text":"<pre><code>remove_templategroup &lt;TEMPLATEGROUP&gt;\n</code></pre> <p>Delete a template group.</p> <p>NOTE: Calls <code>remove_hostgroup</code> for Zabbix &lt;6.2.</p> <p>Arguments</p> <p><code>TEMPLATEGROUP</code> Name of the group to delete.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/Template_Group/#show_templategroup","title":"show_templategroup","text":"<pre><code>show_templategroup &lt;TEMPLATEGROUP&gt; [OPTIONS]\n</code></pre> <p>Show details for a template group.</p> <p>Arguments</p> <p><code>TEMPLATEGROUP</code> Name of the group to show. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--templates</code>/<code>--no-templates</code>Show/hide templates associated with the group.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/Template_Group/#show_templategroups","title":"show_templategroups","text":"<pre><code>show_templategroups &lt;NAME&gt; [OPTIONS]\n</code></pre> <p>Show template groups.</p> <p>Fetches all groups by default, but can be filtered by name.</p> <p>Examples</p> <p>Show all template groups</p> <pre><code>show_templategroups\n</code></pre> <p>Show all template groups starting with 'Web-'</p> <pre><code>show_templategroups 'Web-*'\n</code></pre> <p>Show template groups with 'web' in the name</p> <pre><code>show_templategroups '*web*'\n</code></pre> <p>Arguments</p> <p><code>NAME</code> Name of template group(s). Comma-separated. Supports wildcards.Type: <code>text</code> </p> <p>Options</p> <p><code>--templates</code>/<code>--no-templates</code>Show/hide templates associated with each group.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/User/","title":"User","text":""},{"location":"commands/User/#create_notification_user","title":"create_notification_user","text":"<pre><code>create_notification_user &lt;SENDTO&gt; &lt;MEDIATYPE&gt; [OPTIONS]\n</code></pre> <p>Create a notification user.</p> <p>Notification users can be used to send notifications when a Zabbix event happens.</p> <p>Sometimes we need to send a notification to a place not owned by any user in particular, e.g. an email list or jabber channel but Zabbix does not provide a way to define a media for a user group.</p> <p>This is the reason we use notification users. They are users nobody owns, but that can be used by other users to send notifications to the media defined in the notification user profile.</p> <p>Run <code>show_media_types</code> to get a list of available media types.</p> <p>Adds the user to the default user group and default notification user group unless <code>--usergroups</code> is specified.</p> <p>Examples</p> <p>Create a notification user for email reporting</p> <pre><code>create_notification_user user@example.com Email\n</code></pre> <p>Arguments</p> <p><code>SENDTO</code> Email address, SMS number, jabber address, etc.Type: <code>text</code> Required: \u2705</p> <p><code>MEDIATYPE</code> A media type name or ID defined in Zabbix. Case-sensitive.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--remarks</code> <code>&lt;REMARKS&gt;</code> Remarks about the notification user to include in username (max 20 chars).Type: <code>text</code> </p> <p><code>--username</code> <code>&lt;USERNAME&gt;</code> Override generated username. Ignores --remarks.Type: <code>text</code> </p> <p><code>--usergroups</code> <code>&lt;USERGROUPS&gt;</code> Comma-separated list of usergroups to add the user to. Overrides user groups in config file.Type: <code>text</code> </p> <p><code>--default-usergroups</code>/<code>--no-default-usergroups</code>Add the user to the default user groups defined in the config file in addition to any groups specified with <code>--usergroups</code>. This is the default behavior.Type: <code>boolean</code> Default: <code>True</code></p> <p><code>--dryrun</code>Do not create the user, just show what would be done.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/User/#create_user","title":"create_user","text":"<pre><code>create_user &lt;USERNAME&gt; [OPTIONS]\n</code></pre> <p>Create a user.</p> <p>Examples</p> <p>Create a user with a random password</p> <pre><code>create_user jdoe --firstname John --lastname Doe\n</code></pre> <p>Create a user with a specific password</p> <pre><code>create_user jdoe --firstname John --lastname Doe --passwd 'MyPassword'\n</code></pre> <p>Create a user with a password from stdin</p> <pre><code>create_user jdoe --firstname John --lastname Doe --passwd -\n</code></pre> <p>Create a user with a specific role and user groups</p> <pre><code>create_user jdoe --firstname John --lastname Doe --role admin --groups 'All-admins,Linux-admins'\n</code></pre> <p>Arguments</p> <p><code>USERNAME</code> Username of the user to create.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--firstname</code> <code>&lt;FIRST_NAME&gt;</code> First name of the user to create.Type: <code>text</code> </p> <p><code>--lastname</code>,  <code>--surname</code> <code>&lt;LAST_NAME&gt;</code> Last name of the user to create.Type: <code>text</code> </p> <p><code>--passwd</code>,  <code>--password</code> <code>&lt;PASSWORD&gt;</code> Password of the user to create. Set to '-' to prompt for password. Generates random password if omitted.Type: <code>text</code> </p> <p><code>--role</code> <code>&lt;ROLE&gt;</code> Role of the user.Type: <code>choice</code> Choices: <code>user</code>, <code>admin</code>, <code>superadmin</code>, <code>guest</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>Default: <code>user</code></p> <p><code>--autologin</code>/<code>--no-autologin</code>Enable auto-login for the user.Type: <code>boolean</code> Default: <code>False</code></p> <p><code>--autologout</code> <code>&lt;AUTOLOGOUT&gt;</code> User session lifetime in seconds. Set to 0 to never expire. Can be a time unit with suffix (0s, 15m, 1h, 1d, etc.)Type: <code>text</code> Default: <code>86400</code></p> <p><code>--groups</code>,  <code>--usergroups</code> <code>&lt;GROUPS&gt;</code> Comma-separated list of user group names or IDs to add the user to.Type: <code>text</code> </p> <p><code>--default-usergroups</code>/<code>--no-default-usergroups</code>Add the user to the default user groups defined in the config file in addition to any groups specified with <code>--groups</code>. This is the default behavior.Type: <code>boolean</code> Default: <code>True</code></p>"},{"location":"commands/User/#remove_user","title":"remove_user","text":"<pre><code>remove_user &lt;USERNAME&gt;\n</code></pre> <p>Remove a user.</p> <p>Arguments</p> <p><code>USERNAME</code> Username to remove.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/User/#show_user","title":"show_user","text":"<pre><code>show_user &lt;USERNAME&gt;\n</code></pre> <p>Show a user.</p> <p>Arguments</p> <p><code>USERNAME</code> Username of userType: <code>text</code> Required: \u2705</p>"},{"location":"commands/User/#show_users","title":"show_users","text":"<pre><code>show_users &lt;USERNAME_OR_ID&gt; [OPTIONS]\n</code></pre> <p>Show all users.</p> <p>Users can be filtered by name, ID, or role.</p> <p>Arguments</p> <p><code>USERNAME_OR_ID</code> Filter by username or ID. Supports wildcards.Type: <code>text</code> </p> <p>Options</p> <p><code>--role</code> <code>&lt;ROLE&gt;</code> Filter by role.Type: <code>choice</code> Choices: <code>user</code>, <code>admin</code>, <code>superadmin</code>, <code>guest</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code></p> <p><code>--limit</code> <code>&lt;LIMIT&gt;</code> Limit the number of users shown.Type: <code>integer</code> </p> <p><code>--sort</code> <code>&lt;SORT&gt;</code> Sort by field.Type: <code>choice</code> Choices: <code>name</code>, <code>id</code>, <code>role</code>Default: <code>name</code></p>"},{"location":"commands/User/#update_user","title":"update_user","text":"<pre><code>update_user &lt;USERNAME&gt; [OPTIONS]\n</code></pre> <p>Update a user.</p> <p>Use <code>add_user_to_usergroup</code> and <code>remove_user_from_usergroup</code> to manage user groups.</p> <p>Examples</p> <p>Assign new first and last name</p> <pre><code>update_user jdoe --firstname John --lastname Doe\n</code></pre> <p>Promote user to admin</p> <pre><code>update_user jdoe --role Admin\n</code></pre> <p>Update user's password, prompt for passwords</p> <pre><code>update_user jdoe --passwd - --old-passwd -\n</code></pre> <p>Update user's password, generate random new password</p> <pre><code>update_user jdoe --passwd ? --old-passwd -\n</code></pre> <p>Disable autologin for user</p> <pre><code>update_user jdoe --no-autologin\n</code></pre> <p>Arguments</p> <p><code>USERNAME</code> Username of the user to updateType: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--firstname</code> <code>&lt;FIRST_NAME&gt;</code> New first name.Type: <code>text</code> </p> <p><code>--lastname</code> <code>&lt;LAST_NAME&gt;</code> New last name.Type: <code>text</code> </p> <p><code>--passwd</code>,  <code>--new-passwd</code> <code>&lt;NEW_PASSWORD&gt;</code> New password for user. Set to '-' to prompt for password, '?' to generate a random password.Type: <code>text</code> </p> <p><code>--old-passwd</code> <code>&lt;OLD_PASSWORD&gt;</code> Existing password, required if --passwd is used. Set to '-' to prompt for password.Type: <code>text</code> </p> <p><code>--role</code> <code>&lt;ROLE&gt;</code> User role.Type: <code>choice</code> Choices: <code>user</code>, <code>admin</code>, <code>superadmin</code>, <code>guest</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code></p> <p><code>--autologin</code>/<code>--no-autologin</code>Enable/disable auto-loginType: <code>boolean</code> </p> <p><code>--autologout</code> <code>&lt;AUTOLOGOUT&gt;</code> User session lifetime in seconds. Set to 0 to never expire. Can be a time unit with suffix (0s, 15m, 1h, 1d, etc.)Type: <code>text</code> </p>"},{"location":"commands/User_Group/","title":"User Group","text":""},{"location":"commands/User_Group/#add_user_to_usergroup","title":"add_user_to_usergroup","text":"<pre><code>add_user_to_usergroup &lt;USERNAMES&gt; &lt;USERGROUPS&gt;\n</code></pre> <p>Add users to usergroups.</p> <p>Users and groups must exist.</p> <p>Arguments</p> <p><code>USERNAMES</code> Usernames to add. Comma-separated.Type: <code>text</code> Required: \u2705</p> <p><code>USERGROUPS</code> User groups to add the users to. Comma-separated.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/User_Group/#add_usergroup_permissions","title":"add_usergroup_permissions","text":"<pre><code>add_usergroup_permissions &lt;USERGROUP&gt; [OPTIONS]\n</code></pre> <p>Give a user group permissions to host/template groups.</p> <p>Run <code>show_hostgroups</code> to get a list of host groups, and <code>show_templategroups --no-templates</code> to get a list of template groups.</p> <p>Arguments</p> <p><code>USERGROUP</code> User group to give permissions to.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--hostgroup</code> <code>&lt;HOSTGROUPS&gt;</code> Comma-separated list of host group names.Type: <code>text</code> </p> <p><code>--templategroup</code> <code>&lt;TEMPLATEGROUPS&gt;</code> Comma-separated list of template group names.Type: <code>text</code> </p> <p><code>--permission</code> <code>&lt;PERMISSION&gt;</code> Permission to give to the user group.Type: <code>choice</code> Choices: <code>deny</code>, <code>ro</code>, <code>rw</code>, <code>0</code>, <code>2</code>, <code>3</code></p>"},{"location":"commands/User_Group/#create_usergroup","title":"create_usergroup","text":"<pre><code>create_usergroup &lt;USERGROUP&gt; [OPTIONS]\n</code></pre> <p>Create a user group.</p> <p>Arguments</p> <p><code>USERGROUP</code> Name of the user group to create.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--gui</code> <code>&lt;GUI_ACCESS&gt;</code> GUI access for the group.Type: <code>choice</code> Choices: <code>default</code>, <code>internal</code>, <code>ldap</code>, <code>disable</code>, <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>Default: <code>default</code></p> <p><code>--disabled</code>Create the user group in a disabled state.Type: <code>boolean</code> Default: <code>False</code></p>"},{"location":"commands/User_Group/#remove_user_from_usergroup","title":"remove_user_from_usergroup","text":"<pre><code>remove_user_from_usergroup &lt;USERNAMES&gt; &lt;USERGROUPS&gt;\n</code></pre> <p>Remove users from usergroups.</p> <p>Ignores users not in user groups. Users and groups must exist.</p> <p>Arguments</p> <p><code>USERNAMES</code> Usernames to remove. Comma-separated.Type: <code>text</code> Required: \u2705</p> <p><code>USERGROUPS</code> User groups to remove the users from. Comma-separated.Type: <code>text</code> Required: \u2705</p>"},{"location":"commands/User_Group/#show_usergroup","title":"show_usergroup","text":"<pre><code>show_usergroup &lt;USERGROUP&gt; [OPTIONS]\n</code></pre> <p>Show one or more user groups by name or ID.</p> <p>Examples</p> <p>Show user group 'Admins'</p> <pre><code>show_usergroup Admins\n</code></pre> <p>Show user groups 'Admins' and 'Operators'</p> <pre><code>show_usergroup Admins,Operators\n</code></pre> <p>Show all user groups containing 'web' sorted by ID</p> <pre><code>show_usergroup '*web*' --sort id\n</code></pre> <p>Arguments</p> <p><code>USERGROUP</code> Name or ID of the user group(s) to show. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--sort</code> <code>&lt;SORT&gt;</code> Sort by field.Type: <code>choice</code> Choices: <code>name</code>, <code>id</code>, <code>users</code>Default: <code>name</code></p>"},{"location":"commands/User_Group/#show_usergroup_permissions","title":"show_usergroup_permissions","text":"<pre><code>show_usergroup_permissions &lt;USERGROUP&gt; [OPTIONS]\n</code></pre> <p>Show permissions for one or more user groups.</p> <p>Examples</p> <p>Show permissions for user group 'Admins'</p> <pre><code>show_usergroup_permissions Admins\n</code></pre> <p>Show permissions for user groups 'Admins' and 'Operators'</p> <pre><code>show_usergroup_permissions Admins,Operators\n</code></pre> <p>Show permissions for all user groups sorted by ID</p> <pre><code>show_usergroup_permissions * --sort id\n</code></pre> <p>Arguments</p> <p><code>USERGROUP</code> Name of user group. Comma-separated. Supports wildcards.Type: <code>text</code> Required: \u2705</p> <p>Options</p> <p><code>--sort</code> <code>&lt;SORT&gt;</code> Sort by field.Type: <code>choice</code> Choices: <code>name</code>, <code>id</code>, <code>users</code>Default: <code>name</code></p>"},{"location":"commands/User_Group/#show_usergroups","title":"show_usergroups","text":"<pre><code>show_usergroups &lt;USERGROUP&gt; [OPTIONS]\n</code></pre> <p>Show all suser groups.</p> <p>Can be filtered by name or ID.</p> <p>Examples</p> <p>Show all user groups</p> <pre><code>show_usergroups\n</code></pre> <p>Show user groups 'Admins' and 'Operators'</p> <pre><code>show_usergroup Admins,Operators\n</code></pre> <p>Show all user groups containing 'web' sorted by ID</p> <pre><code>show_usergroup '*web*' --sort id\n</code></pre> <p>Arguments</p> <p><code>USERGROUP</code> Name or ID of the user group(s) to show. Comma-separated. Supports wildcards.Type: <code>text</code> </p> <p>Options</p> <p><code>--sort</code> <code>&lt;SORT&gt;</code> Sort by field.Type: <code>choice</code> Choices: <code>name</code>, <code>id</code>, <code>users</code>Default: <code>name</code></p> <p><code>--limit</code>,  <code>-n</code> <code>&lt;LIMIT&gt;</code> Limit the number of results. 0 to show all.Type: <code>integer</code> Default: <code>0</code></p>"},{"location":"guide/","title":"User Guide","text":"<p>Zabbix CLI is an application that provides a command line interface for interacting with the Zabbix API. Once installed, it can be invoked with <code>zabbix-cli</code>.</p> <p>The application is intended to provide a more user-friendly interface to the Zabbix API, and make it easier to automate common tasks.</p>"},{"location":"guide/authentication/","title":"Authentication","text":"<p>Zabbix-cli provides several ways to authenticate. They are tried in the following order:</p> <ol> <li>API Token - Environment variables</li> <li>API Token - Config file</li> <li>Session file</li> <li>Password - Environment variables</li> <li>Password - Config file</li> <li>Password - Auth file</li> <li>Password - Prompt</li> </ol>"},{"location":"guide/authentication/#api-token","title":"API Token","text":"<p>The application supports authenticating with an API token. API tokens are created in the Zabbix frontend or via <code>zabbix-cli create_token</code>.</p>"},{"location":"guide/authentication/#environment-variables","title":"Environment variables","text":"<p>The API token can be set as an environment variable:</p> <pre><code>export ZABBIX_API_TOKEN=\"API_TOKEN\"\n</code></pre>"},{"location":"guide/authentication/#config-file","title":"Config file","text":"<p>The token can be set directly in the config file:</p> <pre><code>[api]\nauth_token = \"API_TOKEN\"\n</code></pre>"},{"location":"guide/authentication/#session-file","title":"Session file","text":"<p>The application can store and reuse session tokens between runs. Multiple sessions can be stored at the same time, which allows for switching between different users and/or Zabbix servers seamlessly without having to re-authenticate.</p> <p>This feature is enabled by default and configurable via the following options:</p> <pre><code>[app]\n# Enable persistent sessions (default: true)\nuse_session_file = true\n\n# Customize token file location (optional)\nsession_file = \"/path/to/auth/token/file\"\n\n# Enforce secure file permissions (600) (default: true, no effect on Windows)\nallow_insecure_auth_file = false\n</code></pre> <p>How it works:</p> <ul> <li>Log in once with username and password</li> <li>Token is automatically saved to the file</li> <li>Subsequent runs will use the saved token for authentication</li> </ul> <p>When <code>allow_insecure_auth_file</code> is set to <code>false</code>, the application will attempt to set <code>600</code> (read/write for owner only) permissions on the token file when creating/updating it.</p>"},{"location":"guide/authentication/#username-and-password","title":"Username and Password","text":"<p>The application supports authenticating with a username and password. The password can be set in the config file, an auth file, as environment variables, or prompted for when starting the application.</p>"},{"location":"guide/authentication/#environment-variables_1","title":"Environment variables","text":"<p>The username and password can be set as environment variables:</p> <pre><code>export ZABBIX_USERNAME=\"Admin\"\nexport ZABBIX_PASSWORD=\"zabbix\"\n</code></pre>"},{"location":"guide/authentication/#config-file_1","title":"Config file","text":"<p>The password can be set directly in the config file:</p> <pre><code>[api]\nusername = \"Admin\"\npassword = \"zabbix\"\n</code></pre>"},{"location":"guide/authentication/#auth-file","title":"Auth file","text":"<p>A file named <code>.zabbix-cli_auth</code> can be created in the user's home directory or in the application's data directory. The file should contain a single line of text in the format <code>USERNAME::PASSWORD</code>.</p> <pre><code>echo \"Admin::zabbix\" &gt; ~/.zabbix-cli_auth\n</code></pre> <p>The location of the auth file file can be changed in the config file:</p> <pre><code>[app]\nauth_file = \"~/.zabbix-cli_auth\"\n</code></pre>"},{"location":"guide/authentication/#prompt","title":"Prompt","text":"<p>When all other authentication methods fail, the application will prompt for a username and password. The default username in the prompt can be configured:</p> <pre><code>[api]\nusername = \"Admin\"\n</code></pre>"},{"location":"guide/authentication/#url","title":"URL","text":"<p>The URL of the Zabbix API can be set in the config file, as an environment variable, or prompted for when starting the application.</p> <p>They are processed in the following order:</p> <ol> <li>Environment variables</li> <li>Config file</li> <li>Prompt</li> </ol> <p>The URL should not include <code>/api_jsonrpc.php</code>.</p>"},{"location":"guide/authentication/#environment-variables_2","title":"Environment variables","text":"<p>The URL can also be set as an environment variable:</p> <pre><code>export ZABBIX_URL=\"http://zabbix.example.com\"\n</code></pre>"},{"location":"guide/authentication/#config-file_2","title":"Config file","text":"<p>The URL of the Zabbix API can be set in the config file:</p> <pre><code>[api]\nurl = \"http://zabbix.example.com\"\n</code></pre>"},{"location":"guide/authentication/#prompt_1","title":"Prompt","text":"<p>When all other methods fail, the application will prompt for the URL of the Zabbix API.</p>"},{"location":"guide/bulk/","title":"Bulk Operations","text":"<p>Zabbix-CLI supports performing bulk operations with the <code>--file</code> option:</p> <pre><code>zabbix-cli --file /path/to/commands.txt\n</code></pre> <p>The <code>--file</code> option takes in a file containing commands to run in bulk. Each line in the file should be a separate command. Comments are added by prepending a <code>#</code> to the line.</p> <pre><code># /path/to/commands.txt\n# This is a comment\nshow_hostgroup \"Linux servers\"\ncreate_host foobarbaz.example.com --hostgroup \"Linux servers,Applications\" --proxy .+ --status on --no-default-hostgroup --description \"Added in bulk mode\"\nshow_host foobarbaz.example.com\ncreate_hostgroup \"My new group\"\nadd_host_to_hostgroup foobarbaz.example.com \"My new group\"\nremove_host_from_hostgroup foobarbaz.example.com \"My new group\"\nremove_hostgroup \"My new group\"\nremove_host foobarbaz.example.com\n</code></pre> <p>Example of a bulk operation file that adds a host and a host group, then removes them.</p>"},{"location":"guide/bulk/#errors","title":"Errors","text":"<p>By default, all errors are fatal. If a command fails, the bulk operation is aborted. This behavior can be changed with the <code>app.bulk_mode</code> setting in the configuration file:</p> <pre><code>[app]\nbulk_mode = \"strict\" # strict|continue|skip\n</code></pre> <ul> <li><code>strict</code>: The operation will stop at the first encountered error.</li> <li><code>continue</code>: The operation will continue on errors and report them afterwards.</li> <li><code>skip</code>: Same as continue, but invalid lines in the bulk file are also skipped. Errors are completely ignored.</li> </ul>"},{"location":"guide/configuration/","title":"Configuration","text":"<p>Configuration file directory</p> <p>The application uses the platformdirs package to determine the configuration directory.</p> <p>The application is configured with a TOML file. The file is created on startup if it doesn't exist.</p> <p>The configuration file is searched for in the following locations:</p> LinuxmacOSWindows <ul> <li><code>./zabbix-cli.toml</code></li> <li><code>$XDG_CONFIG_HOME/zabbix-cli/zabbix-cli.toml</code></li> <li><code>$XDG_CONFIG_DIRS/zabbix-cli/zabbix-cli.toml</code></li> </ul> <ul> <li><code>./zabbix-cli.toml</code></li> <li><code>~/Library/Application Support/zabbix-cli/zabbix-cli.toml</code></li> <li><code>~/Library/Preferences/zabbix-cli/zabbix-cli.toml</code></li> </ul> <ul> <li><code>.\\zabbix-cli.toml</code></li> <li><code>%LOCALAPPDATA%\\zabbix-cli\\zabbix-cli.toml</code></li> <li><code>%APPDATA%\\zabbix-cli\\zabbix-cli.toml</code></li> </ul>"},{"location":"guide/configuration/#create-a-config","title":"Create a config","text":"<p>The configuration file is automatically created when the application is started for the first time.</p> <p>The config file can also manually be created with the <code>init</code> command:</p> <pre><code>zabbix-cli init\n</code></pre> <p>The application will print the location of the created configuration file.</p> <p>To bootstrap the config with a URL and username, use the options <code>--url</code> and <code>--user</code>:</p> <pre><code>zabbix-cli init --url https://zabbix.example.com --user Admin\n</code></pre> <p>To overwrite an existing configuration file, use the <code>--overwrite</code> option:</p> <pre><code>zabbix-cli init --overwrite\n</code></pre>"},{"location":"guide/configuration/#config-directory","title":"Config directory","text":"<p>The default configuration directory can be opened in the system's file manager with the <code>open</code> command:</p> <pre><code>zabbix-cli open config\n</code></pre> <p>To print the path instead of opening it, use the <code>--path</code> option:</p> <pre><code>zabbix-cli open config --path\n</code></pre>"},{"location":"guide/configuration/#show-config","title":"Show config","text":"<p>The contents of the current configuration file can be displayed with <code>show_config</code>:</p> <pre><code>zabbix-cli show_config\n</code></pre>"},{"location":"guide/configuration/#sample-config","title":"Sample config","text":"<p>A sample configuration file can be printed to the terminal with the <code>sample_config</code> command. This can be redirected to a file to create a configuration file in an arbitrary location:</p> <pre><code>zabbix-cli sample_config &gt; /path/to/config.toml\n</code></pre> <p>The created config looks like this (with actual paths instead of placeholders)</p> <pre><code>[api]\nurl = \"https:/zabbix.example.com\"\nusername = \"Admin\"\npassword = \"\"\nauth_token = \"\"\nverify_ssl = true\n\n[app]\nuse_session_file = true\nsession_file = \"/path/to/data_dir/.zabbix-cli_session.json\"\nauth_token_file = \"/path/to/data_dir/.zabbix-cli_auth_token\"\nuse_auth_file = true\nauth_file = \"/path/to/data_dir/.zabbix-cli_auth\"\nallow_insecure_auth_file = true\nhistory = true\nhistory_file = \"/path/to/data_dir/history\"\nbulk_mode = \"strict\"\nlegacy_json_format = false\n\n[app.commands.create_host]\ncreate_interface = true\nhostgroups = []\n\n[app.commands.create_group]\nro_groups = []\nrw_groups = []\n\n[app.commands.create_hostgroup]\nro_groups = []\nrw_groups = []\n\n[app.commands.create_templategroup]\nro_groups = []\nrw_groups = []\n\n[app.commands.create_user]\nusergroups = []\n\n[app.commands.create_notification_user]\nusergroups = []\n\n[app.commands.export]\ndirectory = \"/path/to/data_dir/exports\"\nformat = \"json\"\ntimestamps = false\n\n[app.output]\nformat = \"table\"\ncolor = true\npaging = false\n\n[logging]\nenabled = true\nlog_level = \"INFO\"\nlog_file = \"/path/to/logs_dir/zabbix-cli.log\"\n\n[plugins]\n</code></pre>"},{"location":"guide/configuration/#options","title":"Options","text":""},{"location":"guide/configuration/#api","title":"<code>api</code>","text":"<p>Configuration for the Zabbix API.</p>"},{"location":"guide/configuration/#url","title":"<code>url</code>","text":"<p>URL of the Zabbix API host. Should not include <code>/api_jsonrpc.php</code>.</p> <p>Type: <code>str</code></p> <p>Default: <code>https:/zabbix.example.com</code></p> <p>Example:</p> <pre><code>[api]\nurl = \"https:/zabbix.example.com\"\n</code></pre>"},{"location":"guide/configuration/#username","title":"<code>username</code>","text":"<p>Username for the Zabbix API.</p> <p>Type: <code>str</code></p> <p>Default: <code>Admin</code></p> <p>Example:</p> <pre><code>[api]\nusername = \"Admin\"\n</code></pre>"},{"location":"guide/configuration/#password","title":"<code>password</code>","text":"<p>Password for user.</p> <p>Type: <code>str</code></p> <p>Example:</p> <pre><code>[api]\npassword = \"zabbix\"\n</code></pre>"},{"location":"guide/configuration/#auth_token","title":"<code>auth_token</code>","text":"<p>API auth token.</p> <p>Type: <code>str</code></p> <p>Example:</p> <pre><code>[api]\nauth_token = \"API_TOKEN_123\"\n</code></pre>"},{"location":"guide/configuration/#verify_ssl","title":"<code>verify_ssl</code>","text":"<p>Verify SSL certificate of the Zabbix API host. Can also be a path to a CA bundle.</p> <p>Type: <code>Union | str</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[api]\nverify_ssl = true\n</code></pre>"},{"location":"guide/configuration/#timeout","title":"<code>timeout</code>","text":"<p>API request timeout in seconds.</p> <p>Type: <code>Optional</code></p> <p>Example:</p> <pre><code>[api]\ntimeout = 0\n</code></pre>"},{"location":"guide/configuration/#app","title":"<code>app</code>","text":"<p>Configuration for app defaults and behavior.</p>"},{"location":"guide/configuration/#use_session_file","title":"<code>use_session_file</code>","text":"<p>Use session file for storing API session IDs for persistent sessions.</p> <p>Type: <code>bool</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[app]\nuse_session_file = true\n</code></pre>"},{"location":"guide/configuration/#session_file","title":"<code>session_file</code>","text":"<p>Path to session file.</p> <p>Type: <code>str</code></p> <p>Default: <code>/path/to/data_dir/.zabbix-cli_session.json</code></p> <p>Example:</p> <pre><code>[app]\nsession_file = \"/path/to/data_dir/.zabbix-cli_session.json\"\n</code></pre>"},{"location":"guide/configuration/#use_auth_file","title":"<code>use_auth_file</code>","text":"<p>Look for user credentials stored in plaintext in auth file.</p> <p>Type: <code>bool</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[app]\nuse_auth_file = true\n</code></pre>"},{"location":"guide/configuration/#auth_file","title":"<code>auth_file</code>","text":"<p>Path to auth file.</p> <p>Type: <code>str</code></p> <p>Default: <code>/path/to/data_dir/.zabbix-cli_auth</code></p> <p>Example:</p> <pre><code>[app]\nauth_file = \"/path/to/data_dir/.zabbix-cli_auth\"\n</code></pre>"},{"location":"guide/configuration/#allow_insecure_auth_file","title":"<code>allow_insecure_auth_file</code>","text":"<p>Type: <code>bool</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[app]\nallow_insecure_auth_file = true\n</code></pre>"},{"location":"guide/configuration/#history","title":"<code>history</code>","text":"<p>Enable command history.</p> <p>Type: <code>bool</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[app]\nhistory = true\n</code></pre>"},{"location":"guide/configuration/#history_file","title":"<code>history_file</code>","text":"<p>Path to history file.</p> <p>Type: <code>str</code></p> <p>Default: <code>/path/to/data_dir/history</code></p> <p>Example:</p> <pre><code>[app]\nhistory_file = \"/path/to/data_dir/history\"\n</code></pre>"},{"location":"guide/configuration/#bulk_mode","title":"<code>bulk_mode</code>","text":"<p>Bulk mode error handling.</p> <p>Type: <code>str</code></p> <p>Default: <code>strict</code></p> <p>Choices: <code>strict, continue, skip</code></p> <p>Example:</p> <pre><code>[app]\nbulk_mode = \"strict\"\n</code></pre>"},{"location":"guide/configuration/#legacy_json_format","title":"<code>legacy_json_format</code>","text":"<p>Use legacy JSON format.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p> <p>Example:</p> <pre><code>[app]\nlegacy_json_format = false\n</code></pre>"},{"location":"guide/configuration/#appcommands","title":"<code>app.commands</code>","text":"<p>Configuration of commands.</p>"},{"location":"guide/configuration/#appcommandscreate_host","title":"<code>app.commands.create_host</code>","text":"<p>Configuration for the <code>create_host</code> command.</p>"},{"location":"guide/configuration/#create_interface","title":"<code>create_interface</code>","text":"<p>Create a DNS/IP interface for the host automatically.</p> <p>Type: <code>bool</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[app.commands.create_host]\ncreate_interface = true\n</code></pre>"},{"location":"guide/configuration/#hostgroups","title":"<code>hostgroups</code>","text":"<p>Default host group to add hosts to.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_host]\nhostgroups = []\n</code></pre>"},{"location":"guide/configuration/#appcommandscreate_group","title":"<code>app.commands.create_group</code>","text":"<p>Shared config for <code>create_hostgroup</code> and <code>create_templategroup</code> commands.</p> <p>Can be used to configure both commands at once. Has no effect if <code>create_hostgroup</code> or <code>create_templategroup</code> is set.</p>"},{"location":"guide/configuration/#ro_groups","title":"<code>ro_groups</code>","text":"<p>Default user groups to give read-only permissions to groups when <code>--ro-groups</code> option is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_group]\nro_groups = []\n</code></pre>"},{"location":"guide/configuration/#rw_groups","title":"<code>rw_groups</code>","text":"<p>Default user groups to give read/write permissions to groups when <code>--rw-groups</code> option is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_group]\nrw_groups = []\n</code></pre>"},{"location":"guide/configuration/#appcommandscreate_hostgroup","title":"<code>app.commands.create_hostgroup</code>","text":"<p>Configuration for the <code>create_hostgroup</code> command.</p>"},{"location":"guide/configuration/#ro_groups_1","title":"<code>ro_groups</code>","text":"<p>Default user groups to give read-only permissions to groups when <code>--ro-groups</code> option is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_hostgroup]\nro_groups = []\n</code></pre>"},{"location":"guide/configuration/#rw_groups_1","title":"<code>rw_groups</code>","text":"<p>Default user groups to give read/write permissions to groups when <code>--rw-groups</code> option is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_hostgroup]\nrw_groups = []\n</code></pre>"},{"location":"guide/configuration/#appcommandscreate_templategroup","title":"<code>app.commands.create_templategroup</code>","text":"<p>Configuration for the <code>create_templategroup</code> command.</p>"},{"location":"guide/configuration/#ro_groups_2","title":"<code>ro_groups</code>","text":"<p>Default user groups to give read-only permissions to groups when <code>--ro-groups</code> option is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_templategroup]\nro_groups = []\n</code></pre>"},{"location":"guide/configuration/#rw_groups_2","title":"<code>rw_groups</code>","text":"<p>Default user groups to give read/write permissions to groups when <code>--rw-groups</code> option is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_templategroup]\nrw_groups = []\n</code></pre>"},{"location":"guide/configuration/#appcommandscreate_user","title":"<code>app.commands.create_user</code>","text":"<p>Configuration for the <code>create_user</code> command.</p>"},{"location":"guide/configuration/#usergroups","title":"<code>usergroups</code>","text":"<p>Default user groups to add users to when <code>--usergroups</code> is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_user]\nusergroups = []\n</code></pre>"},{"location":"guide/configuration/#appcommandscreate_notification_user","title":"<code>app.commands.create_notification_user</code>","text":"<p>Configuration for the <code>create_notification_user</code> command.</p>"},{"location":"guide/configuration/#usergroups_1","title":"<code>usergroups</code>","text":"<p>Default user groups to add notification users to when <code>--usergroups</code> is not provided.</p> <p>Type: <code>list[str]</code></p> <p>Example:</p> <pre><code>[app.commands.create_notification_user]\nusergroups = []\n</code></pre>"},{"location":"guide/configuration/#appcommandsexport","title":"<code>app.commands.export</code>","text":"<p>Shared configuration for <code>export_configuration</code> and <code>import_configuration</code> commands.</p>"},{"location":"guide/configuration/#directory","title":"<code>directory</code>","text":"<p>Default directory to export files to.</p> <p>Type: <code>str</code></p> <p>Default: <code>/path/to/data_dir/exports</code></p> <p>Example:</p> <pre><code>[app.commands.export]\ndirectory = \"/path/to/data_dir/exports\"\n</code></pre>"},{"location":"guide/configuration/#format","title":"<code>format</code>","text":"<p>Default export format.</p> <p>Type: <code>str</code></p> <p>Default: <code>json</code></p> <p>Choices: <code>xml, json, yaml, php</code></p> <p>Example:</p> <pre><code>[app.commands.export]\nformat = \"json\"\n</code></pre>"},{"location":"guide/configuration/#timestamps","title":"<code>timestamps</code>","text":"<p>Include timestamps in exported filenames.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p> <p>Example:</p> <pre><code>[app.commands.export]\ntimestamps = false\n</code></pre>"},{"location":"guide/configuration/#appoutput","title":"<code>app.output</code>","text":"<p>Configuration for output formatting.</p>"},{"location":"guide/configuration/#format_1","title":"<code>format</code>","text":"<p>Default output format.</p> <p>Type: <code>str</code></p> <p>Default: <code>table</code></p> <p>Choices: <code>json, table</code></p> <p>Example:</p> <pre><code>[app.output]\nformat = \"table\"\n</code></pre>"},{"location":"guide/configuration/#color","title":"<code>color</code>","text":"<p>Use colors in terminal output.</p> <p>Type: <code>bool</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[app.output]\ncolor = true\n</code></pre>"},{"location":"guide/configuration/#paging","title":"<code>paging</code>","text":"<p>Use paging in terminal output.</p> <p>Type: <code>bool</code></p> <p>Default: <code>false</code></p> <p>Example:</p> <pre><code>[app.output]\npaging = false\n</code></pre>"},{"location":"guide/configuration/#logging","title":"<code>logging</code>","text":"<p>Configuration for application logs.</p>"},{"location":"guide/configuration/#enabled","title":"<code>enabled</code>","text":"<p>Enable logging.</p> <p>Type: <code>bool</code></p> <p>Default: <code>true</code></p> <p>Example:</p> <pre><code>[logging]\nenabled = true\n</code></pre>"},{"location":"guide/configuration/#log_level","title":"<code>log_level</code>","text":"<p>Log level.</p> <p>Type: <code>str</code></p> <p>Default: <code>INFO</code></p> <p>Choices: <code>DEBUG, INFO, WARN, WARNING, ERROR, CRITICAL, FATAL</code></p> <p>Example:</p> <pre><code>[logging]\nlog_level = \"INFO\"\n</code></pre>"},{"location":"guide/configuration/#log_file","title":"<code>log_file</code>","text":"<p>File for storing logs. Can be omitted to log to stderr (warning: NOISY).</p> <p>Type: <code>str</code></p> <p>Default: <code>/path/to/logs_dir/zabbix-cli.log</code></p> <p>Example:</p> <pre><code>[logging]\nlog_file = \"/path/to/logs_dir/zabbix-cli.log\"\n</code></pre>"},{"location":"guide/installation/","title":"Installation","text":"<p>The application is primarily distributed with <code>pip</code>, but other installation methods are also available.</p>"},{"location":"guide/installation/#install","title":"Install","text":"uvpipxHomebrewBinary <p>Install with <code>uv</code> to avoid conflicts with other Python packages in your system:</p> <pre><code>uv tool install zabbix-cli-uio\n</code></pre> <p>To try out Zabbix-CLI without installing it, run it directly with <code>uvx</code>:</p> <pre><code>uvx --from zabbix-cli-uio zabbix-cli\n</code></pre> <p>PyPI package name</p> <p>We are in the process of acquiring the PyPI project <code>zabbix-cli</code>. Until then, installation must be done via the alias <code>zabbix-cli-uio</code>.</p> <p>Install with <code>pipx</code> to avoid conflicts with other Python packages in your system:</p> <pre><code>pipx install zabbix-cli-uio\n</code></pre> <p>PyPI package name</p> <p>We are in the process of acquiring the PyPI project <code>zabbix-cli</code>. Until then, installation must be done via the alias <code>zabbix-cli-uio</code>.</p> <p>You can install <code>zabbix-cli</code> with Homebrew:</p> <pre><code>brew install zabbix-cli\n</code></pre> <p>Warning</p> <p>The Homebrew package is maintained by a third party. It may be outdated or contain bugs. For the most up to date version, follow the installation instructions for pipx.</p> <p>Binaries are built with PyInstaller for each release and can be downloaded from the GitHub releases page. Download the correct binary for your platform and save it as <code>zabbix-cli</code>.</p> <p>Linux &amp; macOS</p> <p>Remember to make the binary executable with <code>chmod +x zabbix-cli</code>.</p>"},{"location":"guide/installation/#upgrade","title":"Upgrade","text":"<p>The upgrade process depends on the chosen installation method.</p> uvpipxHomebrewBinary (Automatic)Binary (Manual) <pre><code>uv tool upgrade zabbix-cli-uio\n</code></pre> <pre><code>pipx upgrade zabbix-cli-uio\n</code></pre> <pre><code>brew upgrade zabbix-cli\n</code></pre> <p>Zabbix-cli has experimental support for updating itself. You can use the <code>zabbix-cli update</code> command to update the application to the latest version.</p> <p>Write access required</p> <p>The application must have write access to itself and the directory it resides in.</p> <pre><code>zabbix-cli update\n</code></pre> <p>The latest binary can be downloaded from GitHub releases page. Download the binary for your platform and replace the current one.</p> <p>Linux &amp; macOS</p> <p>Remember to make the binary executable with <code>chmod +x zabbix-cli</code>.</p>"},{"location":"guide/logging/","title":"Logging","text":"<p>The application supports logging to a file or directly to the terminal. By default, file logging is enabled and set to the <code>ERROR</code> level.</p>"},{"location":"guide/logging/#enabledisable-logging","title":"Enable/disable logging","text":"<p>Logging is enabled by default. To disable logging, set the <code>enabled</code> option to <code>false</code> in the configuration file:</p> <pre><code>[logging]\nenabled = true\n</code></pre>"},{"location":"guide/logging/#levels","title":"Levels","text":"<p>The application only logs messages with a level equal to or higher than the configured level. By default, the level is set to <code>ERROR</code>. The available levels are:</p> <ul> <li><code>DEBUG</code></li> <li><code>INFO</code></li> <li><code>WARNING</code></li> <li><code>ERROR</code></li> <li><code>CRITICAL</code></li> </ul> <p>The level can be set in the configuration file:</p> <pre><code>[logging]\nlevel = \"DEBUG\"\n</code></pre>"},{"location":"guide/logging/#log-file","title":"Log file","text":"<p>The default location of the log file is a file named <code>zabbix-cli.log</code> in the application's logs directory.</p> <p>The log file location can be changed in the configuration file:</p> <pre><code>[logging]\nlog_file = \"/path/to/zabbix-cli.log\"\n</code></pre> <p>The default logs directory can be opened with the command:</p> <pre><code>zabbix-cli open logs\n</code></pre>"},{"location":"guide/logging/#log-to-terminal","title":"Log to terminal","text":"<p>Verbose output</p> <p>Logging to the terminal can produce a lot of output, especially when the log level is set to <code>DEBUG</code>. Furthermore, some of the output messages may be shown twice, as they are printed once by the application and once by the logging library.</p> <p>If the <code>log_file</code> option is set to an empty string or an invalid file path, the application will log to the terminal instead of a file.</p> <pre><code>[logging]\nlog_file = \"\"\n</code></pre>"},{"location":"guide/migration/","title":"Migration Guide","text":"<p>Zabbix CLI 3.0 introduces a whole range of new features and improvements, as well as deprecating some old ones. This guide is intended to help you migrate from Zabbix CLI 2.x to 3.0.</p> <p>Notable changes include:</p> <p>Config</p> <ul> <li>New configuration file format</li> <li>New default configuration file location.</li> <li>New configuration options</li> <li>Renamed configuration options</li> </ul> <p>Exports</p> <ul> <li>New export formats<ul> <li><code>yaml</code></li> <li><code>php</code></li> </ul> </li> <li>New default export filenames<ul> <li>Exported files are no longer prefixed with <code>zabbix_export_</code></li> <li>Exported files no longer include a timestamp in the filename by default. Newer exports overwrite older ones automatically.</li> </ul> </li> </ul> <p>Commands</p> <ul> <li>Command invocation syntax<ul> <li>Using <code>zabbix-cli -C 'command args ...'</code> is no longer required.</li> <li>Commands can be invoked directly with <code>zabbix-cli command args ...</code></li> </ul> </li> <li>Command syntax<ul> <li>Commands use positional arguments to a lesser degree than in 2.x. Named options are now preferred.</li> <li>Legacy positional arguments are deprecated and will generate a warning when used.</li> <li>Most prompts have been removed and replaced with named options due to the increase in scope of the commands.</li> </ul> </li> </ul> <p>Output</p> <ul> <li>JSON output format<ul> <li>The JSON output format has changed. The old format can be enabled with the <code>app.legacy_json_format</code> option in the new TOML configuration file format.</li> <li>When using a legacy <code>.conf</code> configuration file, the old JSON format is assumed.</li> </ul> </li> </ul>"},{"location":"guide/migration/#config-file","title":"Config file","text":"<p>Multiple changes have been made to the application's configuration file, in terms of format, location and option names.</p>"},{"location":"guide/migration/#new-configuration-file-format","title":"New configuration file format","text":"<p>The configuration file is now in TOML format. The old <code>.conf</code> format is deprecated but can still be loaded. Old configs generate a warning when used. See configuration for more information on the new format.</p> <p>An old configuration file can be migrated using the <code>migrate_config</code> command:</p> <pre><code>zabbix-cli migrate_config\n</code></pre> <p>The command uses the currently loaded configuration file to generate a new TOML configuration file. The new file is saved in the default TOML configuration file location.</p> <p>Custom source and destination files can be specified with the <code>--source</code> and <code>--destination</code> options, respectively:</p> <pre><code>zabbix-cli migrate_config --source /path/to/old/config.conf --destination /path/to/new/config.toml\n</code></pre>"},{"location":"guide/migration/#new-default-configuration-file-location","title":"New default configuration file location","text":"<p>The location of the configuration file is now determined by platformdirs. See Configuration for a brief summary of the new default location.</p> <p>To open the default configuration file directory, use the command:</p> <pre><code>zabbix-cli open config\n</code></pre>"},{"location":"guide/migration/#new-configuration-options","title":"New configuration options","text":"<p>New configuration options have been introduced to the configuration file:</p> Option Description Default <code>app.default_format</code> Default output format in the CLI <code>table</code> <code>app.legacy_json_format</code> Enable legacy json format <code>false</code>"},{"location":"guide/migration/#renamed-configuration-options","title":"Renamed configuration options","text":"<p>Several configuration options have been renamed to better reflect their purpose.</p> <p>The following table lists the old config section names and their new counterparts:</p> Old Config Section New Config Section <code>zabbix_api</code> <code>api</code> <code>zabbix_config</code> <code>app</code> <p>The following table lists the old option names and their new counterparts:</p> Old Config Section Old Option Name New Config Section New Option Name <code>zabbix_config</code> <code>zabbix_api_url</code> <code>api</code> <code>url</code> <code>zabbix_config</code> <code>cert_verify</code> <code>api</code> <code>verify_ssl</code> <code>zabbix_config</code> <code>system_id</code> <code>api</code> <code>username</code> <code>zabbix_config</code> <code>default_directory_exports</code> <code>app</code> <code>export_directory</code> <code>zabbix_config</code> <code>default_export_format</code> <code>app</code> <code>export_format</code> <code>zabbix_config</code> <code>include_timestamp_export_filename</code> <code>app</code> <code>export_timestamps</code> <code>logging</code> <code>logging</code> <code>logging</code> <code>enabled</code> <p>For backwards compatibility, all the old option names are still supported, but will be removed in a future version.</p> <p>See Sample configuration file to see an example of the new configuration file format.</p>"},{"location":"guide/migration/#exports","title":"Exports","text":""},{"location":"guide/migration/#new-export-formats","title":"New export formats","text":"<p>Zabbix CLI 3.0 introduces two new export formats: <code>yaml</code> and <code>php</code>. The availability of these formats depends on the Zabbix version you are using.</p> <p>Furthermore, the formats are no longer case-sensitive. For example, <code>YAML</code> and <code>yaml</code> are now equivalent.</p>"},{"location":"guide/migration/#new-default-export-filenames","title":"New default export filenames","text":"<p>Exported files are no longer prefixed with <code>zabbix_export_</code>. This behavior can be re-enabled with the <code>export_configuration --legacy-filenames</code> option.</p> <p>Exported files no longer include a timestamp in the filename by default. Newer exports overwrite older ones automatically. Timestamps can be re-anbled by setting the <code>app.export_timestamps</code> option in the configuration file.</p>"},{"location":"guide/migration/#commands","title":"Commands","text":""},{"location":"guide/migration/#command-invocation-syntax","title":"Command invocation syntax","text":"<p>In Zabbix CLI 2.x, invoking single commands without entering the REPL required the <code>-C</code> option followed by the command and its arguments as a single string:</p> <pre><code>zabbix-cli -C 'show_hostgroup \"Linux servers\"'\n</code></pre> <p>In Zabbix CLI 3.0, the <code>-C</code> option is no longer required. Commands can be invoked directly:</p> <pre><code>zabbix-cli show_hostgroup \"Linux servers\"\n</code></pre>"},{"location":"guide/migration/#command-syntax","title":"Command syntax","text":"<p>In Zabbix CLI 3.0, the majority of positional arguments are replaced with named options. Each command required a specific number of positional arguments that had to be specified. For example, the <code>export_configuration</code> command in Zabbix CLI 2.x required the following syntax, even when we wanted to export all hosts:</p> <pre><code>zabbix-cli -C 'export_configuration /tmp/zabbix_export.conf hosts #all#'\n</code></pre> <p>In Zabbix CLI 3.0, the same command would look like this:</p> <pre><code>zabbix-cli export_configuration --directory /tmp/exports --type hosts\n</code></pre> <p>We don't have to pass in a special name argument to indicate that we want to export all hosts. Instead, we can simply omit the <code>--name</code> option.</p>"},{"location":"guide/migration/#output","title":"Output","text":""},{"location":"guide/migration/#json-output-format","title":"JSON output format","text":"<p>In Zabbix CLI 2.x, the output format of commands generally took the form of a JSON mapping with numeric string keys for each result. For example:</p> <pre><code>{\n  \"0\": {\n    \"hostid\": \"10609\",\n    \"host\": \"foo.example.com\",\n    \"groups\": [],\n    // ...\n  }\n}\n</code></pre> <p>In the new default JSON format introduced in Zabbix CLI 3.0, the output is always a JSON mapping with the keys <code>message</code>, <code>errors</code>, <code>return_code</code> and <code>result</code>. For example:</p> <pre><code>{\n  \"message\": \"\",\n  \"errors\": [],\n  \"return_code\": \"Done\",\n  \"result\": {\n    \"hostid\": \"10609\",\n    \"host\": \"foo.example.com\",\n    \"groups\": [],\n    // ...\n  }\n}\n</code></pre> <p>Which means when a command fails to execute or returns an error, the shape of the JSON output will be consistent with the successful output, making it significantly easier to parse:</p> <pre><code>{\n  \"message\": \"Host 'foobar.example.com' not found. Check your search pattern and filters.\",\n  \"errors\": [\n    \"Host 'foobar.example.com' not found. Check your search pattern and filters.\"\n  ],\n  \"return_code\": \"Error\",\n  \"result\": null\n}\n</code></pre> <p>In case of a chain of errors, the application makes an attempt to populate the <code>errors</code> array with all the exceptions raised when unwinding the stack.</p>"},{"location":"guide/usage/","title":"Usage","text":""},{"location":"guide/usage/#interactive-mode","title":"Interactive mode","text":"<p>Invoking <code>zabbix-cli</code> without any arguments will start the application in an interactive shell. This is the default mode of operation, and is the most user-friendly way to use the application.</p> <pre><code>zabbix-cli\n</code></pre> <p>Within the interactive shell, commands can be entered and executed. Command and argument hints, tab autocompletion and history are supported out of the box.</p> <pre><code>% zabbix-cli\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 Welcome to the Zabbix command-line interface (v3.0.0)      \u2502\n\u2502 Connected to server http://localhost:8082 (v7.0.0)         \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nType --help to list commands, :h for REPL help, :q to exit.\n&gt;\n</code></pre>"},{"location":"guide/usage/#single-command-mode","title":"Single command mode","text":"<p>Commands can also be invoked directly from the command line. This is useful for scripting and automation, as well for just running one-off commands.</p> <pre><code>zabbix-cli show_hostgroup \"Linux servers\"\n</code></pre>"},{"location":"guide/usage/#bulk-mode","title":"Bulk mode","text":"<p>Zabbix CLI also supports running commands sourced from a file with the <code>--file</code> option. This is useful for running a series of commands in bulk.</p> <p>The file should contain one command per line, with arguments separated by spaces. Comments can be added with <code>#</code>.</p> <pre><code>$ cat /path/to/commands.txt\n# This is a comment\nshow_hostgroup \"Linux servers\"\ncreate_host --host \"foo.example.com\" --hostgroup \"Linux servers,Applications\" --proxy .+ --status on --no-default-hostgroup --description \"Added in bulk mode\"\ncreate_hostgroup \"My new group\"\nadd_host_to_hostgroup foo.example.com \"My new group\"\n</code></pre> <pre><code>$ zabbix-cli --file /path/to/commands.txt\n\u256d\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 ID \u2502 Name          \u2502 Flag  \u2502 Hosts \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2  \u2502 Linux servers \u2502 Plain \u2502       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u2713 Created host 'foobarbaz.example.com' (10634)\n\u2713 Created host group My new group (31).\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 Hostgroup    \u2502 Hosts                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 My new group \u2502 foobarbaz.example.com \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u2713 Added 1 host to 1 host group.\n</code></pre>"},{"location":"plugins/","title":"Plugins","text":"<p>Work in progress</p> <p>The plugin system is still under development and may change in future releases.</p> <p>The functionality of the application can be extended with user-defined plugins. Plugins can be used to add new commands, modify existing commands, or add new functionality to the application. Plugins can installed as local Python modules or external Python packages.</p>"},{"location":"plugins/#local-plugins","title":"Local plugins","text":"<p>Local plugins are local Python modules (files) that are loaded by the application. They are the easiest way to add new functionality to the application, but are harder to distribute and share in a consistent manner. They are not automatically discovered by the application, and must be manually configured in the configuration file.</p> <p>See the local plugins page for more information.</p>"},{"location":"plugins/#external-plugins","title":"External plugins","text":"<p>External plugins are Python packages that can be installed with Pip and are automatically discovered by the application. They are easier to distribute and share, but require more effort on the part of the plugin author to create and maintain.</p> <p>See the external plugins page for more information.</p>"},{"location":"plugins/#choosing-the-correct-plugin-type","title":"Choosing the correct plugin type","text":"<p>Both local and external plugins are essentially written in the same manner, following the application\u2019s guidelines for plugin development outlined in Writing plugins. This common foundation ensures that the core functionality is consistent whether the plugin is distributed as a local module or an external package.</p> <p>The difference lies primarily in how they are packaged for distribution and how the application loads them. While local plugins require manual configuration to be recognized by the application, external plugins are designed to be discovered automatically once installed.</p> <p>An easy way to decide which type of plugin to use is to consider whether you intend to share your plugin or not. If you do, an external plugin is likely the way to go. If you are developing a plugin for personal use or for a specific environment, a local plugin may be more appropriate.</p>"},{"location":"plugins/external-plugins/","title":"External plugins","text":"<p>Important</p> <p>This page assumes you have read the Writing plugins page to understand the basics of writing plugins.</p> <p>External plugins are plugins that are packaged as Python packages and can be installed with Pip. Using <code>pyproject.toml</code> entry points, the application can automatically discover and load these plugins.</p> <p>A complete example of an external plugin can be found here: https://github.com/pederhan/zabbix-cli-plugin-entrypoint</p>"},{"location":"plugins/external-plugins/#packaging","title":"Packaging","text":"<p>Assuming you have written a plugin module as outlined inWriting plugins, you can package it as a Python package that defines an entry point for Zabbix-CLI to discover. Similar to local plugins, the entry point is a Python file or module that contains the plugin's functionality, except for external plugins, the entry point is defined in the <code>pyproject.toml</code> file - not the configuration file.</p>"},{"location":"plugins/external-plugins/#directory-structure","title":"Directory structure","text":"<p>The plugin package should have the following directory structure:</p> <pre><code>.\n\u251c\u2500\u2500 my_plugin/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 plugin.py\n\u2514\u2500\u2500 pyproject.toml\n</code></pre> <p>Alternatively, if using the src layout:</p> <pre><code>.\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 my_plugin/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u2514\u2500\u2500 plugin.py\n\u2514\u2500\u2500 pyproject.toml\n</code></pre>"},{"location":"plugins/external-plugins/#pyprojecttoml","title":"pyproject.toml","text":"<p>The package must contain a <code>pyproject.toml</code> file that instructs your package manager how to build and install the package. The following is a good starting point for a project using <code>hatchling</code> as the build backend:</p> <pre><code>[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n\n[project]\nname = \"my_plugin\"\nauthors = [\n    {name = \"Firstname Lastname\", email = \"mail@example.com\"},\n]\nversion = \"0.1.0\"\ndescription = \"My first Zabbix CLI plugin\"\nreadme = \"README.md\"\nrequires-python = \"&gt;=3.9\"\nlicense = \"MIT\"\ndependencies = [\n    \"zabbix-cli@git+https://github.com/unioslo/zabbix-cli.git\",\n]\n\n[tool.hatch.metadata]\nallow-direct-references = true\n\n[project.entry-points.'zabbix-cli.plugins']\nmy_plugin = \"my_plugin.plugin\"\n</code></pre> <p>Build backend</p> <p>If you prefer setuptools, you can omit the <code>[tool.hatch.metadata]</code> section and replace the <code>[build-system]</code> section with the following: <pre><code>[build-system]\nrequires = [\"setuptools\", \"setuptools-scm\"]\nbuild-backend = \"setuptools.build_meta\"\n</code></pre></p>"},{"location":"plugins/external-plugins/#declaring-the-entry-point","title":"Declaring the entry point","text":"<p>In your plugin's <code>pyproject.toml</code> file, you must declare an entry point that Zabbix-CLI can find and load. The entry point is defined in the <code>[project.entry-points.'zabbix-cli.plugins']</code> section, where the key is the name of the plugin and the value is the import path to your plugin module. Recall that we defined a directory structure like this:</p> <pre><code>.\n\u251c\u2500\u2500 my_plugin/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 plugin.py\n\u2514\u2500\u2500 pyproject.toml\n</code></pre> <p>In which case, the entry point should be defined as follows:</p> <pre><code>[project.entry-points.'zabbix-cli.plugins']\nmy_plugin = \"my_plugin.plugin\"\n</code></pre>"},{"location":"plugins/external-plugins/#configuration","title":"Configuration","text":"<p>Loading external plugins</p> <p>External plugins are automatically discovered by the application and do not require manual configuration to be loaded.</p> <p>Much like local plugins, external plugins define their configuration in the application's configuration file. However, the configuration is not used to load the plugin, and is only used to provide additional configuration options or customization.</p> <p>The name of the plugin in the configuration file must match the name used in the entry point section in the <code>pyproject.toml</code> file. Given that we used the name <code>my_plugin</code> in the entrypoint section, its configuration should look like this in the Zabbix-CLI configuration file:</p> <pre><code>[plugins.my_plugin]\n# module must be omitted for external plugins\nenabled = true\nextra_option_1 = \"Some value\"\nextra_option_2 = 42\n</code></pre> <p>Local plugin migration</p> <p>If rewriting a local plugin as an external one, remember to remove the <code>module</code> key from the plugin's configuration. If a <code>module</code> key is present, the application will attempt to load the plugin as a local plugin.</p>"},{"location":"plugins/external-plugins/#installation","title":"Installation","text":"<p>How to install the plugins depends on how Zabbix-CLI is installed. The plugin must be installed in the same Python environment as Zabbix-CLI, which is different for each installation method.</p>"},{"location":"plugins/external-plugins/#uv","title":"uv","text":"<p><code>uv</code> can install plugins using the same <code>uv tool install</code> command, but with the <code>--with</code> flag:</p> <pre><code>uv tool install zabbix-cli-uio --with my_plugin\n</code></pre>"},{"location":"plugins/external-plugins/#pipx","title":"pipx","text":"<p><code>pipx</code> Zabbix-CLI installations require the plugin to be injected into the environment:</p> <pre><code>pipx install zabbix-cli-uio\npipx inject zabbix-cli-uio my_plugin\n</code></pre>"},{"location":"plugins/external-plugins/#pip","title":"pip","text":"<p>If Zabbix-CLI is installed with <code>pip</code>, the plugin can be installed as a regular Python package:</p> <pre><code>pip install my_plugin\n</code></pre>"},{"location":"plugins/guide/","title":"Writing plugins","text":"<p>This guide goes over everything required to write a local plugin loaded by the application on startup.</p>"},{"location":"plugins/guide/#basics","title":"Basics","text":""},{"location":"plugins/guide/#directory-structure","title":"Directory structure","text":"<p>Start off by creating a new directory containing a Python module that defines the plugin, as well as an <code>__init__.py</code> file:</p> <pre><code>.\n\u2514\u2500\u2500 my_plugin/\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 plugin.py\n</code></pre> <p>The <code>__init__.py</code> file can be empty, but it's a good practice to define one for Python to treat the directory as a package. The <code>plugin.py</code> file is where the plugin's functionality is defined. Defining your plugin as a package lets you split your plugin into multiple files, making it easier to manage as it grows in complexity. It also allows you to more easily publish the plugin as an external package later on should you choose to do so.</p>"},{"location":"plugins/guide/#module","title":"Module","text":"<p>In order to define new commands in our plugin module, we need to import <code>zabbix_cli.app.app</code>. This is the main Typer application object that we will use to access the application state and define new commands with. A simple command that prints a message to the console can be defined like this:</p> <pre><code># /path/to/my_plugin/plugin.py\nfrom zabbix_cli.app import app\n\n@app.command(name=\"my_command\")\ndef my_command() -&gt; None:\n    print(\"Hello, world!\")\n</code></pre>"},{"location":"plugins/guide/#activating-the-plugin","title":"Activating the plugin","text":"<p>We will look at plugin configuration more in-depth in the Configuration section, but for now, we can add the plugin to the configuration file like this:</p> <pre><code>[plugins.my_plugin]\nmodule = \"/path/to/my_plugin/my_plugin.py\"\n</code></pre> <p>This tells the application to load the plugin module when it starts up.</p> <p>Running <code>zabbix-cli --help</code> should now show the new command in the list of available commands.</p> The command from the plugin is loaded <p>However, we can see that the command does not have a description or belong to any particular category. In the next section we will look at adding help text to commands and defining a category.</p>"},{"location":"plugins/guide/#help-text-and-categories","title":"Help text and categories","text":"<p>Commands can have a long and short description and belong to a category. The category is used to group commands in the help output. We can define a category for our plugin commands by providing an argument to the <code>rich_help_panel</code> parameter when defining the command. This will add a new section to the help output with the given name we chose.</p> <pre><code>RICH_HELP_PANEL = \"My custom commands\"\n\n@app.command(name=\"my_command\", rich_help_panel=RICH_HELP_PANEL)\ndef my_command() -&gt; None:\n    \"\"\"Short description of the command.\n\n    Longer description going over the command in more detail.\n    \"\"\"\n    print(\"Hello, world!\")\n</code></pre> <p>The command will now be added to its own category in the help output:</p> <p>Invoking <code>zabbix-cli my_command --help</code> shows the long description we provided:</p>"},{"location":"plugins/guide/#printing-messages","title":"Printing messages","text":"<p>One of the most common operations in a CLI is printing messages to the console. The application provides several convience methods for printing messages to the console with specific formatting, which we can use in our commands to print messages consistent with the rest of the application. These are:</p> <ul> <li><code>zabbix_cli.output.console.success</code></li> <li><code>zabbix_cli.output.console.info</code></li> <li><code>zabbix_cli.output.console.warning</code></li> <li><code>zabbix_cli.output.console.error</code></li> </ul> <p>As well as Rich Console objects for stdout and stderr for more advanced formatting:</p> <ul> <li><code>zabbix_cli.output.console.console</code></li> <li><code>zabbix_cli.output.console.err_console</code></li> </ul> <p>We can use these to print to the console like this:</p> <pre><code>from zabbix_cli.app import app\nfrom zabbix_cli.output.console import success\nfrom zabbix_cli.output.console import info\nfrom zabbix_cli.output.console import warning\nfrom zabbix_cli.output.console import error\nfrom zabbix_cli.output.console import err_console\nfrom zabbix_cli.output.console import console\n\n\n@app.command(name=\"my_command\")\ndef my_command() -&gt; None:\n    success(\"Success message\")\n    info(\"Info message\")\n    warning(\"Warning message\")\n    error(\"Error message\")\n    err_console.print(\"Error message\")\n    console.print(\"Output of some sort\")\n</code></pre> <p>This will print messages to the console using the same formatting as the built-in commands:</p>"},{"location":"plugins/guide/#command-arguments","title":"Command arguments","text":"<p>In general, it is best to refer to the Typer documentation when it comes to defining command arguments. However, a minimal example is provided here, showing how to define a command with a positional argument and a named option and use them to interact with the Zabbix API client:</p> <pre><code>from typing import Optional\n\nimport typer\nfrom zabbix_cli.app import app\nfrom zabbix_cli.render import render_result\n\n# Define a new command\n@app.command(name=\"my_command\")\ndef my_command(\n    arg1: str = typer.Argument(help=\"Some positional argument\"),\n    opt1: Optional[str] = typer.Option(None, \"--opt1\", \"-O\", help=\"Some named option\"),\n) -&gt; None:\n    \"\"\"Short description of the command.\"\"\"\n    # We can use the Zabbix API client\n    host = app.state.client.get_host(arg1)\n\n    # We can use the same rendering machinery as the built-in commands\n    render_result(host)\n</code></pre>"},{"location":"plugins/guide/#post-import-configuration","title":"Post-import configuration","text":"<p>The module can define a function called <code>__configure__</code> that will be called after the application has finished its own configuration. This function can be used to perform any necessary setup or configuration that the plugin requires. The function takes a single <code>PluginConfig</code> argument.</p> <pre><code>from zabbix_cli.app import app\nimport logging\n\nlogger = logging.getLogger(__name__)\n\ndef __configure__(config: PluginConfig) -&gt; None:\n    logger.info(f\"Running post-import configuration for {config.module}\")\n\n    # We can access anything we need from the application state as long as the plugin module imports `zabbix_cli.app.app`\n\n    # Set custom HTTP headers\n    app.state.client.session.headers[\"X-Plugin-Header\"] = \"Some value\"\n\n    # Ensure that a certain configuration key is set\n    app.state.config.api.legacy_json_format = False\n</code></pre> <p>You are free to perform any configuration you want in the <code>__configure__</code> function. However, be aware that modifying certain config options, especially those found in <code>app.state.config.api</code>, will not have any effect on the rest of the application. By the time <code>__configure__</code> is called, the application has already configured the API client.</p>"},{"location":"plugins/guide/#configuration-file","title":"Configuration file","text":"<p>Plugins are configured in the application's configuration file. Given that we have a plugin named <code>my_plugin</code>, its configuration file entry should look like this:</p> <pre><code>[plugins.my_plugin]\n</code></pre> <p>Depending on whether you are writing a local or external plugin, the configuration requires different options. External plugins do not require any configuration by default, while local plugins must have a <code>module</code> key defined.</p>"},{"location":"plugins/guide/#module_1","title":"<code>module</code>","text":"<p>Local plugins must define this key. Its value can be a module path or a a file path. If using a file path, it is highly recommended to use an absolute path.</p> <pre><code>[plugins.my_plugin]\nmodule = \"/path/to/my_plugin/my_plugin.py\"\n# OR\n# module = \"path.to.my_plugin\"\n</code></pre>"},{"location":"plugins/guide/#enabled","title":"<code>enabled</code>","text":"<p>Enable or disable plugin. Plugins are enabled by default unless otherwise specified.</p> <pre><code>[plugins.my_plugin]\nenabled = false\n</code></pre>"},{"location":"plugins/guide/#optional","title":"<code>optional</code>","text":"<p>Mark a plugin as optional, meaning the application will not exit if the plugin module cannot be imported. This is useful for plugins that are not required for the application to function. Plugins are not optional by default.</p> <pre><code>[plugins.my_plugin]\noptional = true\n</code></pre>"},{"location":"plugins/guide/#extra-options","title":"Extra options","text":"<p>The plugin configuration can contain any number of extra options that the plugin module can access. These options can be accessed through the <code>PluginConfig</code> object that is passed to the <code>__configure__</code> function.</p> <pre><code>[plugins.my_plugin]\nmodule = \"path.to.my_plugin\"\nextra_option_str = \"foo\"\nextra_option_int = 42\nextra_option_list = [\"a\", \"b\", \"c\"]\n</code></pre> <p>The <code>PluginConfig.get()</code> method can be used to retrieve the value of these extra options. The method takes the key of the option as the first argument, and an optional default value as the second argument. The method also takes an optional type hint as the third argument <code>type</code>.</p> <pre><code>from zabbix_cli.app import app\nfrom zabbix_cli.config.model import PluginConfig\n\n\ndef __configure__(config: PluginConfig) -&gt; None:\n    # Access extra options\n    opt1 = config.get(\"extra_option_str\")\n\n    # Validate the type of the option\n    # Also lets type checkers know the type of the variable\n    opt1 = config.get(\"extra_option_str\", type=str)\n\n    # Types are optional\n    opt2 = config.get(\"extra_option_int\")\n    # reveal_type(opt2) # reveals Any because no type hint\n    # Types from the TOML file are preserved\n    assert isinstance(opt2, int)\n\n    # We can validate more complex types too\n    opt4 = config.get(\"extra_option_list\", type=list[str])\n    # reveal_type(opt4) # reveals list[str]\n\n    # We can also provide a default value\n    opt4 = config.get(\"non_existent_option\", \"default\")\n    assert opt4 == \"default\"\n\n    # Type hints are supported here too\n    opt5 = config.get(\"non_existent_option\", \"default\", type=str)\n    # reveal_type(opt5) # reveals str\n    assert opt5 == \"default\"\n\n    # Use our config options:\n    app.state.client.session.headers[\"X-Plugin-Header\"] = config.get(\n        \"extra_option_str\", type=str\n    )\n</code></pre> <p>Tip</p> <p>Providing a type for the <code>get()</code> method will also give you better auto completion and type checking in your editor.</p>"},{"location":"plugins/guide/#accessing-plugin-configuration-from-commands","title":"Accessing plugin configuration from commands","text":"<p>Inside commands, the plugin's configuration can be accessed through the <code>app.get_plugin_config()</code> method.</p> <p>The name of the plugin, as denoted by its <code>[plugins.&lt;name&gt;]</code> key, is passed as the argument to the method. If no configuration can be found, an empty <code>PluginConfig</code> object is returned.</p> <p>Given the following configuration:</p> <pre><code>[plugins.my_plugin]\n</code></pre> <p>We can access its configuration like this:</p> <pre><code>from zabbix_cli.app import app\n\n\n@app.command()\ndef my_command() -&gt; None:\n    config = app.get_plugin_config(\"my_plugin\")\n</code></pre> <p>Note</p> <p>Should no config be available, an empty <code>PluginConfig</code> is returned. This is to facilitate external plugins that do not require a configuration to be defined.</p>"},{"location":"plugins/guide/#advanced","title":"Advanced","text":""},{"location":"plugins/guide/#rendering","title":"Rendering","text":"<p>Most zabbix-cli commands render a table or JSON depdening on the active output format. The functionality that powers this is the <code>zabbix_cli.models.TableRenderable</code> class. This class is a Pydantic model that can be subclassed and used to define data models that the application can render.</p> <pre><code>from typing import List\n\nfrom zabbix_cli.models import TableRenderable\nfrom zabbix_cli.output.render import render_result\n\n\nclass MyModel(TableRenderable):\n    host: str\n    status: str\n    ip: str\n    templates: List[str]\n\n\n@app.command(name=\"my_command\")\ndef my_command() -&gt; None:\n    m = MyModel(\n        host=\"foo.example.com\",\n        status=\"Good\",\n        ip=\"192.168.0.2\",\n        templates=[\"Template OS Linux\", \"Template App MySQL\"],\n    )\n    render_result(m)\n</code></pre> <p>Invoking the command will render the model as a table:</p> <pre><code>zabbix-cli my_command\n</code></pre> <p></p> <p>Adding <code>-o json</code> will render the model as JSON:</p> <pre><code>zabbix-cli -o json my_command\n</code></pre> <pre><code>{\n  \"message\": \"\",\n  \"errors\": [],\n  \"return_code\": \"Done\",\n  \"result\": {\n    \"host\": \"foo.example.com\",\n    \"status\": \"Good\",\n    \"ip\": \"192.168.0.2\",\n    \"templates\": [\n      \"Template OS Linux\",\n      \"Template App MySQL\"\n    ]\n  }\n}\n</code></pre>"},{"location":"plugins/guide/#field-level-customization","title":"Field-level customization","text":"<p>By default, column headers and cells are determined by the field names and values of the model. We can customize this behavior by adding metadata to the model fields using something called \"Meta Keys\". These are special keys that can be added to the <code>json_schema_extra</code> dict of a field to change how it is rendered.</p>"},{"location":"plugins/guide/#column-headers","title":"Column headers","text":"<p>If we just want to change the column header for a single field, we can pass a <code>zabbix_cli.models.MetaKey</code> object to the field's <code>json_schema_extra</code> dict when defining it:</p> <pre><code>from pydantic import Field\nfrom zabbix_cli.models import MetaKey\nfrom zabbix_cli.models import TableRenderable\n\n\nclass MyModel(TableRenderable):\n    host: str\n    status: str\n    ip: str = Field(..., json_schema_extra={MetaKey.HEADER: \"IP Address\"})\n    templates: List[str]\n</code></pre> <p>This will change the column header for the <code>ip</code> field to \"IP Address\":</p> <p></p>"},{"location":"plugins/guide/#lists","title":"Lists","text":"<p>Lists are rendered as newline-separated strings by default. We can change this by passing a <code>zabbix_cli.models.MetaKey</code> object to the field's <code>json_schema_extra</code> dict with the <code>MetaKey.JOIN_CHAR</code> key set to the desired separator:</p> <pre><code>from pydantic import Field\nfrom zabbix_cli.models import MetaKey\nfrom zabbix_cli.models import TableRenderable\n\nclass MyModel(TableRenderable):\n    host: str\n    status: str\n    ip: str\n    templates: List[str] = Field(..., json_schema_extra={MetaKey.JOIN_CHAR: \", \"})\n</code></pre> <p>This will render the <code>templates</code> field as a comma-separated string:</p> <p></p>"},{"location":"plugins/guide/#example","title":"Example","text":"<p>A complete example of a plugin that defines a new command and uses the plugin configuration to set a custom HTTP header on the Zabbix API client:</p> <pre><code># /path/to/my_plugin.py\nfrom __future__ import annotations\n\nfrom typing import Optional\n\nimport typer\nfrom zabbix_cli.app import app\nfrom zabbix_cli.render import render_result\n\n# Header for the rich help panel shown in the --help output\nCATEGORY = \"My custom commands\"\n\ndef __configure__(config: PluginConfig) -&gt; None:\n    app.state.client.session.headers[\"X-Plugin-Header\"] = config.get(\"extra_option_str\", type=str)\n\n\n@app.command(name=\"my_command\", rich_help_panel=CATEGORY)\ndef my_command(\n    arg1: str = typer.Argument(help=\"Some positional argument\"),\n    opt1: Optional[str] = typer.Option(None, \"--opt1\", \"-O\", help=\"Some named option\"),\n) -&gt; None:\n    \"\"\"Short description of the command.\"\"\"\n    host = app.state.client.get_host(arg1)\n    render_result(host)\n</code></pre> <p>And the corresponding configuration:</p> <pre><code>[plugins.my_plugin]\nmodule = \"path.to.my_plugin\"\nenabled = true\noptional = false\nextra_option_str = \"foo\"\n</code></pre> <p>An example of an external plugin with several commands, tests, and a <code>pyproject.toml</code> file can be found here: https://github.com/pederhan/zabbix-cli-plugin-entrypoint</p>"},{"location":"plugins/guide/#performance","title":"Performance","text":"<p>The application at large makes use of inline imports inside functions to improve the startup time of the application. For the most part, the modules that are most the important to lazily import are ones that define Pydantic models. In order of performance impact, they are:</p> <ol> <li><code>zabbix_cli.pyzabbix.types</code></li> <li><code>zabbix_cli.pyzabbix.models</code></li> <li><code>zabbix_cli.commands.results</code></li> </ol>"},{"location":"plugins/guide/#inline-imports","title":"Inline imports","text":"<p>Consider creating a separate module for your own models that you can import inside your commands that need them. This will prevent a cascade of imports that can add several hundred milliseconds of startup time to the application. Pydantic is notoriously slow at defining models, so avoiding importing these modules until they are needed is crucial.</p> <p>BEFORE</p> <pre><code># /path/to/my_plugin.py\nimport typer\nfrom zabbix_cli.app import app\nfrom zabbix_cli.models import TableRenderable\nfrom zabbix_cli.output.render import render_result\nfrom zabbix_cli.pyzabbix.types import Host\n\n\nclass MyModel(TableRenderable):\n    host: Host\n\n\n@app.command(name=\"my_command\")\ndef my_command(ctx: typer.Context, name: str = typer.Argument()) -&gt; None:\n    host = app.state.client.get_host(name)\n    model = MyModel(host=host, foo=\"foo\", bar=42)\n    render_result(model)\n</code></pre> <p>AFTER</p> <pre><code># /path/to/models.py\n\nfrom zabbix_cli.models import TableRenderable\nfrom zabbix_cli.pyzabbix.types import Host\n\nclass MyModel(TableRenderable):\n    host: Host\n    foo: str\n    bar: int\n\n# /path/to/plugin.py\nimport typer\nfrom zabbix_cli.app import app\nfrom zabbix_cli.output.render import render_result\n\n\n\n@app.command(name=\"my_command\")\ndef my_command(ctx: typer.Context, name: str = typer.Argument()) -&gt; None:\n    from .models import MyModel # or use absolute import\n    host = app.state.client.get_host(name)\n    model = MyModel(host=host, foo=\"foo\", bar=42)\n    render_result(model)\n</code></pre>"},{"location":"plugins/guide/#profiling","title":"Profiling","text":"<p>Warning</p> <p><code>py-spy</code> does not support Python 3.12 at the time of writing.</p> <p>Consider using <code>py-spy</code> to profile the application before you package and distribute your plugin to ensure that it does not have a significant impact on the application's startup time. Profiling <code>--help</code> lets us profile the application startup time before any network I/O can occur.</p> <p>Install <code>py-spy</code> with:</p> <pre><code>pip install py-spy\n</code></pre> <p>We can then use <code>py-spy</code> to profile the different imports the application performs and generate an SVG file:</p> <pre><code>sudo py-spy record --subprocesses -o profile.svg --format speedscope -- zabbix-cli --help\n</code></pre> <p>The generated SVG file can be viewed on its own, or uploaded to the speedscope web application for a more interactive experience.</p> Visual profiling with speedscope <p>The width of a bar indicates the time in milliseconds the given import adds, while its height indicates the number of stack frames generated as a result. A wide bar indicates a slow import, and can often be traced back to a cascade of numerous dependent imports and/or specific time-consuming imports.</p>"},{"location":"plugins/local-plugins/","title":"Local plugins","text":"<p>Important</p> <p>This page assumes you have read the Writing plugins page to understand the basics of writing plugins.</p> <p>A local plugin is a Python module that is loaded by the application on startup. It must be manually configured in the configuration file for the application to find it.</p>"},{"location":"plugins/local-plugins/#directory-structure","title":"Directory structure","text":"<p>Given your plugin is structured like this:</p> <pre><code>/path/to/\n\u2514\u2500\u2500 my_plugin/\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 plugin.py\n</code></pre> <p>You can add the following to your configuration file:</p> <pre><code>[plugins.my_plugin]\nmodule = \"/path/to/my_plugin/plugin.py\"\n# or\n# module = \"my_plugin.plugin\"\n</code></pre> <p>An absolute path to the plugin file is preferred, but a Python module path can also be used. The differences are outlined below.</p>"},{"location":"plugins/local-plugins/#file-path","title":"File path","text":"<p>It is recommended to use an absolute path to the plugin file. This ensures that the application can find the plugin regardless of the current working directory. The path should point to the plugin file itself, not the directory containing it.</p>"},{"location":"plugins/local-plugins/#module-path","title":"Module path","text":"<p>One can also use a Python module path to the plugin file. This is useful if the plugin is part of a larger Python package. The path must be available in the Python path (<code>$PYTHONPATH</code>) for the application to find it. The import path can point to the plugin file itself or the directory containing it as long as <code>__init__.py</code> is present and imports the plugin file.</p>"}]}